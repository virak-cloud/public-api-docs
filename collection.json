{
    "variable": [
        {
            "id": "baseUrl",
            "key": "baseUrl",
            "type": "string",
            "name": "string",
            "value": "https:\/\/public-api.virakcloud.com"
        }
    ],
    "info": {
        "name": "Virak Cloud API",
        "_postman_id": "a9aba48e-7db0-45fb-90db-894e827d5310",
        "description": "<P>\n    Welcome to the Virak Cloud API documentation.\n    Virak Cloud API is a comprehensive RESTful API that empowers developers to programmatically manage and interact with cloud infrastructure resources.\n    This API provides secure, scalable endpoints for managing virtual instances, networks, Kubernetes clusters, object storage, DNS records, and more. Built with enterprise-grade security and reliability, the Virak Cloud API enables seamless automation and integration with your existing workflows and applications.\n    <p>For detailed guides and advanced documentation, visit the <a href=\"https:\/\/docs.virakcloud.com\/fa\/guides\/\" target=\"_blank\">VirakCloud Documentation<\/a>.<\/p>\n    <a href=\"https:\/\/github.com\/virak-cloud\/public-api-docs\"> <img src=\"https:\/\/img.shields.io\/badge\/github-%23181717.svg?&style=for-the-badge&logo=github&logoColor=white\" alt=\"github icon\" title=\"github icon\"><\/a>\n<\/P>",
        "schema": "https:\/\/schema.getpostman.com\/json\/collection\/v2.1.0\/collection.json"
    },
    "item": [
        {
            "name": "Datacenter",
            "description": "",
            "item": [
                {
                    "name": "Zone List",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "\/zones",
                            "query": [],
                            "raw": "{{baseUrl}}\/zones"
                        },
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": null,
                        "description": " <aside class=\"notice\">need <small class=\"badge\">zone:list<\/small> ability for api token<\/aside>"
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{\"data\":[{\"id\":\"string\",\"name\":\"string\",\"location\":\"string\",\"active\":true},{\"id\":\"string\",\"name\":\"string\",\"location\":\"string\",\"active\":true}]}",
                            "name": "Successful response"
                        }
                    ]
                },
                {
                    "name": "Zone Active Services",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "\/zone\/:zoneId",
                            "query": [],
                            "raw": "{{baseUrl}}\/zone\/:zoneId",
                            "variable": [
                                {
                                    "id": "zoneId",
                                    "key": "zoneId",
                                    "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                    "description": "The ID of the zone."
                                }
                            ]
                        },
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": null,
                        "description": " <aside class=\"notice\">need <small class=\"badge\">zone:show<\/small> ability for api token<\/aside>"
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{\n    \"Instance\": true,\n    \"DataVolume\": true,\n    \"Network\": true,\n    \"ObjectStorage\": true,\n    \"K8s\": false\n}",
                            "name": "Successful response"
                        }
                    ]
                },
                {
                    "name": "Customer Resource",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "\/zone\/:zoneId\/resources",
                            "query": [],
                            "raw": "{{baseUrl}}\/zone\/:zoneId\/resources",
                            "variable": [
                                {
                                    "id": "zoneId",
                                    "key": "zoneId",
                                    "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                    "description": "The ID of the zone."
                                }
                            ]
                        },
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": null,
                        "description": " <aside class=\"notice\">need <small class=\"badge\">zone:resource:list<\/small> ability for api token<\/aside>"
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{\n    \"instance_resource_collected\": {\n        \"memory\": {\n            \"collected\": 0,\n            \"total\": 40960\n        },\n        \"cpunumber\": {\n            \"collected\": 0,\n            \"total\": 40\n        },\n        \"datavolume\": {\n            \"collected\": 10,\n            \"total\": 200\n        },\n        \"vmlimit\": {\n            \"collected\": 0,\n            \"total\": 20\n        }\n    }\n}",
                            "name": "Successful response"
                        }
                    ]
                }
            ]
        },
        {
            "name": "User",
            "description": "",
            "item": [
                {
                    "name": "User Profile",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "\/user\/profile",
                            "query": [],
                            "raw": "{{baseUrl}}\/user\/profile"
                        },
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": null,
                        "description": " <aside class=\"notice\">need <small class=\"badge\">customer:profile:show<\/small> ability for api token<\/aside>"
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{\n    \"data\": {\n        \"id\": \"ID_PLACEHOLDER\",\n        \"name\": \"NAME_PLACEHOLDER\",\n        \"language\": \"LANGUAGE_PLACEHOLDER\",\n        \"national_code\": \"NATIONAL_CODE_PLACEHOLDER\",\n        \"email\": \"EMAIL_PLACEHOLDER\",\n        \"phone\": \"PHONE_PLACEHOLDER\",\n        \"country\": null,\n        \"state\": null,\n        \"city\": null,\n        \"address\": null,\n        \"zip\": null,\n        \"website\": null,\n        \"extra\": {\n            \"referral_code\": null\n        },\n        \"status\": \"STATUS_PLACEHOLDER\",\n        \"type\": \"TYPE_PLACEHOLDER\",\n        \"created_at\": \"CREATED_AT_PLACEHOLDER\",\n        \"updated_at\": \"UPDATED_AT_PLACEHOLDER\",\n        \"customer_zones_count\": null,\n        \"instances_count\": null,\n        \"payments_count\": null,\n        \"wallets_count\": null,\n        \"invite_code\": \"INVITE_CODE_PLACEHOLDER\",\n        \"invited_by_me\": 0,\n        \"picture\": \"PICTURE_URL_PLACEHOLDER\"\n    }\n}",
                            "name": "Successful response"
                        }
                    ]
                },
                {
                    "name": "Token validation",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "\/user\/token",
                            "query": [],
                            "raw": "{{baseUrl}}\/user\/token"
                        },
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": null,
                        "description": ""
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 204,
                            "body": null,
                            "name": "Success Response"
                        }
                    ]
                },
                {
                    "name": "Token Abilities",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "\/user\/token-abilities",
                            "query": [],
                            "raw": "{{baseUrl}}\/user\/token-abilities"
                        },
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": null,
                        "description": ""
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{\"abilities\": [\"ability1\", \"ability2\", ...]}",
                            "name": "Success Response"
                        }
                    ]
                },
                {
                    "name": "SSH-Key",
                    "description": "",
                    "item": [
                        {
                            "name": "SSH key list",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/user\/ssh-key",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/user\/ssh-key"
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": null,
                                "description": " <aside class=\"notice\">need <small class=\"badge\">ssh-key:list<\/small> ability for api token<\/aside>"
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "{\n    \"userData\": [\n        {\n            \"id\": \"placeholder_id_1\",\n            \"display_name\": \"User One\",\n            \"datakey\": \"ssh-authorized-keys\",\n            \"datavalue\": \"ssh-rsa AAAA...== user1@example.com\",\n            \"created_at\": \"2024-01-01T00:00:00.000000Z\"\n        },\n        {\n            \"id\": \"placeholder_id_2\",\n            \"display_name\": \"User Two\",\n            \"datakey\": \"ssh-authorized-keys\",\n            \"datavalue\": \"ssh-rsa AAAA...== user2@example.com\",\n            \"created_at\": \"2024-01-02T00:00:00.000000Z\"\n        }\n    ]\n}",
                                    "name": "Successful response"
                                }
                            ]
                        },
                        {
                            "name": "Add new SSH Keys",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/user\/ssh-key",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/user\/ssh-key"
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\"name\":\"My SSH Key\",\"ssh_key\":\"ssh-rsa AAAA...== user@example.com\"}"
                                },
                                "description": " <aside class=\"notice\">need <small class=\"badge\">ssh-key:create<\/small> ability for api token<\/aside>\n <b>Note:<\/b> This function runs asynchronously in the background. The response will be:<br>\n <pre>{\n   \"data\": {\n       \"success\": true\n   }\n }<\/pre>\n To check the status of the created ssh Key, use the <b>SSH key list<\/b> endpoint.\n"
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "{\n    \"data\": {\n        \"success\": true\n    }\n}",
                                    "name": "Successful response"
                                }
                            ]
                        },
                        {
                            "name": "Delete SSH Key",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/user\/ssh-key\/:sshKeyId",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/user\/ssh-key\/:sshKeyId",
                                    "variable": [
                                        {
                                            "id": "sshKeyId",
                                            "key": "sshKeyId",
                                            "value": "4GMw8bTrPN7sQFGP3z6A1SDGh6",
                                            "description": ""
                                        }
                                    ]
                                },
                                "method": "DELETE",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": null,
                                "description": " <aside class=\"notice\">need <small class=\"badge\">ssh-key:delete<\/small> ability for api token<\/aside>\n\n"
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "{\n    \"data\": {\n        \"success\": true\n    }\n}",
                                    "name": "Successful response"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Finance",
                    "description": "",
                    "item": [
                        {
                            "name": "Wallets Balance",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/user\/finance\/wallet",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/user\/finance\/wallet"
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": null,
                                "description": " <aside class=\"notice\">need <small class=\"badge\">customer:wallet:balance<\/small> ability for api token<\/aside>"
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "{\n    \"data\": {\n        \"name\": \"WALLET_NAME_PLACEHOLDER\",\n        \"track\": \"TRACK_PLACEHOLDER\",\n        \"type\": \"TYPE_PLACEHOLDER\",\n        \"balance\": 0,\n        \"balance_limit\": 0,\n        \"is_blocked\": false,\n        \"max_cost\": 0,\n        \"remaining_hours\": 0,\n        \"updated_at\": \"DATE_PLACEHOLDER\"\n    }\n}",
                                    "name": "Successful response"
                                }
                            ]
                        },
                        {
                            "name": "Cost Documents Yearly",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/user\/finance\/documents",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/user\/finance\/documents"
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\"year\":2025}"
                                },
                                "description": " <aside class=\"notice\">need <small class=\"badge\">customer:document:list<\/small> ability for api token<\/aside>"
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "{\n    \"data\": [\n        {\n            \"dateFrom\": \"DATE_FROM_PLACEHOLDER\",\n            \"dateTo\": \"DATE_TO_PLACEHOLDER\",\n            \"Instance\": 0,\n            \"NetworkTraffic\": 0,\n            \"InstanceSnapshot\": 0,\n            \"InstanceDataVolumes\": 0,\n            \"SupportOfferings\": 0,\n            \"NetworkInternetPublicAddressV4\": 0,\n            \"NetworkDevice\": 0,\n            \"InstanceNetworkSecondaryIpAddressV4\": 0,\n            \"BucketSize\": 0,\n            \"BucketDownloadTraffic\": 0,\n            \"BucketUploadTraffic\": 0,\n            \"KubernetesNode\": 0\n        }\n    ]\n}",
                                    "name": "Successful response"
                                }
                            ]
                        },
                        {
                            "name": "Payment List",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/user\/finance\/payments",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/user\/finance\/payments"
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": null,
                                "description": " <aside class=\"notice\">need <small class=\"badge\">customer:payment:list<\/small> ability for api token<\/aside>"
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "{\n    \"data\": []\n}",
                                    "name": "Successful response"
                                }
                            ]
                        },
                        {
                            "name": "Expense List",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/user\/finance\/expenses",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/user\/finance\/expenses"
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\"product_type\":\"BucketUploadTraffic\",\"product_id\":\"01k53jsbp0bc08tq02694xpetf\",\"page\":1}"
                                },
                                "description": " <aside class=\"notice\">need <small class=\"badge\">customer:expense:list<\/small> ability for api token<\/aside>"
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "{\n    \"data\": [\n        {\n            \"id\": \"01k53kmw215q40x39eeejcpwen\",\n            \"from\": \"1404-06-23 11:27:16\",\n            \"amount\": 5107,\n            \"documented\": true,\n            \"metadata\": {\n                \"name\": \"bucket-name\",\n                \"traffic\": 51,\n                \"type\": \"BucketUploadTraffic\",\n                \"tier\": \"low-tier\"\n            }\n        }\n    ],\n     \"meta\": {\n        \"current_page\": 1,\n        \"from\": 1,\n        \"last_page\": 1,\n        \"per_page\": 50,\n        \"to\": 26,\n        \"total\": 26\n    }\n}",
                                    "name": "Successful response"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "name": "Instance",
            "description": "\n<div class='sl-prose'>\n<p>An <b>Instance<\/b> represents a virtual machine (VM) or compute resource provisioned in a specific zone. Instances are the core compute units in the cloud platform, allowing users to run applications, host services, and manage workloads. Each instance is created from a template or image, has its own resources (CPU, memory, disk), and can be managed through various lifecycle operations.<\/p>\n\n<p><b>Key Concepts:<\/b><\/p>\n<ul>\n   <li><b>Instance:<\/b> A virtual machine or compute resource, including its configuration, status, and metadata.<\/li>\n   <li><b>Zone:<\/b> A physical or logical location where instances are provisioned. Each instance belongs to a zone.<\/li>\n   <li><b>VM Image:<\/b> The template or image used to create the instance, defining its operating system and base software.<\/li>\n   <li><b>Service Offering:<\/b> Defines the hardware resources (CPU, memory, disk, network) allocated to the instance.<\/li>\n   <li><b>Volume:<\/b> Persistent storage that can be attached to or detached from an instance.<\/li>\n   <li><b>Snapshot:<\/b> A point-in-time backup of an instance's volume, which can be created, deleted, or reverted.<\/li>\n   <li><b>Status:<\/b> The current state of the instance (e.g., 'Running', 'Stopped', 'Starting', 'Stopping', 'Error').<\/li>\n   <li><b>Metadata:<\/b> Custom key-value data associated with the instance.<\/li>\n<\/ul>\n\n<p><b>Instance Functionalities:<\/b><\/p>\n<ul>\n   <li>List all instances in a zone for the authenticated user.<\/li>\n   <li>Create, delete, and manage snapshots for instances.<\/li>\n   <li>Attach, detach, create, and delete volumes for instances.<\/li>\n   <li>Retrieve detailed information about each instance, including configuration, status, and related resources.<\/li>\n<\/ul>\n\n<p><b>Instance Statuses:<\/b><\/p>\n<ul>\n   <li><b>Running:<\/b> Instance is active and operational.<\/li>\n   <li><b>Stopped:<\/b> Instance is powered off.<\/li>\n   <li><b>Starting:<\/b> Instance is in the process of starting up.<\/li>\n   <li><b>Stopping:<\/b> Instance is in the process of shutting down.<\/li>\n   <li><b>Error:<\/b> Instance encountered an error during an operation.<\/li>\n<\/ul>\n<\/div>",
            "item": [
                {
                    "name": "Index",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "\/zone\/:zoneId\/instance",
                            "query": [],
                            "raw": "{{baseUrl}}\/zone\/:zoneId\/instance",
                            "variable": [
                                {
                                    "id": "zoneId",
                                    "key": "zoneId",
                                    "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                    "description": "The ID of the zone."
                                }
                            ]
                        },
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": null,
                        "description": " <aside class=\"notice\">need <small class=\"badge\">instance:list<\/small> ability for api token<\/aside>"
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{\"data\":[{\"id\":\"string\",\"name\":\"string\",\"created\":true,\"template_id\":null,\"vm_image\":{\"id\":\"string\",\"type\":\"string\",\"name\":\"string\",\"is_available\":true,\"display_text\":\"string\",\"name_orginal\":\"string\",\"ready_to_use_app\":false,\"ready_to_use_app_name\":null,\"ready_to_use_app_version\":null,\"os_type\":\"string\",\"os_name\":\"string\",\"os_version\":\"string\",\"hardware_requirement\":{\"cpunumber\":1,\"cpuspeed\":500,\"memory\":500,\"rootdisksize\":25},\"category\":\"string\"},\"zone\":{\"id\":\"string\",\"name\":\"string\",\"location\":\"string\",\"is_public\":true,\"is_featured\":true,\"is_ready\":true},\"service_offering\":{\"id\":\"string\",\"name\":\"string\",\"has_image_requirement\":null,\"is_available\":true,\"is_public\":true,\"suggested\":false,\"category\":\"string\",\"hourly_price\":{\"up\":0,\"down\":0},\"hourly_price_no_discount\":{\"up\":0,\"down\":0},\"description\":null,\"hardware\":{\"cpu_core\":1,\"memory_mb\":512,\"cpu_speed_MHz\":1000,\"root_disk_size_gB\":30,\"network_rate\":200,\"disk_iops\":2500}},\"disk_offering_id\":null,\"service_offering_id\":\"string\",\"status\":\"string\",\"instance_status\":\"string\",\"password\":\"string\",\"username\":\"string\",\"created_at\":1234567890,\"updated_at\":1234567890,\"metadata\":[],\"kubernetes_cluster_id\":null,\"data_volumes\":[],\"snapshot\":[]}]}",
                            "name": "Successful response"
                        }
                    ]
                },
                {
                    "name": "List Instance Service Offerings",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "\/zone\/:zoneId\/instance\/service-offerings",
                            "query": [],
                            "raw": "{{baseUrl}}\/zone\/:zoneId\/instance\/service-offerings",
                            "variable": [
                                {
                                    "id": "zoneId",
                                    "key": "zoneId",
                                    "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                    "description": "The ID of the zone."
                                }
                            ]
                        },
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": null,
                        "description": " <aside class=\"notice\">need <small class=\"badge\">instance:metrics<\/small> ability for api token<\/aside>"
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{\"data\": [\n        {\"id\": \"instance_service_offering_id_1\", \"name\": \"Instance Type A\", \"has_image_requirement\": null, \"is_available\": true, \"is_public\": true, \"suggested\": false, \"category\": \"CPU\", \"hourly_price\": {\"up\": 10000, \"down\": 10000}, \"hourly_price_no_discount\": {\"up\": 15000, \"down\": 15000}, \"description\": \"CPU: 1 Core <\/br> Ram: 1 GB <\/br> Storage: 25 GB\", \"hardware\": {\"cpu_core\": 1, \"memory_mb\": 1024, \"cpu_speed_MHz\": 1000, \"root_disk_size_gB\": 25, \"network_rate\": 200, \"disk_iops\": 2500}},\n        {\"id\": \"instance_service_offering_id_2\", \"name\": \"Instance Type B\", \"has_image_requirement\": null, \"is_available\": true, \"is_public\": true, \"suggested\": true, \"category\": \"MEMORY\", \"hourly_price\": {\"up\": 20000, \"down\": 20000}, \"hourly_price_no_discount\": {\"up\": 25000, \"down\": 25000}, \"description\": \"CPU: 2 Core <\/br> Ram: 4 GB <\/br> Storage: 50 GB\", \"hardware\": {\"cpu_core\": 2, \"memory_mb\": 4096, \"cpu_speed_MHz\": 2000, \"root_disk_size_gB\": 50, \"network_rate\": 400, \"disk_iops\": 5000}}\n    ]}",
                            "name": "List of instance service offerings (anonymized)."
                        }
                    ]
                },
                {
                    "name": "List Instance VM Image Service Offerings",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "\/zone\/:zoneId\/instance\/vm-images",
                            "query": [],
                            "raw": "{{baseUrl}}\/zone\/:zoneId\/instance\/vm-images",
                            "variable": [
                                {
                                    "id": "zoneId",
                                    "key": "zoneId",
                                    "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                    "description": "The ID of the zone."
                                }
                            ]
                        },
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": null,
                        "description": " <aside class=\"notice\">need <small class=\"badge\">instance:metrics<\/small> ability for api token<\/aside>"
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{\"data\": [\n        {\"id\": \"vm_image_id_1\", \"type\": \"TEMPLATE\", \"name\": \"Linux Template A\", \"is_available\": true, \"display_text\": \"Linux Template A\", \"name_orginal\": \"linux OS A\", \"ready_to_use_app\": true, \"ready_to_use_app_name\": \"AppA\", \"ready_to_use_app_version\": \"1.0\", \"os_type\": \"linux\", \"os_name\": \"LinuxOS\", \"os_version\": \"1.0\", \"hardware_requirement\": {\"cpunumber\": 1, \"cpuspeed\": 1000, \"memory\": 1024, \"rootdisksize\": 25}, \"category\": \"GENERAL\"},\n        {\"id\": \"vm_image_id_2\", \"type\": \"TEMPLATE\", \"name\": \"Windows Template B\", \"is_available\": true, \"display_text\": \"Windows Template B\", \"name_orginal\": \"windows OS B\", \"ready_to_use_app\": false, \"ready_to_use_app_name\": null, \"ready_to_use_app_version\": null, \"os_type\": \"windows\", \"os_name\": \"WindowsOS\", \"os_version\": \"2.0\", \"hardware_requirement\": {\"cpunumber\": 2, \"cpuspeed\": 2000, \"memory\": 2048, \"rootdisksize\": 50}, \"category\": \"GENERAL\"}\n    ]}",
                            "name": "List of instance VM image service offerings (anonymized)."
                        }
                    ]
                },
                {
                    "name": "Create Instance",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "\/zone\/:zoneId\/instance",
                            "query": [],
                            "raw": "{{baseUrl}}\/zone\/:zoneId\/instance",
                            "variable": [
                                {
                                    "id": "zoneId",
                                    "key": "zoneId",
                                    "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                    "description": "The ID of the zone."
                                }
                            ]
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\"service_offering_id\":\"01H9ZCNF46W6C1EM45T21B6M0G\",\"vm_image_id\":\"01H9ZCNF46W6C1EM45T21B6M0H\",\"network_ids\":[\"01H9ZCNF46W6C1EM45T21B6M0N\"],\"name\":\"my-instance\"}"
                        },
                        "description": "  <aside class=\"notice\">need <small class=\"badge\">instance:create<\/small> ability for api token<\/aside>\n  <b>Note:<\/b> This function runs asynchronously in the background. The response will be:<br>\n  <pre>{\n    \"data\": {\n        \"success\": true\n    }\n  }<\/pre>\n  To check the status of the created instance, use the <b>List Instance<\/b> endpoint and review the <code>status<\/code> field."
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 201,
                            "body": "{\"data\": {\"success\": true}}",
                            "name": "Accepted for async processing. Use List Instance to check status."
                        }
                    ]
                },
                {
                    "name": "Rebuild Instance",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "\/zone\/:zoneId\/instance\/:instanceId\/rebuild",
                            "query": [],
                            "raw": "{{baseUrl}}\/zone\/:zoneId\/instance\/:instanceId\/rebuild",
                            "variable": [
                                {
                                    "id": "zoneId",
                                    "key": "zoneId",
                                    "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                    "description": "The ID of the zone."
                                },
                                {
                                    "id": "instanceId",
                                    "key": "instanceId",
                                    "value": "01H9ZCNF46W6C1EM45T21B6M0I",
                                    "description": "The ID of the instance."
                                }
                            ]
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\"vm_image_id\":\"01H9ZCNF46W6C1EM45T21B6M0H\"}"
                        },
                        "description": " <aside class=\"notice\">need <small class=\"badge\">instance:rebuild<\/small> ability for api token<\/aside>"
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{\"data\": {\"success\": true}}",
                            "name": "Instance rebuild started."
                        }
                    ]
                },
                {
                    "name": "Start Instance",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "\/zone\/:zoneId\/instance\/:instanceId\/start",
                            "query": [],
                            "raw": "{{baseUrl}}\/zone\/:zoneId\/instance\/:instanceId\/start",
                            "variable": [
                                {
                                    "id": "zoneId",
                                    "key": "zoneId",
                                    "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                    "description": "The ID of the zone."
                                },
                                {
                                    "id": "instanceId",
                                    "key": "instanceId",
                                    "value": "01H9ZCNF46W6C1EM45T21B6M0I",
                                    "description": "The ID of the instance."
                                }
                            ]
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": null,
                        "description": " <aside class=\"notice\">need <small class=\"badge\">instance:start<\/small> ability for api token<\/aside>"
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{\"data\": {\"success\": true}}",
                            "name": "Instance start requested."
                        }
                    ]
                },
                {
                    "name": "Stop Instance",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "\/zone\/:zoneId\/instance\/:instanceId\/stop",
                            "query": [],
                            "raw": "{{baseUrl}}\/zone\/:zoneId\/instance\/:instanceId\/stop",
                            "variable": [
                                {
                                    "id": "zoneId",
                                    "key": "zoneId",
                                    "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                    "description": "The ID of the zone."
                                },
                                {
                                    "id": "instanceId",
                                    "key": "instanceId",
                                    "value": "01H9ZCNF46W6C1EM45T21B6M0I",
                                    "description": "The ID of the instance."
                                }
                            ]
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\"forced\":false}"
                        },
                        "description": " <aside class=\"notice\">need <small class=\"badge\">instance:stop<\/small> ability for api token<\/aside>"
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{\"data\": {\"success\": true}}",
                            "name": "Instance stop requested."
                        }
                    ]
                },
                {
                    "name": "Reboot Instance",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "\/zone\/:zoneId\/instance\/:instanceId\/reboot",
                            "query": [],
                            "raw": "{{baseUrl}}\/zone\/:zoneId\/instance\/:instanceId\/reboot",
                            "variable": [
                                {
                                    "id": "zoneId",
                                    "key": "zoneId",
                                    "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                    "description": "The ID of the zone."
                                },
                                {
                                    "id": "instanceId",
                                    "key": "instanceId",
                                    "value": "01H9ZCNF46W6C1EM45T21B6M0I",
                                    "description": "The ID of the instance."
                                }
                            ]
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": null,
                        "description": " <aside class=\"notice\">need <small class=\"badge\">instance:reboot<\/small> ability for api token<\/aside>"
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{\"data\": {\"success\": true}}",
                            "name": "Instance reboot requested."
                        }
                    ]
                },
                {
                    "name": "Delete Instance",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "\/zone\/:zoneId\/instance\/:instanceId",
                            "query": [],
                            "raw": "{{baseUrl}}\/zone\/:zoneId\/instance\/:instanceId",
                            "variable": [
                                {
                                    "id": "zoneId",
                                    "key": "zoneId",
                                    "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                    "description": "The ID of the zone."
                                },
                                {
                                    "id": "instanceId",
                                    "key": "instanceId",
                                    "value": "01H9ZCNF46W6C1EM45T21B6M0I",
                                    "description": "The ID of the instance to delete."
                                }
                            ]
                        },
                        "method": "DELETE",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\"name\":\"my-instance\"}"
                        },
                        "description": " <aside class=\"notice\">need <small class=\"badge\">instance:delete<\/small> ability for api token<\/aside>\n   Delete an instance. This operation is asynchronous; check the instance list for status updates."
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{\"data\": {\"success\": true}}",
                            "name": "Instance delete requested."
                        }
                    ]
                },
                {
                    "name": "Instance Metric",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "\/zone\/:zoneId\/instance\/:instanceId\/metrics",
                            "query": [],
                            "raw": "{{baseUrl}}\/zone\/:zoneId\/instance\/:instanceId\/metrics",
                            "variable": [
                                {
                                    "id": "zoneId",
                                    "key": "zoneId",
                                    "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                    "description": "The ID of the zone."
                                },
                                {
                                    "id": "instanceId",
                                    "key": "instanceId",
                                    "value": "01H9ZCNF46W6C1EM45T21B6M0I",
                                    "description": "The ID of the instance."
                                }
                            ]
                        },
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\"metrics\":[\"memoryusedkbs\",\"cpuused\"],\"time\":1,\"aggregator\":\"mean\"}"
                        },
                        "description": " <aside class=\"notice\">need <small class=\"badge\">instance:metrics<\/small> ability for api token<\/aside>"
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "\n{\n  \"data\": [\n    {\n      \"column\": \"networkread\",\n      \"values\": [\n        { \"value\": 0.03, \"time\": \"T1\" },\n        { \"value\": 0.03, \"time\": \"T2\" },\n        { \"value\": 0.03, \"time\": \"T3\" },\n      ]\n    },\n    {\n      \"column\": \"networkwrite\",\n      \"values\": [\n        { \"value\": 0, \"time\": \"T1\" },\n        { \"value\": 0, \"time\": \"T2\" },\n        { \"value\": 0, \"time\": \"T3\" },\n\n      ]\n    }\n  ]\n}\n\n    ",
                            "name": "Instance metrics response"
                        }
                    ]
                },
                {
                    "name": "Show Instance",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "\/zone\/:zoneId\/instance\/:instanceId",
                            "query": [],
                            "raw": "{{baseUrl}}\/zone\/:zoneId\/instance\/:instanceId",
                            "variable": [
                                {
                                    "id": "zoneId",
                                    "key": "zoneId",
                                    "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                    "description": "The ID of the zone."
                                },
                                {
                                    "id": "instanceId",
                                    "key": "instanceId",
                                    "value": "01H9ZCNF46W6C1EM45T21B6M0I",
                                    "description": "The ID of the instance."
                                }
                            ]
                        },
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": null,
                        "description": "  <aside class=\"notice\">need <small class=\"badge\">instance:show<\/small> ability for api token<\/aside>\n  Retrieve detailed information about a specific instance in a zone."
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{\n    \"data\": {\n        \"id\": \"string\",\n        \"customer_id\": \"01hyddf0krmwvq50cd523zfcfp\",\n        \"name\": \"test-from-cli-intractive\",\n        \"zone_id\": \"01hysrrs3xhhdaayy69ps6xxya\",\n        \"created\": true,\n        \"template_id\": null,\n        \"vm_image\": {\n            \"id\": \"string\",\n            \"type\": \"TEMPLATE\",\n            \"name\": \"T-Mikrotik-714\",\n            \"is_available\": true,\n            \"display_text\": \"T-Mikrotik-714\",\n            \"name_orginal\": \"linux MikroTik 7.14  \",\n            \"ready_to_use_app\": false,\n            \"ready_to_use_app_name\": null,\n            \"ready_to_use_app_version\": null,\n            \"os_type\": \"linux\",\n            \"os_name\": \"MikroTik\",\n            \"os_version\": \"7.14\",\n            \"hardware_requirement\": {\n                \"cpunumber\": 1,\n                \"cpuspeed\": 1000,\n                \"memory\": 1000,\n                \"rootdisksize\": 25\n            },\n            \"category\": \"OPERATION_SYSTEMS\"\n        },\n        \"zone\": {\n            \"id\": \"string\",\n            \"name\": \"ALBORZ\",\n            \"location\": \"Iran\",\n            \"is_public\": true,\n            \"is_featured\": true,\n            \"is_ready\": true\n        },\n        \"service_offering\": {\n            \"id\": \"string\",\n            \"name\": \"n02-02-025-500-v3\",\n            \"has_image_requirement\": null,\n            \"is_available\": true,\n            \"is_public\": true,\n            \"suggested\": false,\n            \"category\": \"NETWORK\",\n            \"hourly_price\": {\n                \"up\": 2000,\n                \"down\": 2000\n            },\n            \"hourly_price_no_discount\": {\n                \"up\": 2000,\n                \"down\": 2000\n            },\n            \"description\": null,\n            \"hardware\": {\n                \"cpu_core\": 2,\n                \"memory_mb\": 2048,\n                \"cpu_speed_MHz\": 2300,\n                \"root_disk_size_gB\": 25,\n                \"network_rate\": 500,\n                \"disk_iops\": 2500\n            }\n        },\n        \"disk_offering_id\": null,\n        \"service_offering_id\": \"string\",\n        \"status\": \"UP\",\n        \"instance_status\": \"UP\",\n        \"password\": \"string\",\n        \"username\": \"string\",\n        \"created_at\": 1756628991,\n        \"updated_at\": 1756633818,\n        \"metadata\": [],\n        \"kubernetes_cluster_id\": null,\n        \"data_volumes\": [],\n        \"snapshot\": [\n            {\n                \"id\": \"string\",\n                \"name\": \"on-snapshot\",\n                \"status\": \"READY\",\n                \"created_at\": 1756633839,\n                \"current\": false,\n                \"parent_id\": null\n            },\n            {\n                \"id\": \"string\",\n                \"name\": \"snap-shot\",\n                \"status\": \"READY\",\n                \"created_at\": 1756634140,\n                \"current\": false,\n                \"parent_id\": \"string\"\n            },\n            {\n                \"id\": \"string\",\n                \"name\": \"other-snapshot\",\n                \"status\": \"READY\",\n                \"created_at\": 1756636439,\n                \"current\": false,\n                \"parent_id\": \"string\"\n            }\n        ]\n    }\n}",
                            "name": "Successful response"
                        }
                    ]
                },
                {
                    "name": "Get Console URL",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "\/zone\/:zoneId\/instance\/:instanceId\/console",
                            "query": [],
                            "raw": "{{baseUrl}}\/zone\/:zoneId\/instance\/:instanceId\/console",
                            "variable": [
                                {
                                    "id": "zoneId",
                                    "key": "zoneId",
                                    "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                    "description": "The ID of the zone."
                                },
                                {
                                    "id": "instanceId",
                                    "key": "instanceId",
                                    "value": "01H9ZCNF46W6C1EM45T21B6M0I",
                                    "description": "The ID of the instance."
                                }
                            ]
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": null,
                        "description": " <aside class=\"notice\">need <small class=\"badge\">instance:console<\/small> ability for api token<\/aside>"
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{\n    \"url\": \"consoleproxy\"\n}",
                            "name": "Successful response"
                        }
                    ]
                },
                {
                    "name": "Snapshots",
                    "description": "",
                    "item": [
                        {
                            "name": "Create Snapshot",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/zone\/:zoneId\/instance\/:instanceId\/snapshot",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/zone\/:zoneId\/instance\/:instanceId\/snapshot",
                                    "variable": [
                                        {
                                            "id": "zoneId",
                                            "key": "zoneId",
                                            "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                            "description": "The ID of the zone."
                                        },
                                        {
                                            "id": "instanceId",
                                            "key": "instanceId",
                                            "value": "01H9ZCNF46W6C1EM45T21B6M0I",
                                            "description": "The ID of the instance."
                                        }
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\"name\":\"my-snapshot\"}"
                                },
                                "description": "<aside class=\"notice\">need <small class=\"badge\">instance:snapshot:create<\/small> ability for api token<\/aside>\n<b>Note:<\/b> This function creates a snapshot for a specific instance.<br>\n<pre>{\n  \"data\": {\n      \"id\": \"string\",\n      \"name\": \"string\",\n      \"status\": \"string\",\n      \"created_at\": 1234567890\n  }\n}<\/pre>"
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 201,
                                    "body": "{\"data\": {\"id\": \"01H9ZCNF46W6C1EM45T21B6M0S\", \"name\": \"my-snapshot\", \"status\": \"CREATING\", \"created_at\": 1712345678}}",
                                    "name": "Snapshot creation accepted."
                                }
                            ]
                        },
                        {
                            "name": "Revert Snapshot",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/zone\/:zoneId\/instance\/:instanceId\/snapshot\/:snapshotId\/revert",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/zone\/:zoneId\/instance\/:instanceId\/snapshot\/:snapshotId\/revert",
                                    "variable": [
                                        {
                                            "id": "zoneId",
                                            "key": "zoneId",
                                            "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                            "description": "The ID of the zone."
                                        },
                                        {
                                            "id": "instanceId",
                                            "key": "instanceId",
                                            "value": "01H9ZCNF46W6C1EM45T21B6M0I",
                                            "description": "The ID of the instance."
                                        },
                                        {
                                            "id": "snapshotId",
                                            "key": "snapshotId",
                                            "value": "01H9ZCNF46W6C1EM45T21B6M0S",
                                            "description": "The ID of the snapshot."
                                        }
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": null,
                                "description": "<aside class=\"notice\">need <small class=\"badge\">instance:snapshot:revert<\/small> ability for api token<\/aside>\n<b>Note:<\/b> This function reverts an instance to a specific snapshot.<br>\n<pre>{\n  \"data\": {\n      \"success\": true\n  }\n}<\/pre>"
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "{\"data\": {\"success\": true}}",
                                    "name": "Instance reverted to snapshot."
                                }
                            ]
                        },
                        {
                            "name": "Delete Snapshot",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/zone\/:zoneId\/instance\/:instanceId\/snapshot\/:snapshotId",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/zone\/:zoneId\/instance\/:instanceId\/snapshot\/:snapshotId",
                                    "variable": [
                                        {
                                            "id": "zoneId",
                                            "key": "zoneId",
                                            "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                            "description": "The ID of the zone."
                                        },
                                        {
                                            "id": "instanceId",
                                            "key": "instanceId",
                                            "value": "01H9ZCNF46W6C1EM45T21B6M0I",
                                            "description": "The ID of the instance."
                                        },
                                        {
                                            "id": "snapshotId",
                                            "key": "snapshotId",
                                            "value": "01H9ZCNF46W6C1EM45T21B6M0S",
                                            "description": "The ID of the snapshot."
                                        }
                                    ]
                                },
                                "method": "DELETE",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": null,
                                "description": "<aside class=\"notice\">need <small class=\"badge\">instance:snapshot:delete<\/small> ability for api token<\/aside>\n<b>Note:<\/b> This function deletes a snapshot for a specific instance.<br>\n<pre>{\n  \"data\": {\n      \"success\": true\n  }\n}<\/pre>"
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "{\"data\": {\"success\": true}}",
                                    "name": "Snapshot deleted."
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Volumes",
                    "description": "",
                    "item": [
                        {
                            "name": "List Volume Service Offerings",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/zone\/:zoneId\/instance\/volumes\/service-offering",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/zone\/:zoneId\/instance\/volumes\/service-offering",
                                    "variable": [
                                        {
                                            "id": "zoneId",
                                            "key": "zoneId",
                                            "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                            "description": "The ID of the zone."
                                        }
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": null,
                                "description": " <aside class=\"notice\">need <small class=\"badge\">instance:volume:service-offering:list<\/small> ability for api token<\/aside>\n   List all volume service offerings available in the specified zone for the authenticated user."
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "{\"data\": [{\"size\": \"0\", \"price\": \"200\", \"name\": \"CustomeDiskOfferingAlborz\", \"description\": \"CustomeDiskOfferingAlborz\", \"is_public\": true, \"is_featured\": false}]}",
                                    "name": "List of volume service offerings (anonymized)."
                                }
                            ]
                        },
                        {
                            "name": "List Volumes",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/zone\/:zoneId\/instance\/volumes",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/zone\/:zoneId\/instance\/volumes",
                                    "variable": [
                                        {
                                            "id": "zoneId",
                                            "key": "zoneId",
                                            "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                            "description": "The ID of the zone."
                                        }
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": null,
                                "description": " <aside class=\"notice\">need <small class=\"badge\">instance:volume:list<\/small> ability for api token<\/aside>"
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "{\"data\": [{\"id\": \"01H9ZCNF46W6C1EM45T21B6M0V\", \"name\": \"volume-1\", \"size\": 50, \"status\": \"available\"}]}",
                                    "name": "List of volumes."
                                }
                            ]
                        },
                        {
                            "name": "Create Volume",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/zone\/:zoneId\/instance\/volumes",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/zone\/:zoneId\/instance\/volumes",
                                    "variable": [
                                        {
                                            "id": "zoneId",
                                            "key": "zoneId",
                                            "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                            "description": "The ID of the zone."
                                        }
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\"service_offering_id\":\"01H9ZCNF46W6C1EM45T21B6M0G\",\"size\":50,\"name\":\"my-volume\"}"
                                },
                                "description": " <aside class=\"notice\">need <small class=\"badge\">instance:volume:create<\/small> ability for api token<\/aside>\n   Create a new volume in the specified zone."
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "{\"data\": {\"id\": \"01H9ZCNF46W6C1EM45T21B6M0V\", \"name\": \"my-volume\", \"size\": 50, \"status\": \"CREATING\"}}",
                                    "name": "Volume creation accepted."
                                }
                            ]
                        },
                        {
                            "name": "Delete Volume",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/zone\/:zoneId\/instance\/volumes\/:volumeId",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/zone\/:zoneId\/instance\/volumes\/:volumeId",
                                    "variable": [
                                        {
                                            "id": "zoneId",
                                            "key": "zoneId",
                                            "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                            "description": "The ID of the zone."
                                        },
                                        {
                                            "id": "volumeId",
                                            "key": "volumeId",
                                            "value": "01H9ZCNF46W6C1EM45T21B6M0V",
                                            "description": "The ID of the volume."
                                        }
                                    ]
                                },
                                "method": "DELETE",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": null,
                                "description": " <aside class=\"notice\">need <small class=\"badge\">instance:volume:delete<\/small> ability for api token<\/aside>"
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "{\"data\": {\"success\": true}}",
                                    "name": "Volume deleted."
                                }
                            ]
                        },
                        {
                            "name": "Detach Volume",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/zone\/:zoneId\/instance\/volumes\/:volumeId\/detach\/:instanceId",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/zone\/:zoneId\/instance\/volumes\/:volumeId\/detach\/:instanceId",
                                    "variable": [
                                        {
                                            "id": "zoneId",
                                            "key": "zoneId",
                                            "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                            "description": "The ID of the zone."
                                        },
                                        {
                                            "id": "volumeId",
                                            "key": "volumeId",
                                            "value": "01H9ZCNF46W6C1EM45T21B6M0V",
                                            "description": "The ID of the volume."
                                        },
                                        {
                                            "id": "instanceId",
                                            "key": "instanceId",
                                            "value": "0GrMYD4yxp6QZxmarRsfaRnRWK",
                                            "description": ""
                                        }
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\"instance_id\":\"01H9ZCNF46W6C1EM45T21B6M0I\"}"
                                },
                                "description": " <aside class=\"notice\">need <small class=\"badge\">instance:volume:detach<\/small> ability for api token<\/aside>\n   Detach a volume from an instance."
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "{\"data\": {\"success\": true}}",
                                    "name": "Volume detached."
                                }
                            ]
                        },
                        {
                            "name": "Attach Volume",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/zone\/:zoneId\/instance\/volumes\/:volumeId\/attach\/:instanceId",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/zone\/:zoneId\/instance\/volumes\/:volumeId\/attach\/:instanceId",
                                    "variable": [
                                        {
                                            "id": "zoneId",
                                            "key": "zoneId",
                                            "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                            "description": "The ID of the zone."
                                        },
                                        {
                                            "id": "volumeId",
                                            "key": "volumeId",
                                            "value": "01H9ZCNF46W6C1EM45T21B6M0V",
                                            "description": "The ID of the volume."
                                        },
                                        {
                                            "id": "instanceId",
                                            "key": "instanceId",
                                            "value": "01H9ZCNF46W6C1EM45T21B6M0I",
                                            "description": "The ID of the instance."
                                        }
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": null,
                                "description": " <aside class=\"notice\">need <small class=\"badge\">instance:volume:attach<\/small> ability for api token<\/aside>\n   Attach a volume to an instance."
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "{\"data\": {\"success\": true}}",
                                    "name": "Volume attached."
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "name": "Network",
            "description": "\n<div class=\"sl-prose\">\n<p>The Firewall API provides a way to manage and enforce network security rules for your infrastructure. It allows you to control the flow of incoming (ingress) and outgoing (egress) traffic based on IP addresses, protocols, and ports.<\/p>\n\n<p><b>Key Concepts:<\/b><\/p>\n<ul>\n<li><b>Firewall Rule:<\/b> A specific directive that allows or denies traffic. Each rule targets a specific protocol and can define source\/destination IPs and port ranges.<\/li>\n<li><b>Traffic Type:<\/b>\n<ul>\n<li><b>Ingress:<\/b> Traffic coming into your network.<\/li>\n<li><b>Egress:<\/b> Traffic going out from your network.<\/li>\n<\/ul>\n<\/li>\n<li><b>Protocol:<\/b> The network protocol the rule applies to. Common protocols include:\n<ul>\n<li><b>TCP (Transmission Control Protocol):<\/b> Used for reliable, ordered, and error-checked delivery of a stream of octets (e.g., web browsing, email).<\/li>\n<li><b>UDP (User Datagram Protocol):<\/b> A simpler, connectionless protocol used when speed is prioritized over reliability (e.g., video streaming, DNS).<\/li>\n<li><b>ICMP (Internet Control Message Protocol):<\/b> Used by network devices to send error messages and operational information (e.g., ping).<\/li>\n<\/ul>\n<\/li>\n<li><b>CIDR (Classless Inter-Domain Routing):<\/b> A method for allocating IP addresses and for IP routing. It's used to specify a range of IP addresses (e.g., <code>192.168.1.0\/24<\/code>). Use <code>0.0.0.0\/0<\/code> for all IPv4 addresses.<\/li>\n<\/ul>\n<\/div>",
            "item": [
                {
                    "name": "Networks",
                    "description": "",
                    "item": [
                        {
                            "name": "Create L2 Network",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/zone\/:zoneId\/network\/l2",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/zone\/:zoneId\/network\/l2",
                                    "variable": [
                                        {
                                            "id": "zoneId",
                                            "key": "zoneId",
                                            "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                            "description": "The ID of the zone."
                                        }
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\"network_offering_id\":\"01H9ZCNF46W6C1EM45T21B6M0G\",\"name\":\"my-l2-network\"}"
                                },
                                "description": "  <aside class=\"notice\">Requires appropriate <small class=\"badge\">network:l2:create<\/small> ability for API token<\/aside>\n  <b>Note:<\/b> This function runs asynchronously in the background. The response will be:<br>\n  <pre>{\n    \"data\": {\n        \"success\": true\n    }\n  }<\/pre>\n  To check the status of the created network, use the <b>List Network<\/b> endpoint.\n  <\/p>"
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 201,
                                    "body": "{\"data\": {\"success\": true}}",
                                    "name": "Accepted for async processing. Use List Network to check status."
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The network offering id field is required.\", \"errors\": { \"network_offering_id\": [ \"The network offering id field is required.\" ] } }",
                                    "name": "Validation error - Network offering ID is required."
                                }
                            ]
                        },
                        {
                            "name": "Create L3 Network",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/zone\/:zoneId\/network\/l3",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/zone\/:zoneId\/network\/l3",
                                    "variable": [
                                        {
                                            "id": "zoneId",
                                            "key": "zoneId",
                                            "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                            "description": "The ID of the zone."
                                        }
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\"network_offering_id\":\"01H9ZCNF46W6C1EM45T21B6M0G\",\"name\":\"my-l3-network\",\"gateway\":\"192.168.1.1\",\"netmask\":\"255.255.255.0\"}"
                                },
                                "description": "  <aside class=\"notice\">Requires appropriate <small class=\"badge\">network:l3:create<\/small> ability for API token<\/aside>\n  <p>Creates a new Layer 3 (L3) network in the specified zone. For <code>network_offering_id<\/code>, use the ID of a service offering with type <code>Isolated<\/code>.<br><br>\n  <b>Note:<\/b> This function runs asynchronously in the background. The response will be:<br>\n  <pre>{\n    \"data\": {\n        \"success\": true\n    }\n  }<\/pre>\n  To check the status of the created network, use the <b>List Networks<\/b> endpoint and review the <code>status<\/code> field.\n  <\/p>"
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "{\"data\": {\"success\": true}}",
                                    "name": "Accepted for async processing. Use List Networks to check status."
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The gateway field is required.\", \"errors\": { \"gateway\": [ \"The gateway field is required.\" ] } }",
                                    "name": "Validation error - Gateway is required."
                                }
                            ]
                        },
                        {
                            "name": "List Networks",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/zone\/:zoneId\/network",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/zone\/:zoneId\/network",
                                    "variable": [
                                        {
                                            "id": "zoneId",
                                            "key": "zoneId",
                                            "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                            "description": "The ID of the zone."
                                        }
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": null,
                                "description": "  <aside class=\"notice\">Requires appropriate <small class=\"badge\">network:list<\/small> ability for API token<\/aside>\n  <p>Retrieves a list of all networks in the specified zone for the authenticated customer.<\/p>"
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "{\n    \"data\": [\n        {\n            \"id\": \"network_id_1\",\n            \"name\": \"network-1\",\n            \"status\": \"Implemented\",\n            \"ip_config\": [],\n            \"ip_config_v6\": [],\n            \"network_offering\": {\n                \"id\": \"offering_id_1\",\n                \"name\": \"Offering1\",\n                \"displayname\": \"Offering1\",\n                \"displayname_fa\": \"Offering1\",\n                \"hourly_started_price\": 0,\n                \"traffic_transfer_overprice\": 0,\n                \"traffic_transfer_plan\": 1000,\n                \"networkrate\": 200,\n                \"type\": \"Shared\",\n                \"description\": \"\",\n                \"internet_protocol\": \"IPv4\"\n            },\n            \"instance_network\": []\n        },\n        {\n            \"id\": \"network_id_2\",\n            \"name\": \"network-2\",\n            \"status\": \"Implemented\",\n            \"ip_config\": {\n                \"gateway\": \"10.0.0.1\",\n                \"netmask\": \"255.255.255.0\"\n            },\n            \"ip_config_v6\": {\n                \"gateway_v6\": null,\n                \"netmask_v6\": null,\n                \"route_gateway_v6\": null,\n                \"route_subnet_v6\": null\n            },\n            \"network_offering\": {\n                \"id\": \"offering_id_2\",\n                \"name\": \"Offering2\",\n                \"displayname\": \"Offering2\",\n                \"displayname_fa\": \"Offering2\",\n                \"hourly_started_price\": 10,\n                \"traffic_transfer_overprice\": 1,\n                \"traffic_transfer_plan\": 1000,\n                \"networkrate\": 250,\n                \"type\": \"Isolated\",\n                \"description\": \"Offering2\",\n                \"internet_protocol\": \"IPv4\"\n            },\n            \"instance_network\": [\n                {\n                    \"id\": \"instance_network_id_1\",\n                    \"ipaddress\": \"10.0.0.52\",\n                    \"ipaddress_v6\": null,\n                    \"macaddress\": \"02:01:04:5e:00:04\",\n                    \"is_default\": true,\n                    \"created_at\": \"2025-06-29T09:00:00.000000Z\",\n                    \"secondary_ips\": []\n                }\n            ]\n        }\n    ]\n}",
                                    "name": "Successful response with network list."
                                }
                            ]
                        },
                        {
                            "name": "Show Network",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/zone\/:zoneId\/network\/:networkId",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/zone\/:zoneId\/network\/:networkId",
                                    "variable": [
                                        {
                                            "id": "zoneId",
                                            "key": "zoneId",
                                            "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                            "description": "The ID of the zone."
                                        },
                                        {
                                            "id": "networkId",
                                            "key": "networkId",
                                            "value": "01H9ZCNF46W6C1EM45T21B6M0G",
                                            "description": "The ID of the network."
                                        }
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": null,
                                "description": "  <aside class=\"notice\">Requires appropriate <small class=\"badge\">network:show<\/small> ability for API token<\/aside>\n  <p>Retrieves details of a specific network by its ID in the specified zone.<\/p>"
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "{\n    \"data\": {\n        \"id\": \"network_id_anon\",\n        \"name\": \"network-anonymous\",\n        \"status\": \"Allocated\",\n        \"ip_config\": {\n            \"gateway\": \"192.0.2.1\",\n            \"netmask\": \"255.255.255.0\"\n        },\n        \"ip_config_v6\": {\n            \"gateway_v6\": null,\n            \"netmask_v6\": null,\n            \"route_gateway_v6\": null,\n            \"route_subnet_v6\": null\n        },\n        \"network_offering\": {\n            \"id\": \"offering_id_anon\",\n            \"name\": \"OfferingAnon\",\n            \"displayname\": \"OfferingAnon\",\n            \"displayname_fa\": \"OfferingAnon\",\n            \"hourly_started_price\": 0,\n            \"traffic_transfer_overprice\": 0,\n            \"traffic_transfer_plan\": 1000,\n            \"networkrate\": 100,\n            \"type\": \"Isolated\",\n            \"description\": \"Anonymous offering\",\n            \"internet_protocol\": \"IPv4\"\n        },\n        \"instance_network\": []\n    }\n}",
                                    "name": "Successful response with network details (anonymous data)."
                                }
                            ]
                        },
                        {
                            "name": "Delete Network",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/zone\/:zoneId\/network\/:networkId",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/zone\/:zoneId\/network\/:networkId",
                                    "variable": [
                                        {
                                            "id": "zoneId",
                                            "key": "zoneId",
                                            "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                            "description": "The ID of the zone."
                                        },
                                        {
                                            "id": "networkId",
                                            "key": "networkId",
                                            "value": "01H9ZCNF46W6C1EM45T21B6M0G",
                                            "description": "The ID of the network."
                                        }
                                    ]
                                },
                                "method": "DELETE",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": null,
                                "description": "  <aside class=\"notice\">Requires appropriate <small class=\"badge\">network:delete<\/small> ability for API token<\/aside>\n  <p>Deletes a specific network by its ID in the specified zone.<\/p>"
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "{\"data\": {\"success\": true}}",
                                    "name": "Successful deletion."
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Instance",
                    "description": "Manage instance connections to networks, including connecting, disconnecting, and listing connected instances.",
                    "item": [
                        {
                            "name": "Connect Instance to a network",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/zone\/:zoneId\/network\/:networkId\/instance\/connect",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/zone\/:zoneId\/network\/:networkId\/instance\/connect",
                                    "variable": [
                                        {
                                            "id": "zoneId",
                                            "key": "zoneId",
                                            "value": "veniam",
                                            "description": "The ID of the zone."
                                        },
                                        {
                                            "id": "networkId",
                                            "key": "networkId",
                                            "value": "maiores",
                                            "description": "The ID of the network."
                                        }
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\"instance_id\":\"01F8MECHZX3RZ8Y6B8Q5F1E3V7\"}"
                                },
                                "description": "Requires appropriate <small class=\"badge\">network:instance:connect<\/small> ability for API token<\/aside>\n<b>Note:<\/b> This function runs asynchronously in the background. The response will be:<br>\n  <pre>{\n    \"data\": {\n        \"success\": true\n    }\n  }<\/pre>\n  <\/p>\n  "
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "{\"data\":{\"success\":true}}",
                                    "name": "Instance Connected to Network."
                                }
                            ]
                        },
                        {
                            "name": "Disconnect Instance to a network",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/zone\/:zoneId\/network\/:networkId\/instance\/disconnect",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/zone\/:zoneId\/network\/:networkId\/instance\/disconnect",
                                    "variable": [
                                        {
                                            "id": "zoneId",
                                            "key": "zoneId",
                                            "value": "eaque",
                                            "description": "The ID of the zone."
                                        },
                                        {
                                            "id": "networkId",
                                            "key": "networkId",
                                            "value": "totam",
                                            "description": "The ID of the network."
                                        }
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\"instance_network_id\":\"01F8MECHZX3RZ8Y6B8Q5F1E3V7\",\"instance_id\":\"01F8MECHZX3RZ8Y6B8Q5F1E3V8\"}"
                                },
                                "description": "Requires appropriate <small class=\"badge\">network:instance:disconnect<\/small> ability for API token<\/aside>\n<b>Note:<\/b> This function runs asynchronously in the background. The response will be:<br>\n  <pre>{\n    \"data\": {\n        \"success\": true\n    }\n  }<\/pre>\n  <\/p>\n  "
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "{\"data\":{\"success\":true}}",
                                    "name": "Instance disconnected to Network."
                                }
                            ]
                        },
                        {
                            "name": "connected instances of network",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/zone\/:zoneId\/network\/:networkId\/instance",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/zone\/:zoneId\/network\/:networkId\/instance",
                                    "variable": [
                                        {
                                            "id": "zoneId",
                                            "key": "zoneId",
                                            "value": "aliquam",
                                            "description": "The ID of the zone."
                                        },
                                        {
                                            "id": "networkId",
                                            "key": "networkId",
                                            "value": "nulla",
                                            "description": "The ID of the network."
                                        }
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\"instance_id\":\"01F8MECHZX3RZ8Y6B8Q5F1E3V7\"}"
                                },
                                "description": "Requires appropriate <small class=\"badge\">network:instance:show<\/small> ability for API token<\/aside>\n  "
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "\n    {\n  \"data\": [\n    {\n      \"id\": \"instance_network_id\",\n      \"instance_id\": \"instance_id\",\n      \"instance_name\": \"instance_name\",\n      \"ipaddress\": \"ip_address_v4\",\n      \"ipaddress_v6\": \"ip_address_v6\",\n      \"macaddress\": \"mac_address\",\n      \"is_default\": true,\n      \"created_at\": 1234567890,\n      \"network\": {\n        \"id\": \"network_id\",\n        \"name\": \"network_name\",\n        \"ip_config\": [],\n        \"ip_config_v6\": []\n      },\n      \"network_offering\": {\n        \"id\": \"network_offering_id\",\n        \"name\": \"network_offering_name\",\n        \"displayname\": \"network_offering_displayname\",\n        \"displayname_fa\": \"network_offering_displayname_fa\",\n        \"hourly_started_price\": 0,\n        \"traffic_price_per_gig\": 0,\n        \"traffic_transfer_free_gig\": 1000,\n        \"networkrate\": 200,\n        \"type\": \"network_type\",\n        \"description\": \"network_description\",\n        \"internet_protocol\": \"internet_protocol\"\n      },\n      \"secondary_ips\": []\n    }\n  ]\n}\n",
                                    "name": "List of connected instances to network."
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Firewall Rules",
                    "description": "",
                    "item": [
                        {
                            "name": "List IPv4 Firewall Rules",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/zone\/:zoneId\/network\/:networkId\/firewall\/ipv4",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/zone\/:zoneId\/network\/:networkId\/firewall\/ipv4",
                                    "variable": [
                                        {
                                            "id": "zoneId",
                                            "key": "zoneId",
                                            "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                            "description": "The ID of the zone."
                                        },
                                        {
                                            "id": "networkId",
                                            "key": "networkId",
                                            "value": "01H9ZCNF46W6C1EM45T21B6M0G",
                                            "description": "The ID of the network to fetch rules for."
                                        }
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": null,
                                "description": "  <aside class=\"notice\">need <small class=\"badge\">network:firewall:ipv4:list<\/small> ability for api token<\/aside>\n  <p>Retrieves a list of all IPv4 firewall rules associated with a specific network.<\/p>\n  <ul>\n    <li><b>id<\/b>: Unique identifier for the firewall rule.<\/li>\n    <li><b>network_public_ip_id<\/b>: The public IP address associated with the rule (if any).<\/li>\n    <li><b>protocol<\/b>: Network protocol (e.g., TCP, UDP, ICMP).<\/li>\n    <li><b>traffic_type<\/b>: Direction of traffic (<code>Ingress<\/code> for incoming, <code>Egress<\/code> for outgoing).<\/li>\n    <li><b>ip_source<\/b>: Source IP or CIDR range.<\/li>\n    <li><b>ip_destination<\/b>: Destination IP or CIDR range.<\/li>\n    <li><b>port_start<\/b>: Starting port (for TCP\/UDP protocols).<\/li>\n    <li><b>port_end<\/b>: Ending port (for TCP\/UDP protocols).<\/li>\n    <li><b>icmp_code<\/b>: ICMP code (for ICMP protocol).<\/li>\n    <li><b>icmp_type<\/b>: ICMP type (for ICMP protocol).<\/li>\n    <li><b>status<\/b>: Current status of the rule (e.g., Active).<\/li>\n    <li><b>created_at<\/b>: Timestamp when the rule was created.<\/li>\n  <\/ul>"
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "{\n        \"data\": [\n            {\n                \"id\": \"firewall-rule-id\",\n                \"network_public_ip_id\": \"ip-public-id\",\n                \"protocol\": \"ICMP\",\n                \"traffic_type\": \"Ingress\",\n                \"ip_source\": \"0.0.0.0\/0\",\n                \"ip_destination\": \"192.168.61.58\",\n                \"port_start\": null,\n                \"port_end\": null,\n                \"icmp_code\": null,\n                \"icmp_type\": null,\n                \"status\": \"Active\",\n                \"created_at\": \"2025-06-30T13:15:35.000000Z\"\n            },\n            {\n                \"id\": \"firewall-rule-id\",\n                \"network_public_ip_id\": null,\n                \"protocol\": \"UDP\",\n                \"traffic_type\": \"Egress\",\n                \"ip_source\": \"192.168.1.0\/24\",\n                \"ip_destination\": \"0.0.0.0\/0\",\n                \"port_start\": \"0\",\n                \"port_end\": \"65535\",\n                \"icmp_code\": null,\n                \"icmp_type\": null,\n                \"status\": \"Active\",\n                \"created_at\": \"2025-06-30T13:15:29.000000Z\"\n            }\n        ]\n    }",
                                    "name": "Successful response with a list of IPv4 firewall rules."
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The network id field is required.\", \"errors\": { \"network_id\": [ \"The network id field is required.\" ] } }",
                                    "name": "Validation error - Network ID is required."
                                }
                            ]
                        },
                        {
                            "name": "Create IPv4 Firewall Rule",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/zone\/:zoneId\/network\/:networkId\/firewall\/ipv4",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/zone\/:zoneId\/network\/:networkId\/firewall\/ipv4",
                                    "variable": [
                                        {
                                            "id": "zoneId",
                                            "key": "zoneId",
                                            "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                            "description": "The ID of the zone."
                                        },
                                        {
                                            "id": "networkId",
                                            "key": "networkId",
                                            "value": "01H9ZCNF46W6C1EM45T21B6M0G",
                                            "description": "The ID of the network to fetch rules for."
                                        }
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\"traffic_type\":\"Ingress\",\"protocol_type\":\"TCP\",\"public_ip_id\":\"01F8MECHZX3RZ8Y6B8Q5F1E3V8\",\"ip_source\":\"192.168.1.10\",\"ip_destination\":\"10.0.0.5\",\"port_start\":80,\"port_end\":81,\"icmp_code\":0,\"icmp_type\":8}"
                                },
                                "description": " <aside class=\"notice\">need <small class=\"badge\">network:firewall:ipv4:create<\/small> ability for api token<\/aside>\n <p>Creates a new firewall rule for IPv4 traffic on a given network.<\/p>"
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "{\n        \"data\": {\n            \"success\": true\n        }\n    }",
                                    "name": "Successful creation of a new firewall rule."
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The network id field is required.\" }",
                                    "name": "Validation error - Missing network_id."
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The traffic type field is required.\" }",
                                    "name": "Validation error - Missing traffic_type."
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The protocol type field is required.\" }",
                                    "name": "Validation error - Missing protocol_type."
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The ip source must be a valid CIDR address.\" }",
                                    "name": "Validation error - Invalid CIDR format for ip_source."
                                }
                            ]
                        },
                        {
                            "name": "Delete IPv4 Firewall Rule",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/zone\/:zoneId\/network\/:networkId\/firewall\/ipv4\/:ruleId",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/zone\/:zoneId\/network\/:networkId\/firewall\/ipv4\/:ruleId",
                                    "variable": [
                                        {
                                            "id": "zoneId",
                                            "key": "zoneId",
                                            "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                            "description": "The ID of the zone."
                                        },
                                        {
                                            "id": "networkId",
                                            "key": "networkId",
                                            "value": "01H9ZCNF46W6C1EM45T21B6M0G",
                                            "description": "The ID of the network to fetch rules for."
                                        },
                                        {
                                            "id": "ruleId",
                                            "key": "ruleId",
                                            "value": "01H9ZCPF46W6C1EM45T21B6M0H",
                                            "description": "The ID of the firewall rule to delete."
                                        }
                                    ]
                                },
                                "method": "DELETE",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": null,
                                "description": " <aside class=\"notice\">need <small class=\"badge\">network:firewall:ipv4:delete<\/small> ability for api token<\/aside>\n <p>Deletes a specific IPv4 firewall rule by its ID.<\/p>"
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "{\n        \"data\": {\n            \"success\": true\n        }\n    }",
                                    "name": "Successful deletion."
                                }
                            ]
                        },
                        {
                            "name": "List IPv6 Firewall Rules",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/zone\/:zoneId\/network\/:networkId\/firewall\/ipv6",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/zone\/:zoneId\/network\/:networkId\/firewall\/ipv6",
                                    "variable": [
                                        {
                                            "id": "zoneId",
                                            "key": "zoneId",
                                            "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                            "description": "The ID of the zone."
                                        },
                                        {
                                            "id": "networkId",
                                            "key": "networkId",
                                            "value": "01H9ZCNF46W6C1EM45T21B6M0G",
                                            "description": "The ID of the network to fetch rules for."
                                        }
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": null,
                                "description": "  <aside class=\"notice\">need <small class=\"badge\">network:firewall:ipv6:list<\/small> ability for api token<\/aside>\n  <p>Retrieves a list of all IPv6 firewall rules associated with a specific network.<\/p>\n  <ul>\n    <li><b>id<\/b>: Unique identifier for the firewall rule.<\/li>\n    <li><b>protocol<\/b>: Network protocol (e.g., TCP, UDP, ICMP).<\/li>\n    <li><b>traffic_type<\/b>: Direction of traffic (<code>Ingress<\/code> for incoming, <code>Egress<\/code> for outgoing).<\/li>\n    <li><b>ip_source<\/b>: Source IPv6 or CIDR range.<\/li>\n    <li><b>ip_destination<\/b>: Destination IPv6 or CIDR range.<\/li>\n    <li><b>port_start<\/b>: Starting port (for TCP\/UDP protocols).<\/li>\n    <li><b>port_end<\/b>: Ending port (for TCP\/UDP protocols).<\/li>\n    <li><b>icmp_code<\/b>: ICMP code (for ICMP protocol).<\/li>\n    <li><b>icmp_type<\/b>: ICMP type (for ICMP protocol).<\/li>\n    <li><b>status<\/b>: Current status of the rule (e.g., Active).<\/li>\n    <li><b>created_at<\/b>: Timestamp when the rule was created.<\/li>\n  <\/ul>"
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "{\n        \"data\": [\n            {\n                \"id\": \"firewall-rule-id-1\",\n                \"protocol\": \"ICMP\",\n                \"traffic_type\": \"Ingress\",\n                \"ip_source\": \"::\/0\",\n                \"ip_destination\": \"::\/0\",\n                \"port_start\": null,\n                \"port_end\": null,\n                \"icmp_code\": null,\n                \"icmp_type\": null,\n                \"status\": \"Active\",\n                \"created_at\": \"2025-06-30T14:35:07.000000Z\"\n            }\n        ]\n    }",
                                    "name": "Successful response with a list of IPv6 firewall rules."
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The network id field is required.\", \"errors\": { \"network_id\": [ \"The network id field is required.\" ] } }",
                                    "name": "Validation error - Network ID is required."
                                }
                            ]
                        },
                        {
                            "name": "Create IPv6 Firewall Rule",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/zone\/:zoneId\/network\/:networkId\/firewall\/ipv6",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/zone\/:zoneId\/network\/:networkId\/firewall\/ipv6",
                                    "variable": [
                                        {
                                            "id": "zoneId",
                                            "key": "zoneId",
                                            "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                            "description": "The ID of the zone."
                                        },
                                        {
                                            "id": "networkId",
                                            "key": "networkId",
                                            "value": "01H9ZCNF46W6C1EM45T21B6M0G",
                                            "description": "The ID of the network to fetch rules for."
                                        }
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\"traffic_type\":\"Ingress\",\"protocol_type\":\"TCP\",\"ip_source\":\"2001:db8::1\",\"ip_destination\":\"2001:db8::2\",\"port_start\":80,\"port_end\":81,\"icmp_code\":0,\"icmp_type\":128}"
                                },
                                "description": " <aside class=\"notice\">need <small class=\"badge\">network:firewall:ipv6:create<\/small> ability for api token<\/aside>\n <p>Creates a new firewall rule for IPv6 traffic on a given network.<\/p>"
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 201,
                                    "body": "{\n        \"data\": {\n            \"success\": true\n        }\n    }",
                                    "name": "Successful creation of a new IPv6 firewall rule."
                                }
                            ]
                        },
                        {
                            "name": "Delete IPv6 Firewall Rule",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/zone\/:zoneId\/network\/:networkId\/firewall\/ipv6\/:ruleId",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/zone\/:zoneId\/network\/:networkId\/firewall\/ipv6\/:ruleId",
                                    "variable": [
                                        {
                                            "id": "zoneId",
                                            "key": "zoneId",
                                            "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                            "description": "The ID of the zone."
                                        },
                                        {
                                            "id": "networkId",
                                            "key": "networkId",
                                            "value": "01H9ZCNF46W6C1EM45T21B6M0G",
                                            "description": "The ID of the network to fetch rules for."
                                        },
                                        {
                                            "id": "ruleId",
                                            "key": "ruleId",
                                            "value": "01H9ZCPF46W6C1EM45T21B6M0H",
                                            "description": "The ID of the firewall rule to delete."
                                        }
                                    ]
                                },
                                "method": "DELETE",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": null,
                                "description": " <aside class=\"notice\">need <small class=\"badge\">network:firewall:ipv6:delete<\/small> ability for api token<\/aside>\n <p>Deletes a specific IPv6 firewall rule by its ID.<\/p>"
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "{\n        \"data\": {\n            \"success\": true\n        }\n    }",
                                    "name": "Successful deletion."
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The id field is required.\" }",
                                    "name": "Validation error - Rule ID is required."
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Public IP",
                    "description": "",
                    "item": [
                        {
                            "name": "List Public IP Instances",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/zone\/:zoneId\/network\/:networkId\/public-ip",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/zone\/:zoneId\/network\/:networkId\/public-ip",
                                    "variable": [
                                        {
                                            "id": "zoneId",
                                            "key": "zoneId",
                                            "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                            "description": "The ID of the zone."
                                        },
                                        {
                                            "id": "networkId",
                                            "key": "networkId",
                                            "value": "01H9ZCNF46W6C1EM45T21B6M0G",
                                            "description": "The ID of the network."
                                        }
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": null,
                                "description": "List all public IPs associated with a network in a zone."
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "{\n    \"data\": [\n        {\n            \"id\": \"01JZYQKPXBKGC08BNV5Z23BRE2\",\n            \"network_id\": \"01H9ZCNF46W6C1EM45T21B6M0G\",\n            \"ipaddress\": \"192.168.1.71\",\n            \"is_sourcenat\": true,\n            \"created_at\": 1752304311,\n            \"staticnat_enable\": false,\n            \"staticnat\": []\n        },\n        {\n            \"id\": \"01JZYQQA8V0EYT80J02N717NBW\",\n            \"network_id\": \"01H9ZCNF46W6C1EM45T21B6M0G\",\n            \"ipaddress\": \"192.168.1.60\",\n            \"is_sourcenat\": false,\n            \"created_at\": 1752304429,\n            \"staticnat_enable\": false,\n            \"staticnat\": []\n        }\n    ]\n}",
                                    "name": "Successful response."
                                }
                            ]
                        },
                        {
                            "name": "Associate Public IP",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/zone\/:zoneId\/network\/:networkId\/public-ip",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/zone\/:zoneId\/network\/:networkId\/public-ip",
                                    "variable": [
                                        {
                                            "id": "zoneId",
                                            "key": "zoneId",
                                            "value": "quia",
                                            "description": "The ID of the zone."
                                        },
                                        {
                                            "id": "networkId",
                                            "key": "networkId",
                                            "value": "accusamus",
                                            "description": "The ID of the network."
                                        }
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": null,
                                "description": "Associate a new public IP address to a network.\n    <b>Note:<\/b> This function runs asynchronously in the background. The response will be:<br>\n  <pre>{\n    \"data\": {\n        \"success\": true\n    }\n  }<\/pre>\n  To check the status of the created public ip, use the <b>List Public IPs<\/b> endpoint and review.\n  <\/p>"
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "{\"data\":{\"success\":true}}",
                                    "name": "Successful association."
                                }
                            ]
                        },
                        {
                            "name": "Disassociate Public IP",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/zone\/:zoneId\/network\/:networkId\/public-ip\/:networkPublicIpId",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/zone\/:zoneId\/network\/:networkId\/public-ip\/:networkPublicIpId",
                                    "variable": [
                                        {
                                            "id": "zoneId",
                                            "key": "zoneId",
                                            "value": "deserunt",
                                            "description": "The ID of the zone."
                                        },
                                        {
                                            "id": "networkId",
                                            "key": "networkId",
                                            "value": "error",
                                            "description": "The ID of the network."
                                        },
                                        {
                                            "id": "networkPublicIpId",
                                            "key": "networkPublicIpId",
                                            "value": "eaque",
                                            "description": "The ID of the public IP."
                                        }
                                    ]
                                },
                                "method": "DELETE",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": null,
                                "description": "Disassociate a public IP address from a network.\n    <b>Note:<\/b> This function runs asynchronously in the background. The response will be:<br>\n  <pre>{\n    \"data\": {\n        \"success\": true\n    }\n  }<\/pre>\n  To check the status of the created public ip, use the <b>List Public IPs<\/b> endpoint and review.\n  <\/p>"
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "{\"data\":{\"success\":true}}",
                                    "name": "Successful disassociation."
                                }
                            ]
                        },
                        {
                            "name": "Enable Static NAT",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/zone\/:zoneId\/network\/:networkId\/public-ip\/:networkPublicIpId\/static-nat",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/zone\/:zoneId\/network\/:networkId\/public-ip\/:networkPublicIpId\/static-nat",
                                    "variable": [
                                        {
                                            "id": "zoneId",
                                            "key": "zoneId",
                                            "value": "voluptates",
                                            "description": "The ID of the zone."
                                        },
                                        {
                                            "id": "networkId",
                                            "key": "networkId",
                                            "value": "libero",
                                            "description": "The ID of the network."
                                        },
                                        {
                                            "id": "networkPublicIpId",
                                            "key": "networkPublicIpId",
                                            "value": "ut",
                                            "description": "The ID of the public IP."
                                        }
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\"instance_id\":\"magni\"}"
                                },
                                "description": "Enable static NAT for a public IP.\n    <b>Note:<\/b> This function runs asynchronously in the background. The response will be:<br>\n  <pre>{\n    \"data\": {\n        \"success\": true\n    }\n  }<\/pre>\n  To check the status of the created public ip, use the <b>List Public IPs<\/b> endpoint and review.\n  <\/p>\n  "
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "{\"data\":{\"success\":true}}",
                                    "name": "Static NAT enabled."
                                }
                            ]
                        },
                        {
                            "name": "Disable Static NAT",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/zone\/:zoneId\/network\/:networkId\/public-ip\/:networkPublicIpId\/static-nat",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/zone\/:zoneId\/network\/:networkId\/public-ip\/:networkPublicIpId\/static-nat",
                                    "variable": [
                                        {
                                            "id": "zoneId",
                                            "key": "zoneId",
                                            "value": "omnis",
                                            "description": "The ID of the zone."
                                        },
                                        {
                                            "id": "networkId",
                                            "key": "networkId",
                                            "value": "est",
                                            "description": "The ID of the network."
                                        },
                                        {
                                            "id": "networkPublicIpId",
                                            "key": "networkPublicIpId",
                                            "value": "non",
                                            "description": "The ID of the public IP."
                                        }
                                    ]
                                },
                                "method": "DELETE",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": null,
                                "description": "Disable static NAT for a public IP.\n        <b>Note:<\/b> This function runs asynchronously in the background. The response will be:<br>\n  <pre>{\n    \"data\": {\n        \"success\": true\n    }\n  }<\/pre>\n  To check the status of the created public ip, use the <b>List Public IPs<\/b> endpoint and review.\n  <\/p>\n  "
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "{\"data\":{\"success\":true}}",
                                    "name": "Static NAT disabled."
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Port Forward",
                    "description": "",
                    "item": [
                        {
                            "name": "List Port Forward Rules",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/zone\/:zoneId\/network\/:networkId\/port-forward\/:networkPublicIpId",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/zone\/:zoneId\/network\/:networkId\/port-forward\/:networkPublicIpId",
                                    "variable": [
                                        {
                                            "id": "zoneId",
                                            "key": "zoneId",
                                            "value": "01HZYKJ8QK8ZJ6K8J6K8J6K8J6",
                                            "description": "The zone ULID."
                                        },
                                        {
                                            "id": "networkId",
                                            "key": "networkId",
                                            "value": "01HZYKJ8QK8ZJ6K8J6K8J6K8J6",
                                            "description": "The network ULID."
                                        },
                                        {
                                            "id": "networkPublicIpId",
                                            "key": "networkPublicIpId",
                                            "value": "01HZYKJ8QK8ZJ6K8J6K8J6K8J6",
                                            "description": "The ID of the public IP."
                                        }
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\"public_ip_id\":\"eum\"}"
                                },
                                "description": "Get a list of port forward rules for a network."
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "\n    {\n    \"data\": [\n        {\n            \"id\": \"01jz0pkxe7phb41cchw1hpk6dt\",\n            \"instance_ipaddress\": \"192.168.1.103\",\n            \"network_public_ip\": {\n                \"id\": \"01jz0m8znysysxak6vhk8zfy9m\",\n                \"network_id\": \"01jz0m6cwk2m7jz67x5krjwgct\",\n                \"ipaddress\": \"193.246.200.17\",\n                \"is_sourcenat\": true,\n                \"created_at\": \"2025-06-30T14:36:21.000000Z\",\n                \"staticnat\": []\n            },\n            \"network\": {\n                \"id\": \"01jz0m6cwk2m7jz67x5krjwgct\",\n                \"name\": \"test-for-firewall-ipv6\",\n                \"status\": \"Implementing\",\n                \"ip_config\": {\n                    \"gateway\": \"192.168.1.1\",\n                    \"netmask\": \"255.255.255.0\"\n                },\n                \"ip_config_v6\": {\n                    \"gateway_v6\": \"2a04:acc0:18:61d8::1\",\n                    \"netmask_v6\": \"2a04:acc0:18:61d8::\/64\",\n                    \"route_gateway_v6\": \"2001:470:1f08:a27:1c00:fcff:fe00:75\",\n                    \"route_subnet_v6\": \"2a04:acc0:18:61d8::\/64\"\n                },\n                \"network_offering\": {\n                    \"id\": \"01he2s0n9ywg5yepr7vezjqtkf\",\n                    \"name\": \"ipv6\",\n                    \"displayname\": \"\u0631\u0648\u062a\u0631 \u0645\u062c\u0627\u0632\u06cc \u0628\u0627 \u0622\u06cc\u067e\u06cc \u0648\u0631\u0698\u0646 \u06f6\",\n                    \"displayname_fa\": \"ipv6\",\n                    \"hourly_started_price\": 10000,\n                    \"traffic_transfer_overprice\": 1000,\n                    \"traffic_transfer_plan\": 1,\n                    \"networkrate\": 250,\n                    \"type\": \"Isolated\",\n                    \"description\": \"\",\n                    \"internet_protocol\": \"DualStack\"\n                }\n            },\n            \"instance\": {\n                \"id\": \"01jz0m8z7ge1m0yqmnjyyvnpn4\",\n                \"instance_cs_id\": \"b28049a1-5f13-4950-b6e5-c5c926e10cc9\",\n                \"ipaddress\": \"192.168.1.103\",\n                \"ipaddress_v6\": \"2a04:acc0:18:61d8:0:70ff:fe04:1\",\n                \"macaddress\": \"02:00:70:04:00:01\",\n                \"is_default\": false,\n                \"created_at\": \"2025-06-30T14:36:20.000000Z\",\n                \"secondary_ips\": []\n            },\n            \"protocol\": \"TCP\",\n            \"port_start_public\": 1,\n            \"port_end_public\": 2,\n            \"port_start_private\": 1,\n            \"port_end_private\": 2,\n            \"status\": \"Active\",\n            \"created_at\": \"2025-06-30T15:17:16.000000Z\"\n        }\n    ]\n}\n    ",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "name": "Add Port Forward Rule",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/zone\/:zoneId\/network\/:networkId\/port-forward\/:networkPublicIpId",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/zone\/:zoneId\/network\/:networkId\/port-forward\/:networkPublicIpId",
                                    "variable": [
                                        {
                                            "id": "zoneId",
                                            "key": "zoneId",
                                            "value": "01HZYKJ8QK8ZJ6K8J6K8J6K8J6",
                                            "description": "The zone ULID."
                                        },
                                        {
                                            "id": "networkId",
                                            "key": "networkId",
                                            "value": "01HZYKJ8QK8ZJ6K8J6K8J6K8J6",
                                            "description": "The network ULID."
                                        },
                                        {
                                            "id": "networkPublicIpId",
                                            "key": "networkPublicIpId",
                                            "value": "01HZYKJ8QK8ZJ6K8J6K8J6K8J6",
                                            "description": "The ID of the public IP."
                                        }
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\"network_id\":\"01F8MECHZX3RZ8Y6B8Q5F1E3V7\",\"public_ip_id\":\"01F8MECHZX3RZ8Y6B8Q5F1E3V8\",\"protocol_type\":\"TCP\",\"instance_id\":\"01HZYKJ8QK8ZJ6K8J6K8J6K8J6\",\"port_start_public\":8080,\"port_start_private\":80,\"port_end_public\":20,\"port_end_private\":14,\"instance_network_secondary_ip_id\":\"01F8MECHZX3RZ8Y6B8Q5F1E3V9\"}"
                                },
                                "description": "Add a new port forward rule to a network."
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "{\"success\":true,\"data\":{\"rule_id\":\"01HZYKJ8QK8ZJ6K8J6K8J6K8J6\"}}",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "name": "Delete Port Forward Rule",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/zone\/:zoneId\/network\/:networkId\/port-forward\/:networkPublicIpId\/:portforwardId",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/zone\/:zoneId\/network\/:networkId\/port-forward\/:networkPublicIpId\/:portforwardId",
                                    "variable": [
                                        {
                                            "id": "zoneId",
                                            "key": "zoneId",
                                            "value": "01HZYKJ8QK8ZJ6K8J6K8J6K8J6",
                                            "description": "The zone ULID."
                                        },
                                        {
                                            "id": "networkId",
                                            "key": "networkId",
                                            "value": "01HZYKJ8QK8ZJ6K8J6K8J6K8J6",
                                            "description": "The network ULID."
                                        },
                                        {
                                            "id": "networkPublicIpId",
                                            "key": "networkPublicIpId",
                                            "value": "01HZYKJ8QK8ZJ6K8J6K8J6K8J6",
                                            "description": "The ID of the public IP."
                                        },
                                        {
                                            "id": "portforwardId",
                                            "key": "portforwardId",
                                            "value": "01HZYKJ8QK8ZJ6K8J6K8J6K8J6",
                                            "description": "The port forward rule ULID."
                                        }
                                    ]
                                },
                                "method": "DELETE",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": null,
                                "description": ""
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "{\n    \"data\": {\n        \"success\": true\n    }\n}",
                                    "name": ""
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "VPN",
                    "description": "VPN (Virtual Private Network) allows secure, encrypted connections over public networks.\nIn this API, VPN endpoints enable users to manage VPN access for their networks.\n<p>\n <b>Concept of VPN<\/b><br>\nVPNs provide privacy and security by tunneling traffic between endpoints. This is useful for remote access, secure communication, and bypassing network restrictions.\n<br><b>Usage<\/b>\n<ul>\n    <li>Enable or disable VPN for a specific network zone.<\/li>\n     <li>Update VPN credentials.<\/li>\n     <li>Retrieve current VPN credentials.<\/li>\n<\/ul>\n<b> Credentials<\/b><br>\nThe `show` endpoint returns L2TP VPN credentials for the specified network and zone.\n<\/p>",
                    "item": [
                        {
                            "name": "VPN Detail",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/zone\/:zoneId\/network\/:networkId\/vpn",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/zone\/:zoneId\/network\/:networkId\/vpn",
                                    "variable": [
                                        {
                                            "id": "zoneId",
                                            "key": "zoneId",
                                            "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                            "description": "The ID of the zone."
                                        },
                                        {
                                            "id": "networkId",
                                            "key": "networkId",
                                            "value": "01H9ZCNF46W6C1EM45T21B6M0G",
                                            "description": "The ID of the network."
                                        }
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": null,
                                "description": "  <aside class=\"notice\">need <small class=\"badge\">network:vpn:show<\/small> ability for api token<\/aside>\n   <p>By Default L2TP\/IPsec VPN is disable for all networks. You can use the credentials to connect to the VPN server. The credentials include an IP address, username, password, and pre-shared key (PSK).<br><\/p>"
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "{ \"data\": { \"ipaddress\": \"192.168.1.2\", \"username\": \"\", \"password\": \"\", \"presharedkey\": \"\", \"status\": \"Deactive\" } }",
                                    "name": "VPN details retrieved successfully."
                                }
                            ]
                        },
                        {
                            "name": "Enable VPN",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/zone\/:zoneId\/network\/:networkId\/vpn\/enable",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/zone\/:zoneId\/network\/:networkId\/vpn\/enable",
                                    "variable": [
                                        {
                                            "id": "zoneId",
                                            "key": "zoneId",
                                            "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                            "description": "The ID of the zone."
                                        },
                                        {
                                            "id": "networkId",
                                            "key": "networkId",
                                            "value": "01H9ZCNF46W6C1EM45T21B6M0G",
                                            "description": "The ID of the network."
                                        }
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": null,
                                "description": "  <aside class=\"notice\">need <small class=\"badge\">network:vpn:enable<\/small> ability for api token<\/aside>\n  <b>Note:<\/b> This function runs asynchronously in the background. The response will be:<br>\n  <pre>{\n    \"data\": {\n        \"success\": true\n    }\n  }<\/pre>\n  To check the status of the enabled vpn and its credentials, use the <b>VPN Details<\/b> endpoint.\n"
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "{\"data\": {\"success\": true}}",
                                    "name": "VPN enabled successfully."
                                }
                            ]
                        },
                        {
                            "name": "Disable VPN",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/zone\/:zoneId\/network\/:networkId\/vpn\/disable",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/zone\/:zoneId\/network\/:networkId\/vpn\/disable",
                                    "variable": [
                                        {
                                            "id": "zoneId",
                                            "key": "zoneId",
                                            "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                            "description": "The ID of the zone."
                                        },
                                        {
                                            "id": "networkId",
                                            "key": "networkId",
                                            "value": "01H9ZCNF46W6C1EM45T21B6M0G",
                                            "description": "The ID of the network."
                                        }
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": null,
                                "description": "  <aside class=\"notice\">need <small class=\"badge\">network:vpn:disable<\/small> ability for api token<\/aside>\n<b>Note:<\/b> This function runs asynchronously in the background. The response will be:<br>\n  <pre>{\n    \"data\": {\n        \"success\": true\n    }\n  }<\/pre>\n  To check the status of the disabled vpn, use the <b>VPN Details<\/b> endpoint."
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "{\"data\": {\"success\": true}}",
                                    "name": "VPN disabled successfully."
                                }
                            ]
                        },
                        {
                            "name": "Update VPN Credentials",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/zone\/:zoneId\/network\/:networkId\/vpn",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/zone\/:zoneId\/network\/:networkId\/vpn",
                                    "variable": [
                                        {
                                            "id": "zoneId",
                                            "key": "zoneId",
                                            "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                            "description": "The ID of the zone."
                                        },
                                        {
                                            "id": "networkId",
                                            "key": "networkId",
                                            "value": "01H9ZCNF46W6C1EM45T21B6M0G",
                                            "description": "The ID of the network."
                                        }
                                    ]
                                },
                                "method": "PUT",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": null,
                                "description": "  <aside class=\"notice\">need <small class=\"badge\">network:vpn:update<\/small> ability for api token<\/aside>\n<b>Note:<\/b> This function runs asynchronously in the background. The response will be:<br>\n  <pre>{\n    \"data\": {\n        \"success\": true\n    }\n  }<\/pre>\n  To check the status of the new vpn credentials, use the <b>VPN Details<\/b> endpoint."
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "{\"data\": {\"success\": true}}",
                                    "name": "VPN credentials updated successfully."
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "LoadBalance",
                    "description": "Load balancing distributes incoming network traffic across multiple servers to ensure no single server becomes overwhelmed, improving responsiveness and availability.",
                    "item": [
                        {
                            "name": "List Load Balancing Rules",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/zone\/:zoneId\/network\/:networkId\/load-balancer",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/zone\/:zoneId\/network\/:networkId\/load-balancer",
                                    "variable": [
                                        {
                                            "id": "zoneId",
                                            "key": "zoneId",
                                            "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                            "description": "The ID of the zone."
                                        },
                                        {
                                            "id": "networkId",
                                            "key": "networkId",
                                            "value": "01H9ZCNF46W6C1EM45T21B6M0G",
                                            "description": "The ID of the network."
                                        }
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": null,
                                "description": "Retrieves all load balancing rules for a network."
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "{\"data\": [{\"id\": \"rule_id\", \"name\": \"lb-rule\", \"algorithm\": \"roundrobin\", \"public_port\": 80, \"private_port\": 8080, \"status\": \"Active\"}]}",
                                    "name": "List of load balancing rules."
                                }
                            ]
                        },
                        {
                            "name": "Add Load Balancing Rule",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/zone\/:zoneId\/network\/:networkId\/load-balancer\/rule",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/zone\/:zoneId\/network\/:networkId\/load-balancer\/rule",
                                    "variable": [
                                        {
                                            "id": "zoneId",
                                            "key": "zoneId",
                                            "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                            "description": "The ID of the zone."
                                        },
                                        {
                                            "id": "networkId",
                                            "key": "networkId",
                                            "value": "01H9ZCNF46W6C1EM45T21B6M0G",
                                            "description": "The ID of the network."
                                        }
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\"public_ip_id\":\"01HZYKJ8QK8ZJ6K8J6K8J6K8J6\",\"name\":\"web-lb\",\"algorithm\":\"roundrobin\",\"public_port\":80,\"private_port\":8080}"
                                },
                                "description": "Creates a new load balancing rule for a network."
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "{\"data\": {\"success\": true}}",
                                    "name": "Rule created successfully."
                                }
                            ]
                        },
                        {
                            "name": "Delete Load Balancing Rule",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/zone\/:zoneId\/network\/:networkId\/load-balancer\/rule\/:loadBalanceRuleId",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/zone\/:zoneId\/network\/:networkId\/load-balancer\/rule\/:loadBalanceRuleId",
                                    "variable": [
                                        {
                                            "id": "zoneId",
                                            "key": "zoneId",
                                            "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                            "description": "The ID of the zone."
                                        },
                                        {
                                            "id": "networkId",
                                            "key": "networkId",
                                            "value": "01H9ZCNF46W6C1EM45T21B6M0G",
                                            "description": "The ID of the network."
                                        },
                                        {
                                            "id": "loadBalanceRuleId",
                                            "key": "loadBalanceRuleId",
                                            "value": "01HZYKJ8QK8ZJ6K8J6K8J6K8J6",
                                            "description": "The ID of the load balancing rule."
                                        }
                                    ]
                                },
                                "method": "DELETE",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": null,
                                "description": "Deletes a load balancing rule by its ID."
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "{\"data\": {\"success\": true}}",
                                    "name": "Rule deleted successfully."
                                }
                            ]
                        },
                        {
                            "name": "Assign Load Balancing Rule",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/zone\/:zoneId\/network\/:networkId\/load-balancer\/rule\/:loadBalanceRuleId\/assign",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/zone\/:zoneId\/network\/:networkId\/load-balancer\/rule\/:loadBalanceRuleId\/assign",
                                    "variable": [
                                        {
                                            "id": "zoneId",
                                            "key": "zoneId",
                                            "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                            "description": "The ID of the zone."
                                        },
                                        {
                                            "id": "networkId",
                                            "key": "networkId",
                                            "value": "01H9ZCNF46W6C1EM45T21B6M0G",
                                            "description": "The ID of the network."
                                        },
                                        {
                                            "id": "loadBalanceRuleId",
                                            "key": "loadBalanceRuleId",
                                            "value": "01HZYKJ8QK8ZJ6K8J6K8J6K8J6",
                                            "description": "The ID of the load balancing rule."
                                        }
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\"instance_network_ids\":\"[\\\"01HZYKJ8QK8ZJ6K8J6K8J6K8J6\\\"]\"}"
                                },
                                "description": "Assigns instances to a load balancing rule."
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "{\"data\": {\"success\": true}}",
                                    "name": "Instances assigned successfully."
                                }
                            ]
                        },
                        {
                            "name": "De-Assign Load Balancing Rule",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/zone\/:zoneId\/network\/:networkId\/load-balancer\/rule\/:loadBalanceRuleId\/de-assign",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/zone\/:zoneId\/network\/:networkId\/load-balancer\/rule\/:loadBalanceRuleId\/de-assign",
                                    "variable": [
                                        {
                                            "id": "zoneId",
                                            "key": "zoneId",
                                            "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                            "description": "The ID of the zone."
                                        },
                                        {
                                            "id": "networkId",
                                            "key": "networkId",
                                            "value": "01H9ZCNF46W6C1EM45T21B6M0G",
                                            "description": "The ID of the network."
                                        },
                                        {
                                            "id": "loadBalanceRuleId",
                                            "key": "loadBalanceRuleId",
                                            "value": "01HZYKJ8QK8ZJ6K8J6K8J6K8J6",
                                            "description": "The ID of the load balancing rule."
                                        }
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\"instance_network_id\":\"01HZYKJ8QK8ZJ6K8J6K8J6K8J6\"}"
                                },
                                "description": "Removes an instance from a load balancing rule."
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "{\"data\": {\"success\": true}}",
                                    "name": "Instance de-assigned successfully."
                                }
                            ]
                        },
                        {
                            "name": "HAProxy Live Report",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/zone\/:zoneId\/network\/:networkId\/ha\/live",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/zone\/:zoneId\/network\/:networkId\/ha\/live",
                                    "variable": [
                                        {
                                            "id": "zoneId",
                                            "key": "zoneId",
                                            "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                            "description": "The ID of the zone."
                                        },
                                        {
                                            "id": "networkId",
                                            "key": "networkId",
                                            "value": "01H9ZCNF46W6C1EM45T21B6M0G",
                                            "description": "The ID of the network."
                                        }
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": null,
                                "description": "Retrieves live HAProxy statistics for the network."
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "{\"data\":{\"updated_at\":1752566580,\"rules\":[]}}",
                                    "name": "Live HAProxy stats."
                                }
                            ]
                        },
                        {
                            "name": "HAProxy Log Report",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/zone\/:zoneId\/network\/:networkId\/ha\/log",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/zone\/:zoneId\/network\/:networkId\/ha\/log",
                                    "variable": [
                                        {
                                            "id": "zoneId",
                                            "key": "zoneId",
                                            "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                            "description": "The ID of the zone."
                                        },
                                        {
                                            "id": "networkId",
                                            "key": "networkId",
                                            "value": "01H9ZCNF46W6C1EM45T21B6M0G",
                                            "description": "The ID of the network."
                                        }
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": null,
                                "description": "Retrieves HAProxy logs for the network."
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "{\"data\":[]}",
                                    "name": "HAProxy logs."
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Offerings",
                    "description": "",
                    "item": [
                        {
                            "name": "List Network Offering",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/zone\/:zoneId\/network\/service-offering",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/zone\/:zoneId\/network\/service-offering",
                                    "variable": [
                                        {
                                            "id": "zoneId",
                                            "key": "zoneId",
                                            "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                            "description": "The ID of the zone."
                                        }
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": null,
                                "description": "  <aside class=\"notice\">need <small class=\"badge\">network:service-offering:list<\/small> ability for api token<\/aside>\n  <br>\n  <b>Response fields:<\/b>\n  <ul>\n    <li><b>id<\/b>: Unique identifier of the network offering.<\/li>\n    <li><b>name<\/b>: Internal name of the network offering.<\/li>\n    <li><b>displayname<\/b>: Display name (EN).<\/li>\n    <li><b>displayname_fa<\/b>: Display name (FA).<\/li>\n    <li><b>hourly_started_price<\/b>: Cost per hour in Toman.<\/li>\n    <li><b>traffic_transfer_overprice<\/b>: Price of each extra gigabyte of traffic (Toman).<\/li>\n    <li><b>traffic_transfer_free_gig<\/b>: Free network transfer in gigabytes.<\/li>\n    <li><b>networkrate<\/b>: Network bandwidth in megabits per second (Mbps).<\/li>\n    <li><b>type<\/b>: Network type. <b>Shared<\/b> (default network), <b>L2<\/b> (Layer 2 switch network), or <b>Isolated<\/b> (Layer 3 switch network).<\/li>\n    <li><b>description<\/b>: Description of the network offering.<\/li>\n    <li><b>internet_protocol<\/b>: Can be <b>DualStack<\/b> (IPv6 & IPv4) or <b>IPv4<\/b>.<\/li>\n  <\/ul>"
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "{\n    \"data\": [\n        {\n            \"id\": \"offering_id_1\",\n            \"name\": \"OfferingL2\",\n            \"displayname\": \"Offering L2\",\n            \"displayname_fa\": \"\u0622\u0641\u0631\u06cc\u0646\u06af L2\",\n            \"hourly_started_price\": 5,\n            \"traffic_transfer_overprice\": 0,\n            \"traffic_transfer_plan\": 500,\n            \"networkrate\": 100,\n            \"type\": \"L2\",\n            \"description\": \"L2 network offering\",\n            \"internet_protocol\": \"IPv4\"\n        },\n        {\n            \"id\": \"offering_id_2\",\n            \"name\": \"OfferingIsolated\",\n            \"displayname\": \"Offering Isolated\",\n            \"displayname_fa\": \"\u0622\u0641\u0631\u06cc\u0646\u06af \u0627\u06cc\u0632\u0648\u0644\u0647\",\n            \"hourly_started_price\": 8,\n            \"traffic_transfer_overprice\": 2,\n            \"traffic_transfer_plan\": 800,\n            \"networkrate\": 200,\n            \"type\": \"Isolated\",\n            \"description\": \"Isolated network offering\",\n            \"internet_protocol\": \"DualStack\"\n        }\n    ]\n}",
                                    "name": "Successful response with a list of network offerings."
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "name": "Kubernetes",
            "description": "\n<div class=\"sl-prose\">\n<p>Kubernetes is an open-source platform designed for managing containerized workloads and services.  It provides a powerful and flexible way to deploy, scale, and manage applications across a cluster of machines. Think of it as an operating system for your cloud-native applications.<\/p>\n\n<p><b>Key Concepts:<\/b><\/p>\n<ul>\n   <li><b>Containers:<\/b>  Applications are packaged into containers, which are lightweight, standalone, and executable packages that include everything needed to run a piece of software (code, runtime, system tools, libraries, settings).<\/li>\n   <li><b>Nodes:<\/b>  A Kubernetes cluster consists of a set of worker machines, called nodes, that run containerized applications.  Every cluster has at least one worker node.<\/li>\n   <li><b>Control Plane:<\/b> The control plane manages the worker nodes and the Pods in the cluster. In production environments, the control plane usually runs across multiple computers and a cluster usually runs multiple nodes, providing fault-tolerance and high availability.<\/li>\n   <li><b>Pods:<\/b>  Pods are the smallest deployable units of computing that you can create and manage in Kubernetes. A Pod (as in a pod of whales or pea pod) is a group of one or more containers, with shared storage\/network resources, and a specification for how to run the containers.<\/li>\n<\/ul>\n\n<p><b>Cluster Statuses:<\/b><\/p>\n<p>Each cluster can be in one of the following statuses, indicating its current operational state:<\/p>\n<ul>\n   <li><b>Pending:<\/b> The cluster is being created and is not yet ready for use.<\/li>\n   <li><b>Deleting:<\/b> The cluster is in the process of being deleted.<\/li>\n   <li><b>Deleted:<\/b> The cluster has been successfully deleted.<\/li>\n   <li><b>Started:<\/b> The cluster is running and ready to accept workloads.<\/li>\n   <li><b>Stopped:<\/b> The cluster has been stopped and is not currently running.<\/li>\n   <li><b>Failed:<\/b> An error occurred in the cluster, and it is not operational.<\/li>\n   <li><b>Alert:<\/b>  An issue has been detected with the cluster that requires attention.<\/li>\n   <li><b>Stopping:<\/b> The cluster is in the process of being stopped.<\/li>\n   <li><b>Starting:<\/b> The cluster is in the process of starting up.<\/li>\n   <li><b>Running:<\/b>  The cluster is operational and running normally.<\/li>\n   <li><b>Upgrading:<\/b> The cluster's Kubernetes version is being upgraded.<\/li>\n   <li><b>Scaling:<\/b> The number of nodes in the cluster is being adjusted.<\/li>\n   <li><b>UpdateServiceOffering:<\/b> The service offering (e.g., hardware configuration) of the cluster is being changed.<\/li>\n    <li><b>Suspend:<\/b> The cluster is in suspend state.<\/li>\n    <li><b>Suspending:<\/b> The cluster is in suspending process.<\/li>\n    <li><b>UnSuspending:<\/b> The cluster is in UnSuspending process.<\/li>\n<\/ul>\n<\/div>",
            "item": [
                {
                    "name": "Cluster",
                    "description": "",
                    "item": [
                        {
                            "name": "Index",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/zone\/:zoneId\/kubernetes",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/zone\/:zoneId\/kubernetes",
                                    "variable": [
                                        {
                                            "id": "zoneId",
                                            "key": "zoneId",
                                            "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                            "description": "The ID of the zone."
                                        }
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": null,
                                "description": " <aside class=\"notice\">need <small class=\"badge\">kubernetes:cluster:list<\/small> ability for api token<\/aside>"
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "{\n        \"data\": [\n            {\n                \"id\": \"01F8MECHZX3TBDSZ7XRADM79XE\",\n                \"name\": \"example-cluster\",\n                \"description\": \"This is a test cluster\",\n                \"zone_id\": \"zone-id\",\n                \"status\": \"Running\",\n                \"kubernetes_version\": {\n                    \"id\": \"k8s-version-id\",\n                    \"version\": \"1.26.14\",\n                    \"enabled\": true,\n                    \"min_cpu\": 2,\n                    \"min_memory\": 2048\n                },\n                \"service_offering\": {\n                    \"id\": \"service-offering-id\",\n                    \"name\": \"service-offering-name\",\n                    \"hourly_price\": {\n                        \"up\": 100,\n                        \"down\": 100\n                    },\n                    \"hardware\": {\n                        \"cpu_core\": 4,\n                        \"memory_mb\": 4096,\n                        \"cpu_speed_MHz\": 2300,\n                        \"root_disk_size_gB\": 50,\n                        \"network_rate\": 980,\n                        \"disk_iops\": 2500\n                    }\n                },\n                \"ssh_key\": \"ssh-ed25519 ...\",\n                \"ha_enabled\": false,\n                \"cluster_size\": 1,\n                \"created_at\": 1737794395,\n                \"updated_at\": 1737794395\n            }\n        ]\n    }",
                                    "name": "Successful response with cluster list."
                                }
                            ]
                        },
                        {
                            "name": "Create",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/zone\/:zoneId\/kubernetes",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/zone\/:zoneId\/kubernetes",
                                    "variable": [
                                        {
                                            "id": "zoneId",
                                            "key": "zoneId",
                                            "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                            "description": "The ID of the zone."
                                        }
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\"name\":\"my-k8s-cluster\",\"kubernetes_version_id\":\"01F8MECHZX3RZ8Y6B8Q5F1E3V6\",\"service_offering_id\":\"01F8MECHZX3RZ8Y6B8Q5F1E3V7\",\"ha_enabled\":false,\"sshkey_id\":\"01F8MECHZX3RZ8Y6B8Q5F1E3V7\",\"network_id\":\"01F8MECHZX3RZ8Y6B8Q5F1E3V5\",\"description\":\"This is a test Kubernetes cluster.\",\"cluster_size\":3,\"private_registry\":{\"username\":\"my-username\",\"password\":\"my-password\",\"url\":\"https:\\\/\\\/my-private-registry.com\"},\"ha_config\":{\"controller_nodes\":3,\"external_loadbalancer_ip\":\"192.0.2.1\"}}"
                                },
                                "description": " <aside class=\"notice\">need <small class=\"badge\">kubernetes:cluster:create<\/small> ability for api token<\/aside>\n\n <b>Note:<\/b> This function runs asynchronously in the background. The response will be:<br>\n <pre>{\n   \"data\": {\n       \"success\": true\n   }\n }<\/pre>\n To check the status of the created cluster, use the <b>List Cluster<\/b> endpoint and review the <code>status<\/code> field.\n <\/p>"
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "{\"data\":{\"success\":true}}",
                                    "name": "Successful response"
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The name field is required.\", \"errors\": { \"name\": [ \"The name field is required.\" ] } }",
                                    "name": "Validation error - Name is required."
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The kubernetes version id field is required.\", \"errors\": { \"kubernetes_version_id\": [ \"The kubernetes version id field is required.\" ] } }",
                                    "name": "Validation error - Kubernetes Version ID is required."
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The service offering id field is required.\", \"errors\": { \"service_offering_id\": [ \"The service offering id field is required.\" ] } }",
                                    "name": "Validation error - Service Offering ID is required."
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The ha enabled field is required.\", \"errors\": { \"ha_enabled\": [ \"The ha enabled field is required.\" ] } }",
                                    "name": "Validation error - HA Enabled is required."
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The ssh key field is required.\", \"errors\": { \"ssh_key\": [ \"The ssh key field is required.\" ] } }",
                                    "name": "Validation error - SSH Key is required."
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The network id field is required.\", \"errors\": { \"network_id\": [ \"The network id field is required.\" ] } }",
                                    "name": "Validation error - Network ID is required."
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The selected kubernetes version id is invalid.\", \"errors\": { \"kubernetes_version_id\": [ \"The selected kubernetes version id is invalid.\" ] } }",
                                    "name": "Validation error - Invalid Kubernetes Version ID."
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The selected service offering id is invalid.\", \"errors\": { \"service_offering_id\": [ \"The selected service offering id is invalid.\" ] } }",
                                    "name": "Validation error - Invalid Service Offering ID."
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The selected network id is invalid.\", \"errors\": { \"network_id\": [ \"The selected network id is invalid.\" ] } }",
                                    "name": "Validation error - Invalid Network ID."
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The kubernetes version id field is required.\", \"errors\": { \"kubernetes_version_id\": [ \"The required CPU (cpu core) exceeds the customer's limit (in core count).\" ] } }",
                                    "name": "Validation error - Customer's CPU limit exceeds."
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The kubernetes version id field is required.\", \"errors\": { \"kubernetes_version_id\": [ \"The required memory (memory MB) exceeds the customer's limit (in MB).\" ] } }",
                                    "name": "Validation error - Customer's Memory (RAM) limit exceeds."
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The kubernetes version id field is required.\", \"errors\": { \"kubernetes_version_id\": [ \"The required primary storage (disk GB) exceeds the customer's limit (in GB).\" ] } }",
                                    "name": "Validation error - Customer's Disk limit exceeds."
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The kubernetes version id field is required.\", \"errors\": { \"kubernetes_version_id\": [ \"The required VMs (vms) exceeds the customer's limit (VM number).",
                                    "name": "Validation error - Customer's VM count limit exceeds."
                                }
                            ]
                        },
                        {
                            "name": "Show",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/zone\/:zoneId\/kubernetes\/:clusterId",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/zone\/:zoneId\/kubernetes\/:clusterId",
                                    "variable": [
                                        {
                                            "id": "zoneId",
                                            "key": "zoneId",
                                            "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                            "description": "The ID of the zone."
                                        },
                                        {
                                            "id": "clusterId",
                                            "key": "clusterId",
                                            "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                            "description": "The ID of the cluster."
                                        }
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": null,
                                "description": " <aside class=\"notice\">need <small class=\"badge\">kubernetes:cluster:show<\/small> ability for api token<\/aside>"
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "{\n        \"data\": {\n                \"id\": \"01F8MECHZX3TBDSZ7XRADM79XE\",\n                \"name\": \"example-cluster\",\n                \"description\": \"This is a test cluster\",\n                \"zone_id\": \"01F8MECHZX3TBDSZ7XRADM79XE\",\n                \"status\": \"Running\",\n                \"kubernetes_version\": {\n                    \"id\": \"k8s-version-id\",\n                    \"version\": \"1.26.14\",\n                    \"enabled\": true,\n                    \"min_cpu\": 2,\n                    \"min_memory\": 2048\n                },\n                \"service_offering\": {\n                    \"id\": \"service-offering-id\",\n                    \"name\": \"service-offering-name\",\n                    \"is_public\": true,\n                    \"is_available\": true,\n                    \"hourly_price\": {\n                        \"up\": 100,\n                        \"down\": 100\n                    },\n                    \"hardware\": {\n                        \"cpu_core\": 4,\n                        \"memory_mb\": 4096,\n                        \"cpu_speed_MHz\": 2300,\n                        \"root_disk_size_gB\": 50,\n                        \"network_rate\": 980,\n                        \"disk_iops\": 2500\n                    }\n                },\n                \"ssh_key\": \"ssh-ed25519 ...\",\n                \"ha_enabled\": false,\n                \"cluster_size\": 1,\n                \"created_at\": 1737794395,\n                \"updated_at\": 1737794395\n            }\n    }",
                                    "name": "Successful response with cluster details."
                                }
                            ]
                        },
                        {
                            "name": "Events",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/zone\/:zoneId\/kubernetes\/:clusterId\/events",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/zone\/:zoneId\/kubernetes\/:clusterId\/events",
                                    "variable": [
                                        {
                                            "id": "zoneId",
                                            "key": "zoneId",
                                            "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                            "description": "The ID of the zone."
                                        },
                                        {
                                            "id": "clusterId",
                                            "key": "clusterId",
                                            "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                            "description": "The ID of the cluster."
                                        }
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\"type\":\"system\",\"product_model\":\"instance\",\"from\":1707653422,\"to\":1707653999,\"page\":1}"
                                },
                                "description": " <aside class=\"notice\">need <small class=\"badge\">kubernetes:cluster:event:list<\/small> ability for api token<\/aside>"
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "{\n        \"data\": [\n            {\n                \"product_id\": \"01F8MECHZX3TBDSZ7XRADM79XE\",\n                \"type\": \"customer\",\n                \"content\": \"A kubernetes cluster event occurred.\",\n                \"created_at\": 1739256828\n            },\n        ],\n        \"meta\": {\n            \"current_page\": 1,\n            \"from\": 1,\n            \"last_page\": 10,\n            \"per_page\": 20,\n            \"to\": 20,\n            \"total\": 200\n        }\n}",
                                    "name": "Success Response"
                                }
                            ]
                        },
                        {
                            "name": "Update",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/zone\/:zoneId\/kubernetes\/:clusterId",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/zone\/:zoneId\/kubernetes\/:clusterId",
                                    "variable": [
                                        {
                                            "id": "zoneId",
                                            "key": "zoneId",
                                            "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                            "description": "The ID of the zone."
                                        },
                                        {
                                            "id": "clusterId",
                                            "key": "clusterId",
                                            "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                            "description": "The ID of the cluster."
                                        }
                                    ]
                                },
                                "method": "PUT",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\"name\":\"eaque\",\"description\":\"Quia rerum quaerat ducimus doloremque magnam voluptas.\"}"
                                },
                                "description": " <aside class=\"notice\">need <small class=\"badge\">kubernetes:cluster:update<\/small> ability for api token<\/aside>"
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "{\n        \"data\": {\n                \"id\": \"01F8MECHZX3TBDSZ7XRADM79XE\",\n                \"name\": \"example-cluster\",\n                \"description\": \"This is a test cluster\",\n                \"zone_id\": \"zone-id\",\n                \"status\": \"Running\",\n                \"kubernetes_version\": {\n                    \"id\": \"k8s-version-id\",\n                    \"version\": \"1.26.14\",\n                    \"enabled\": true,\n                    \"min_cpu\": 2,\n                    \"min_memory\": 2048\n                },\n                \"service_offering\": {\n                    \"id\": \"service-offering-id\",\n                    \"name\": \"service-offering-name\",\n                    \"is_public\": true,\n                    \"is_available\": true,\n                    \"hourly_price\": {\n                        \"up\": 100,\n                        \"down\": 100\n                    },\n                    \"hardware\": {\n                        \"cpu_core\": 4,\n                        \"memory_mb\": 4096,\n                        \"cpu_speed_MHz\": 2300,\n                        \"root_disk_size_gB\": 50,\n                        \"network_rate\": 980,\n                        \"disk_iops\": 2500\n                    }\n                },\n                \"ssh_key\": \"ssh-ed25519 ...\",\n                \"ha_enabled\": false,\n                \"cluster_size\": 1,\n                \"created_at\": 1737794395,\n                \"updated_at\": 1737794395\n            }\n    }",
                                    "name": "Successful response"
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The name field must be a string.\", \"errors\": { \"name\": [ \"The name field must be a string.\" ] } }",
                                    "name": "Validation error - Invalid Name format."
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The description field must be a string.\", \"errors\": { \"description\": [ \"The description field must be a string.\" ] } }",
                                    "name": "Validation error - Invalid Description format."
                                }
                            ]
                        },
                        {
                            "name": "Delete",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/zone\/:zoneId\/kubernetes\/:clusterId",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/zone\/:zoneId\/kubernetes\/:clusterId",
                                    "variable": [
                                        {
                                            "id": "zoneId",
                                            "key": "zoneId",
                                            "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                            "description": "The ID of the zone."
                                        },
                                        {
                                            "id": "clusterId",
                                            "key": "clusterId",
                                            "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                            "description": "The ID of the cluster."
                                        }
                                    ]
                                },
                                "method": "DELETE",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": null,
                                "description": " <aside class=\"notice\">need <small class=\"badge\">kubernetes:cluster:delete<\/small> ability for api token<\/aside>"
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "{\n        \"message\": \"Kubernetes cluster deleted successfully\"\n        } ",
                                    "name": "Successful deletion"
                                }
                            ]
                        },
                        {
                            "name": "Start",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/zone\/:zoneId\/kubernetes\/:clusterId\/start",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/zone\/:zoneId\/kubernetes\/:clusterId\/start",
                                    "variable": [
                                        {
                                            "id": "zoneId",
                                            "key": "zoneId",
                                            "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                            "description": "The ID of the zone."
                                        },
                                        {
                                            "id": "clusterId",
                                            "key": "clusterId",
                                            "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                            "description": "The ID of the cluster."
                                        }
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": null,
                                "description": " <aside class=\"notice\">need <small class=\"badge\">kubernetes:cluster:start<\/small> ability for api token<\/aside>"
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "{\n        \"data\": {\n                \"id\": \"01F8MECHZX3TBDSZ7XRADM79XE\",\n                \"name\": \"example-cluster\",\n                \"description\": \"This is a test cluster\",\n                \"zone_id\": \"zone-id\",\n                \"status\": \"Starting\",\n                \"kubernetes_version\": {\n                    \"id\": \"k8s-version-id\",\n                    \"version\": \"1.26.14\",\n                    \"enabled\": true,\n                    \"min_cpu\": 2,\n                    \"min_memory\": 2048\n                },\n                \"service_offering\": {\n                    \"id\": \"service-offering-id\",\n                    \"name\": \"service-offering-name\",\n                    \"is_public\": true,\n                    \"is_available\": true,\n                    \"hourly_price\": {\n                        \"up\": 100,\n                        \"down\": 100\n                    },\n                    \"hardware\": {\n                        \"cpu_core\": 4,\n                        \"memory_mb\": 4096,\n                        \"cpu_speed_MHz\": 2300,\n                        \"root_disk_size_gB\": 50,\n                        \"network_rate\": 980,\n                        \"disk_iops\": 2500\n                    }\n                },\n                \"ssh_key\": \"ssh-ed25519 ...\",\n                \"ha_enabled\": false,\n                \"cluster_size\": 1,\n                \"created_at\": 1737794395,\n                \"updated_at\": 1737794395\n            }\n    }",
                                    "name": "Successful start"
                                }
                            ]
                        },
                        {
                            "name": "Stop",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/zone\/:zoneId\/kubernetes\/:clusterId\/stop",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/zone\/:zoneId\/kubernetes\/:clusterId\/stop",
                                    "variable": [
                                        {
                                            "id": "zoneId",
                                            "key": "zoneId",
                                            "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                            "description": "The ID of the zone."
                                        },
                                        {
                                            "id": "clusterId",
                                            "key": "clusterId",
                                            "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                            "description": "The ID of the cluster."
                                        }
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": null,
                                "description": " <aside class=\"notice\">need <small class=\"badge\">kubernetes:cluster:stop<\/small> ability for api token<\/aside>"
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "{\n        \"data\": {\n                \"id\": \"01F8MECHZX3TBDSZ7XRADM79XE\",\n                \"name\": \"example-cluster\",\n                \"description\": \"This is a test cluster\",\n                \"zone_id\": \"zone-id\",\n                \"status\": \"Running\",\n                \"kubernetes_version\": {\n                    \"id\": \"k8s-version-id\",\n                    \"version\": \"1.26.14\",\n                    \"enabled\": true,\n                    \"min_cpu\": 2,\n                    \"min_memory\": 2048\n                },\n                \"service_offering\": {\n                    \"id\": \"service-offering-id\",\n                    \"name\": \"service-offering-name\",\n                    \"is_public\": true,\n                    \"is_available\": true,\n                    \"hourly_price\": {\n                        \"up\": 100,\n                        \"down\": 100\n                    },\n                    \"hardware\": {\n                        \"cpu_core\": 4,\n                        \"memory_mb\": 4096,\n                        \"cpu_speed_MHz\": 2300,\n                        \"root_disk_size_gB\": 50,\n                        \"network_rate\": 980,\n                        \"disk_iops\": 2500\n                    }\n                },\n                \"ssh_key\": \"ssh-ed25519 ...\",\n                \"ha_enabled\": false,\n                \"cluster_size\": 1,\n                \"created_at\": 1737794395,\n                \"updated_at\": 1737794395\n            }\n    }",
                                    "name": "Successful stop"
                                }
                            ]
                        },
                        {
                            "name": "Scale",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/zone\/:zoneId\/kubernetes\/:clusterId\/scale",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/zone\/:zoneId\/kubernetes\/:clusterId\/scale",
                                    "variable": [
                                        {
                                            "id": "zoneId",
                                            "key": "zoneId",
                                            "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                            "description": "The ID of the zone."
                                        },
                                        {
                                            "id": "clusterId",
                                            "key": "clusterId",
                                            "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                            "description": "The ID of the cluster."
                                        }
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\"auto_scaling\":false,\"cluster_size\":3,\"min_cluster_size\":1,\"max_cluster_size\":5}"
                                },
                                "description": " <aside class=\"notice\">need <small class=\"badge\">kubernetes:cluster:scale<\/small> ability for api token<\/aside>"
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "{\n        \"data\": {\n                \"id\": \"01F8MECHZX3TBDSZ7XRADM79XE\",\n                \"name\": \"example-cluster\",\n                \"description\": \"This is a test cluster\",\n                \"zone_id\": \"zone-id\",\n                \"status\": \"Scaling\",\n                \"kubernetes_version\": {\n                    \"id\": \"k8s-version-id\",\n                    \"version\": \"1.26.14\",\n                    \"enabled\": true,\n                    \"min_cpu\": 2,\n                    \"min_memory\": 2048\n                },\n                \"service_offering\": {\n                    \"id\": \"service-offering-id\",\n                    \"name\": \"service-offering-name\",\n                    \"is_public\": true,\n                    \"is_available\": true,\n                    \"hourly_price\": {\n                        \"up\": 100,\n                        \"down\": 100\n                    },\n                    \"hardware\": {\n                        \"cpu_core\": 4,\n                        \"memory_mb\": 4096,\n                        \"cpu_speed_MHz\": 2300,\n                        \"root_disk_size_gB\": 50,\n                        \"network_rate\": 980,\n                        \"disk_iops\": 2500\n                    }\n                },\n                \"ssh_key\": \"ssh-ed25519 ...\",\n                \"ha_enabled\": false,\n                \"cluster_size\": 1,\n                \"created_at\": 1737794395,\n                \"updated_at\": 1737794395\n            }\n    }",
                                    "name": "Successful scaling"
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The auto scaling field is required.\", \"errors\": { \"auto_scaling\": [ \"The auto scaling field is required.\" ] } }",
                                    "name": "The auto scaling field is required."
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The auto scaling field must be true or false.\", \"errors\": { \"auto_scaling\": [ \"The auto scaling field must be true or false.\" ] } }",
                                    "name": "Invalid auto scaling format."
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The cluster size field is required when auto scaling is false.\", \"errors\": { \"cluster_size\": [ \"The cluster size field is required when auto scaling is false.\" ] } }",
                                    "name": "The cluster size field is required when auto scaling is false."
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The cluster size must be an integer.\", \"errors\": { \"cluster_size\": [ \"The cluster size must be an integer.\" ] } }",
                                    "name": "Invalid cluster size format."
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The min cluster size field is required when auto scaling is true.\", \"errors\": { \"min_cluster_size\": [ \"The min cluster size field is required when auto scaling is true.\" ] } }",
                                    "name": "The min cluster size field is required when auto scaling is true."
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The min cluster size must be an integer.\", \"errors\": { \"min_cluster_size\": [ \"The min cluster size must be an integer.\" ] } }",
                                    "name": "Invalid min cluster size format."
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The max cluster size field is required when auto scaling is true.\", \"errors\": { \"max_cluster_size\": [ \"The max cluster size field is required when auto scaling is true.\" ] } }",
                                    "name": "The max cluster size field is required when auto scaling is true."
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The max cluster size must be an integer.\", \"errors\": { \"max_cluster_size\": [ \"The max cluster size must be an integer.\" ] } }",
                                    "name": "Invalid max cluster size format."
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Kubernetes Service Events",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "\/zone\/:zoneId\/kubernetes\/events",
                            "query": [],
                            "raw": "{{baseUrl}}\/zone\/:zoneId\/kubernetes\/events",
                            "variable": [
                                {
                                    "id": "zoneId",
                                    "key": "zoneId",
                                    "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                    "description": "The ID of the zone."
                                }
                            ]
                        },
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\"type\":\"system\",\"product_model\":\"instance\",\"from\":1707653422,\"to\":1707653999,\"page\":1}"
                        },
                        "description": " <aside class=\"notice\">need <small class=\"badge\">kubernetes:events:list<\/small> ability for api token<\/aside>"
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{\n        \"data\": [\n            {\n                \"product_id\": \"01F8MECHZX3TBDSZ7XRADM79XE\",\n                \"type\": \"customer\",\n                \"content\": \"A kubernetes cluster event occurred.\",\n                \"created_at\": 1739256828\n            },\n        ],\n        \"meta\": {\n            \"current_page\": 1,\n            \"from\": 1,\n            \"last_page\": 10,\n            \"per_page\": 20,\n            \"to\": 20,\n            \"total\": 200\n        }\n}",
                            "name": "Success Response"
                        }
                    ]
                },
                {
                    "name": "Kubernetes Versions",
                    "description": "",
                    "item": [
                        {
                            "name": "List Kubernetes Versions",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/zone\/:zoneId\/kubernetes\/versions",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/zone\/:zoneId\/kubernetes\/versions",
                                    "variable": [
                                        {
                                            "id": "zoneId",
                                            "key": "zoneId",
                                            "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                            "description": "The ID of the zone."
                                        }
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": null,
                                "description": " <aside class=\"notice\">need <small class=\"badge\">kubernetes:versions:list<\/small> ability for api token<\/aside>"
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "{\n        \"data\": [\n            {\n                \"id\": \"01jetc3f8f218krnm9hwh46j8d\",\n                \"version\": \"1.30.3\",\n                \"enabled\": true,\n                \"min_cpu\": 2,\n                \"min_memory\": 2048\n            }\n        ]\n    }",
                                    "name": "Successful response with available Kubernetes versions."
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Service Offerings",
                    "description": "",
                    "item": [
                        {
                            "name": "List Service Offerings",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/zone\/:zoneId\/kubernetes\/service-offerings",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/zone\/:zoneId\/kubernetes\/service-offerings",
                                    "variable": [
                                        {
                                            "id": "zoneId",
                                            "key": "zoneId",
                                            "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                            "description": "The ID of the zone."
                                        }
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": null,
                                "description": " <aside class=\"notice\">need <small class=\"badge\">kubernetes:service-offerings:list<\/small> ability for api token<\/aside>"
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "{\n        \"data\": [\n            {\n                \"id\": \"01hytvspdx8rzae97ba2qc8fvs\",\n                \"name\": \"n04-04-050-980-v3\",\n                \"is_public\": true,\n                \"is_available\": true,\n                \"hourly_price\": {\n                    \"up\": 100,\n                    \"down\": 100\n                },\n                \"hourly_price_no_discount\": {\n                    \"up\": 100,\n                    \"down\": 100\n                },\n                \"description\": null,\n                \"hardware\": {\n                    \"cpu_core\": 4,\n                    \"memory_mb\": 4096,\n                    \"cpu_speed_MHz\": 2300,\n                    \"root_disk_size_gB\": 50,\n                    \"network_rate\": 980,\n                    \"disk_iops\": 2500\n                }\n            },\n            \/\/ Additional service offerings...\n        ]\n    }",
                                    "name": "Successful response with available service offerings."
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "name": "Object Storage",
            "description": "\n<div class='sl-prose'>\n<p>Object storage is a data storage architecture that manages data as objects, as opposed to other storage architectures like file systems which manage data as a file hierarchy, and block storage which manages data as blocks within sectors and tracks.  Each object typically includes the data itself, a variable amount of metadata, and a globally unique identifier.<\/p>\n\n<p><b>Key Concepts:<\/b><\/p>\n<ul>\n   <li><b>Buckets:<\/b>  Buckets are containers for storing objects.  A bucket is similar to a folder in a file system, except that buckets cannot be nested.<\/li>\n   <li><b>Objects:<\/b> Objects are the fundamental entities stored in object storage.  An object consists of data (any sequence of bytes) and metadata (information about the object, such as its name, size, and content type).<\/li>\n   <li><b>Access Keys & Secret Keys:<\/b>  Object storage is typically accessed using an access key and a secret key, which are similar to a username and password. These keys are used to authenticate requests to the object storage service.<\/li>\n   <li><b>Policies:<\/b> Bucket policies define who has access to a bucket and what actions they can perform. Common policies include \"Private\" (only the owner has access) and \"Public Read\" (anyone can read the objects in the bucket).<\/li>\n   <li><b>URL:<\/b> Each bucket has url.<\/li>\n   <li><b>Status:<\/b> The current status of the bucket (e.g., 'Active', 'Creating', 'Deleting', 'Failed').<\/li>\n   <li><b>Tier:<\/b> storage tier (e.g., 'Standard', 'Infrequent Access', 'Archive').<\/li>\n<\/ul>\n<p><b>Bucket Statuses:<\/b><\/p>\n<ul>\n   <li><b>Active:<\/b> Bucket is ready.<\/li>\n   <li><b>Creating:<\/b> Bucket is creating.<\/li>\n   <li><b>Deleting:<\/b> Bucket is deleting.<\/li>\n   <li><b>Failed:<\/b> Bucket creation failed.<\/li>\n<\/ul>\n<\/div>",
            "item": [
                {
                    "name": "Object Storage Events",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "\/zone\/:zoneId\/object-storage\/events",
                            "query": [],
                            "raw": "{{baseUrl}}\/zone\/:zoneId\/object-storage\/events",
                            "variable": [
                                {
                                    "id": "zoneId",
                                    "key": "zoneId",
                                    "value": "consectetur",
                                    "description": ""
                                }
                            ]
                        },
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\"type\":\"system\",\"from\":1707653422,\"to\":1707653999,\"page\":1}"
                        },
                        "description": " <aside class=\"notice\">need <small class=\"badge\">object_storage:event:list<\/small> ability for api token<\/aside>"
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{\n        \"data\": [\n            {\n                \"product_id\": \"01F8MECHZX3TBDSZ7XRADM79XE\",\n                \"type\": \"customer\",\n                \"content\": \"A bucket cluster event occurred.\",\n                \"created_at\": 1739256828\n            },\n        ],\n        \"meta\": {\n            \"current_page\": 1,\n            \"from\": 1,\n            \"last_page\": 10,\n            \"per_page\": 20,\n            \"to\": 20,\n            \"total\": 200\n        }\n}",
                            "name": "Success Response"
                        }
                    ]
                },
                {
                    "name": "Index",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "\/zone\/:zoneId\/object-storage\/buckets",
                            "query": [],
                            "raw": "{{baseUrl}}\/zone\/:zoneId\/object-storage\/buckets",
                            "variable": [
                                {
                                    "id": "zoneId",
                                    "key": "zoneId",
                                    "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                    "description": "The ID of the zone."
                                }
                            ]
                        },
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": null,
                        "description": " <aside class=\"notice\">need <small class=\"badge\">object_storage:bucket:list<\/small> ability for api token<\/aside>"
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{\"data\":[{\"id\":\"string\",\"name\":\"string\",\"url\":\"string\",\"access_key\":\"string|null\",\"secret_key\":\"string|null\",\"status\":\"string\",\"policy\":\"string\",\"size\":\"integer\",\"created_at\":\"integer\",\"updated_at\":\"integer\",\"tier\":\"string|null\",\"is_failed\":\"boolean\"}]}",
                            "name": "Successful response"
                        }
                    ]
                },
                {
                    "name": "Create (Async)",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "\/zone\/:zoneId\/object-storage\/buckets",
                            "query": [],
                            "raw": "{{baseUrl}}\/zone\/:zoneId\/object-storage\/buckets",
                            "variable": [
                                {
                                    "id": "zoneId",
                                    "key": "zoneId",
                                    "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                    "description": "The ID of the zone."
                                }
                            ]
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\"name\":\"my-new-bucket\",\"policy\":\"Private\"}"
                        },
                        "description": "  <aside class=\"notice\">need <small class=\"badge\">object_storage:bucket:create<\/small> ability for api token<\/aside>\n  <br><b>Note:<\/b> This endpoint works asynchronously. To check the result, use the bucket list endpoint to see the status of your bucket."
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 201,
                            "body": "{\"data\":{\"success\":true}}",
                            "name": "Bucket creation request accepted. Operation is asynchronous; check the bucket list for status."
                        },
                        {
                            "header": [],
                            "code": 422,
                            "body": "{ \"message\": \"The name field is required.\", \"errors\": { \"name\": [ \"The name field is required.\" ] } }",
                            "name": "The name field is required."
                        }
                    ]
                },
                {
                    "name": "Show",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "\/zone\/:zoneId\/object-storage\/buckets\/:bucketId",
                            "query": [],
                            "raw": "{{baseUrl}}\/zone\/:zoneId\/object-storage\/buckets\/:bucketId",
                            "variable": [
                                {
                                    "id": "zoneId",
                                    "key": "zoneId",
                                    "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                    "description": "The ID of the zone."
                                },
                                {
                                    "id": "bucketId",
                                    "key": "bucketId",
                                    "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                    "description": "The ID of the bucket."
                                }
                            ]
                        },
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": null,
                        "description": " <aside class=\"notice\">need <small class=\"badge\">object_storage:bucket:show<\/small> ability for api token<\/aside>"
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{\"data\":{\"id\":\"string\",\"name\":\"string\",\"url\":\"string\",\"access_key\":\"string|null\",\"secret_key\":\"string|null\",\"status\":\"string\",\"policy\":\"string\",\"size\":\"integer\",\"created_at\":\"integer\",\"updated_at\":\"integer\",\"tier\":\"string|null\",\"is_failed\":\"boolean\",\"message\":\"string|null\"}}",
                            "name": "Successful response"
                        }
                    ]
                },
                {
                    "name": "Bucket Events",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "\/zone\/:zoneId\/object-storage\/buckets\/:bucketId\/events",
                            "query": [],
                            "raw": "{{baseUrl}}\/zone\/:zoneId\/object-storage\/buckets\/:bucketId\/events",
                            "variable": [
                                {
                                    "id": "zoneId",
                                    "key": "zoneId",
                                    "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                    "description": "The ID of the zone."
                                },
                                {
                                    "id": "bucketId",
                                    "key": "bucketId",
                                    "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                    "description": "The ID of the bucket."
                                }
                            ]
                        },
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\"type\":\"system\",\"from\":1707653422,\"to\":1707653999,\"page\":1}"
                        },
                        "description": " <aside class=\"notice\">need <small class=\"badge\">object_storage:event:list<\/small> ability for api token<\/aside>"
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{\n        \"data\": [\n            {\n                \"product_id\": \"01F8MECHZX3TBDSZ7XRADM79XE\",\n                \"type\": \"customer\",\n                \"content\": \"A bucket cluster event occurred.\",\n                \"created_at\": 1739256828\n            },\n        ],\n        \"meta\": {\n            \"current_page\": 1,\n            \"from\": 1,\n            \"last_page\": 10,\n            \"per_page\": 20,\n            \"to\": 20,\n            \"total\": 200\n        }\n}",
                            "name": "Success Response"
                        }
                    ]
                },
                {
                    "name": "Update (Async)",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "\/zone\/:zoneId\/object-storage\/buckets\/:bucketId",
                            "query": [],
                            "raw": "{{baseUrl}}\/zone\/:zoneId\/object-storage\/buckets\/:bucketId",
                            "variable": [
                                {
                                    "id": "zoneId",
                                    "key": "zoneId",
                                    "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                    "description": "The ID of the zone."
                                },
                                {
                                    "id": "bucketId",
                                    "key": "bucketId",
                                    "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                    "description": "The ID of the bucket."
                                }
                            ]
                        },
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\"policy\":\"Public\"}"
                        },
                        "description": "  <aside class=\"notice\">need <small class=\"badge\">object_storage:bucket:update<\/small> ability for api token<\/aside>\n  <br><b>Note:<\/b> This endpoint works asynchronously. After calling this endpoint, the bucket will be in the <code>Updating<\/code> status. Shortly after, the status will change to <code>Active<\/code> once the update is complete. Use the bucket list or show endpoint to check the current status."
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{\"data\":{\"id\":\"string\",\"name\":\"string\",\"url\":\"string\",\"access_key\":\"string|null\",\"secret_key\":\"string|null\",\"status\":\"string\",\"policy\":\"string\",\"size\":\"integer\",\"created_at\":\"integer\",\"updated_at\":\"integer\",\"tier\":\"string|null\",\"is_failed\":\"boolean\"}}",
                            "name": "Bucket update request accepted. Operation is asynchronous; check the bucket list or show endpoint for status."
                        },
                        {
                            "header": [],
                            "code": 422,
                            "body": "{ \"message\": \"The policy field is required.\", \"errors\": { \"policy\": [ \"The policy field is required.\" ] } }",
                            "name": "The policy field is required."
                        }
                    ]
                },
                {
                    "name": "Delete",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "\/zone\/:zoneId\/object-storage\/buckets\/:bucketId",
                            "query": [],
                            "raw": "{{baseUrl}}\/zone\/:zoneId\/object-storage\/buckets\/:bucketId",
                            "variable": [
                                {
                                    "id": "zoneId",
                                    "key": "zoneId",
                                    "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                    "description": "The ID of the zone."
                                },
                                {
                                    "id": "bucketId",
                                    "key": "bucketId",
                                    "value": "01F8MECHZX3TBDSZ7XRADM79XE",
                                    "description": "The ID of the bucket."
                                }
                            ]
                        },
                        "method": "DELETE",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": null,
                        "description": " <aside class=\"notice\">need <small class=\"badge\">object_storage:bucket:delete<\/small> ability for api token<\/aside>"
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 204,
                            "body": "[]",
                            "name": "Successful response"
                        }
                    ]
                }
            ]
        },
        {
            "name": "DNS",
            "description": "\n<div class='sl-prose'>\n<p>A DNS Domain (or DNS Zone) is a distinct part of the domain namespace for which administrative responsibility has been delegated. Think of it as a container for DNS records for a specific domain and its subdomains (if any). Managing a DNS Domain involves creating, updating, and deleting DNS records within that domain.<\/p>\n\n<p><b>Key Concepts:<\/b><\/p>\n<ul>\n   <li><b>Domain:<\/b> A portion of the DNS namespace (e.g., example.com) that is managed as a single unit. A domain contains all the DNS records for that domain name and potentially its subdomains. This is also commonly referred to as a \"zone\".<\/li>\n   <li><b>Domain Name:<\/b> The domain name associated with the DNS Domain (e.g., example.com).<\/li>\n   <li><b>Status:<\/b> The current status of the DNS Domain (e.g., 'Active', 'Pending', 'Error').<\/li>\n   <li><b>DNS Info:<\/b> Information about the DNS servers responsible for the domain. This often includes:\n      <ul>\n         <li><b>virak_dns:<\/b> The nameservers provided by the service (e.g., ns1.virak.cloud, ns2.virak.cloud). These are the nameservers you should point your domain to at your registrar.<\/li>\n<li><b>domain_dns:<\/b> The current nameservers configured for the domain (as detected by the system). This might be different from `virak_dns` if the domain hasn't been pointed to our nameservers yet, or if the change hasn't fully propagated.<\/li>\n      <\/ul>\n   <\/li>\n   <li><b>TLD (Top-Level Domain):<\/b> The last part of a domain name (e.g., .com, .org, .net). Valid TLDs are required when creating a DNS Domain.<\/li>\n<\/ul>\n\n\n<p><b>Domain Management<\/b><\/p>\n<p>This API allows you to manage DNS Domains. You can create, list, retrieve details about, and delete domains. When you create a domain, you'll receive the `virak_dns` nameservers. You'll need to update your domain's nameserver settings at your domain registrar to point to these nameservers. This delegates authority for your domain's DNS to our service.<\/p>\n<\/div>",
            "item": [
                {
                    "name": "Domain",
                    "description": "",
                    "item": [
                        {
                            "name": "Index",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/dns\/domains",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/dns\/domains"
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": null,
                                "description": " <aside class=\"notice\">need <small class=\"badge\">dns:domain:list<\/small> ability for api token<\/aside>"
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "{\"data\":[{\"domain\":\"string\",\"status\":\"string\",\"dns_info\":{\"virak_dns\":[\"string|null\"],\"domain_dns\":[\"string\"]}},{\"domain\":\"string\",\"status\":\"string\",\"dns_info\":{\"virak_dns\":[\"string|null\"],\"domain_dns\":[\"string\"]}}]}",
                                    "name": "Successful response"
                                }
                            ]
                        },
                        {
                            "name": "Create",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/dns\/domains",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/dns\/domains"
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\"domain\":\"domain.com\"}"
                                },
                                "description": " <aside class=\"notice\">need <small class=\"badge\">dns:domain:create<\/small> ability for api token<\/aside>"
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "{\"message\":\"success\"}",
                                    "name": "Successful response"
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The domain field is required.\", \"errors\": { \"domain\": [ \"The domain field is required.\" ] } }",
                                    "name": "The domain field is required."
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The domain must be valid TLD.\", \"errors\": { \"domain\": [ \"The domain must be valid TLD.\" ] } }",
                                    "name": "Invalid domain name"
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The domain must be valid domain.\", \"errors\": { \"domain\": [ \"The domain must be valid domain.\" ] } }",
                                    "name": "Invalid domain name (invalid TLD), check https:\/\/publicsuffix.org\/list\/public_suffix_list.dat for more information."
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The domain field is invalid.\", \"errors\": { \"domain\": [ \"The customer has reached the maximum limit of pending domains.\" ] } }",
                                    "name": "Reached maximum limit of pending domains"
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"Not Allowed Domain\", \"errors\": { \"domain\": [ \"The zone is not allowed.\" ] } }",
                                    "name": "Not Allowed Domain"
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"Not Allowed Domain (TLD)\", \"errors\": { \"domain\": [ \"The TLD of the zone is not allowed.\" ] } }",
                                    "name": "Not Allowed TLD"
                                }
                            ]
                        },
                        {
                            "name": "Show",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/dns\/domains\/:domain",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/dns\/domains\/:domain",
                                    "variable": [
                                        {
                                            "id": "domain",
                                            "key": "domain",
                                            "value": "domain.com",
                                            "description": "Customer's Domain."
                                        }
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": null,
                                "description": " <aside class=\"notice\">need <small class=\"badge\">dns:domain:show<\/small> ability for api token<\/aside>"
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "{\"data\":{\"domain\":\"string\",\"status\":\"string\",\"dns_info\":{\"virak_dns\":[\"string|null\"],\"domain_dns\":[\"string\"]}}}",
                                    "name": "Successful response"
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The domain field is required.\", \"errors\": { \"domain\": [ \"The domain field is required.\" ] } }",
                                    "name": "The domain field is required."
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The domain field is invalid.\", \"errors\": { \"domain\": [ \"The domain field is invalid.\" ] } }",
                                    "name": "The domain field is invalid."
                                }
                            ]
                        },
                        {
                            "name": "Delete",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/dns\/domains\/:domain",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/dns\/domains\/:domain",
                                    "variable": [
                                        {
                                            "id": "domain",
                                            "key": "domain",
                                            "value": "domain.com",
                                            "description": "Customer's Domain."
                                        }
                                    ]
                                },
                                "method": "DELETE",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": null,
                                "description": " <aside class=\"notice\">need <small class=\"badge\">dns:domain:delete<\/small> ability for api token<\/aside>"
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "{\"message\":\"success\"}",
                                    "name": "Successful response"
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The domain field is required.\", \"errors\": { \"domain\": [ \"The domain field is required.\" ] } }",
                                    "name": "The domain field is required."
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The domain field is invalid.\", \"errors\": { \"domain\": [ \"The domain field is invalid.\" ] } }",
                                    "name": "The domain field is invalid."
                                }
                            ]
                        },
                        {
                            "name": "Show",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/dns\/domains\/:domain\/records",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/dns\/domains\/:domain\/records",
                                    "variable": [
                                        {
                                            "id": "domain",
                                            "key": "domain",
                                            "value": "domain.com",
                                            "description": "Customer's Domain."
                                        }
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": null,
                                "description": " <aside class=\"notice\">need <small class=\"badge\">dns:domain:show<\/small> ability for api token<\/aside>"
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "{\"data\":{\"domain\":\"string\",\"status\":\"string\",\"dns_info\":{\"virak_dns\":[\"string|null\"],\"domain_dns\":[\"string\"]}}}",
                                    "name": "Successful response"
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The domain field is required.\", \"errors\": { \"domain\": [ \"The domain field is required.\" ] } }",
                                    "name": "The domain field is required."
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The domain field is invalid.\", \"errors\": { \"domain\": [ \"The domain field is invalid.\" ] } }",
                                    "name": "The domain field is invalid."
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Record",
                    "description": "",
                    "item": [
                        {
                            "name": "Create",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/dns\/domains\/:domain\/records",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/dns\/domains\/:domain\/records",
                                    "variable": [
                                        {
                                            "id": "domain",
                                            "key": "domain",
                                            "value": "domain.com",
                                            "description": "Customer's Domain."
                                        }
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\"record\":\"www.domain.com\",\"type\":\"A\",\"ttl\":3600,\"content\":\"8.8.8.8\",\"priority\":10,\"weight\":5,\"port\":80,\"flags\":0,\"tag\":\"issue\",\"license\":3,\"choicer\":1,\"match\":2}"
                                },
                                "description": " <aside class=\"notice\">need <small class=\"badge\">dns:domain:record:create<\/small> ability for api token<\/aside>"
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "{\"message\":\"success\"}",
                                    "name": "Successful response"
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The domain field is required.\", \"errors\": { \"zone\": [ \"The domain field is required.\" ] } }",
                                    "name": "The domain field is required."
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The domain must be a string.\", \"errors\": { \"zone\": [ \"The domain must be a string.\" ] } }",
                                    "name": "Invalid domain format."
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The selected domain is invalid.\", \"errors\": { \"zone\": [ \"The selected domain is invalid.\" ] } }",
                                    "name": "Invalid domain selection."
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The type field is required.\", \"errors\": { \"type\": [ \"The type field is required.\" ] } }",
                                    "name": "The type field is required."
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The selected type is invalid.\", \"errors\": { \"type\": [ \"The selected type is invalid.\" ] } }",
                                    "name": "Invalid DNS record type."
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The record field is required.\", \"errors\": { \"record\": [ \"The record field is required.\" ] } }",
                                    "name": "The record field is required."
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The record must be a string.\", \"errors\": { \"record\": [ \"The record must be a string.\" ] } }",
                                    "name": "Invalid record format."
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The ttl field is required.\", \"errors\": { \"ttl\": [ \"The ttl field is required.\" ] } }",
                                    "name": "The ttl field is required."
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The ttl must be an integer.\", \"errors\": { \"ttl\": [ \"The ttl must be an integer.\" ] } }",
                                    "name": "Invalid ttl format."
                                }
                            ]
                        },
                        {
                            "name": "Update",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/dns\/domains\/:domain\/records\/:record\/:type\/:contentId",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/dns\/domains\/:domain\/records\/:record\/:type\/:contentId",
                                    "variable": [
                                        {
                                            "id": "domain",
                                            "key": "domain",
                                            "value": "domain.com",
                                            "description": "Customer's Domain."
                                        },
                                        {
                                            "id": "record",
                                            "key": "record",
                                            "value": "blog.domain.com",
                                            "description": "Record."
                                        },
                                        {
                                            "id": "type",
                                            "key": "type",
                                            "value": "A",
                                            "description": "DNS record type"
                                        },
                                        {
                                            "id": "contentId",
                                            "key": "contentId",
                                            "value": "01JJ1W1R241GRQYQ28703F8DSH",
                                            "description": "Record Content Id"
                                        }
                                    ]
                                },
                                "method": "PUT",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\"ttl\":3600,\"content\":\"8.8.8.8.8\",\"priority\":10,\"weight\":5,\"port\":80,\"flags\":0,\"tag\":\"issue\",\"license\":3,\"choicer\":1,\"match\":2}"
                                },
                                "description": " <aside class=\"notice\">need <small class=\"badge\">dns:domain:record:update<\/small> ability for api token<\/aside>"
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "{\"message\":\"success\"}",
                                    "name": "Successful response"
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The domain field is required.\", \"errors\": { \"domain\": [ \"The domain field is required.\" ] } }",
                                    "name": "The domain field is required."
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The domain must be a string.\", \"errors\": { \"domain\": [ \"The domain must be a string.\" ] } }",
                                    "name": "Invalid domain format."
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The selected domain is invalid.\", \"errors\": { \"domain\": [ \"The selected domain is invalid.\" ] } }",
                                    "name": "Invalid domain selection."
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The type field is required.\", \"errors\": { \"type\": [ \"The type field is required.\" ] } }",
                                    "name": "The type field is required."
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The selected type is invalid.\", \"errors\": { \"type\": [ \"The selected type is invalid.\" ] } }",
                                    "name": "Invalid DNS record type."
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The record field is required.\", \"errors\": { \"record\": [ \"The record field is required.\" ] } }",
                                    "name": "The record field is required."
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The record must be a string.\", \"errors\": { \"record\": [ \"The record must be a string.\" ] } }",
                                    "name": "Invalid record format."
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The selected record is invalid.\", \"errors\": { \"record\": [ \"The selected record is invalid.\" ] } }",
                                    "name": "The selected record does not exist."
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The ttl field is required.\", \"errors\": { \"ttl\": [ \"The ttl field is required.\" ] } }",
                                    "name": "The ttl field is required."
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The ttl must be an integer.\", \"errors\": { \"ttl\": [ \"The ttl must be an integer.\" ] } }",
                                    "name": "Invalid ttl format."
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The contentId field is required.\", \"errors\": { \"contentId\": [ \"The contentId field is required.\" ] } }",
                                    "name": "The contentId field is required."
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The contentId must be a valid ULID.\", \"errors\": { \"contentId\": [ \"The contentId must be a valid ULID.\" ] } }",
                                    "name": "Invalid contentId format."
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The selected contentId is invalid.\", \"errors\": { \"contentId\": [ \"The selected contentId is invalid.\" ] } }",
                                    "name": "The selected contentId does not exist."
                                }
                            ]
                        },
                        {
                            "name": "Delete",
                            "request": {
                                "url": {
                                    "host": "{{baseUrl}}",
                                    "path": "\/dns\/domains\/:domain\/records\/:record\/:type\/:contentId",
                                    "query": [],
                                    "raw": "{{baseUrl}}\/dns\/domains\/:domain\/records\/:record\/:type\/:contentId",
                                    "variable": [
                                        {
                                            "id": "domain",
                                            "key": "domain",
                                            "value": "domain.com",
                                            "description": "Customer's Domain."
                                        },
                                        {
                                            "id": "record",
                                            "key": "record",
                                            "value": "domain.com",
                                            "description": "Record."
                                        },
                                        {
                                            "id": "type",
                                            "key": "type",
                                            "value": "A",
                                            "description": "Record type"
                                        },
                                        {
                                            "id": "contentId",
                                            "key": "contentId",
                                            "value": "01JJ1W1R241GRQYQ28703F8DSH",
                                            "description": "Record Content Id"
                                        }
                                    ]
                                },
                                "method": "DELETE",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application\/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application\/json"
                                    }
                                ],
                                "body": null,
                                "description": " <aside class=\"notice\">need <small class=\"badge\">dns:domain:record:delete<\/small> ability for api token<\/aside>"
                            },
                            "response": [
                                {
                                    "header": [],
                                    "code": 200,
                                    "body": "{\"message\":\"success\"}",
                                    "name": "Successful response"
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The domain field is required.\", \"errors\": { \"domain\": [ \"The domain field is required.\" ] } }",
                                    "name": "The domain field is required."
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The domain must be a string.\", \"errors\": { \"domain\": [ \"The domain must be a string.\" ] } }",
                                    "name": "Invalid domain format."
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The selected domain is invalid.\", \"errors\": { \"domain\": [ \"The selected domain is invalid.\" ] } }",
                                    "name": "Invalid domain selection."
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The type field is required.\", \"errors\": { \"type\": [ \"The type field is required.\" ] } }",
                                    "name": "The type field is required."
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The selected type is invalid.\", \"errors\": { \"type\": [ \"The selected type is invalid.\" ] } }",
                                    "name": "Invalid DNS record type."
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The record field is required.\", \"errors\": { \"record\": [ \"The record field is required.\" ] } }",
                                    "name": "The record field is required."
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The record must be a string.\", \"errors\": { \"record\": [ \"The record must be a string.\" ] } }",
                                    "name": "Invalid record format."
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The selected record is invalid.\", \"errors\": { \"record\": [ \"The selected record is invalid.\" ] } }",
                                    "name": "The selected record does not exist."
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The contentId field is required.\", \"errors\": { \"contentId\": [ \"The contentId field is required.\" ] } }",
                                    "name": "The contentId field is required."
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The contentId must be a valid ULID.\", \"errors\": { \"contentId\": [ \"The contentId must be a valid ULID.\" ] } }",
                                    "name": "Invalid contentId format."
                                },
                                {
                                    "header": [],
                                    "code": 422,
                                    "body": "{ \"message\": \"The selected contentId is invalid.\", \"errors\": { \"contentId\": [ \"The selected contentId is invalid.\" ] } }",
                                    "name": "The selected contentId does not exist."
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "DNS Events",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "\/dns\/events",
                            "query": [],
                            "raw": "{{baseUrl}}\/dns\/events"
                        },
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\"type\":\"system\",\"from\":1707653422,\"to\":1707653999,\"page\":1}"
                        },
                        "description": " <aside class=\"notice\">need <small class=\"badge\">dns:event:list<\/small> ability for api token<\/aside>"
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{\n    \"data\": [\n        {\n            \"product_id\": \"01jz2ty8m3vd3m5g3n3r1dhfy2\",\n            \"type\": \"system\",\n            \"content\": \"\u062f\u0627\u0645\u0646\u0647 domain.ir \u063a\u06cc\u0631 \u0641\u0639\u0627\u0644 \u0634\u062f.\",\n            \"created_at\": 1752006606\n        }\n    ],\n    \"meta\": {\n        \"current_page\": 1,\n        \"from\": 1,\n        \"last_page\": 1,\n        \"per_page\": 20,\n        \"to\": 1,\n        \"total\": 1\n    }\n}",
                            "name": "Success Response"
                        }
                    ]
                }
            ]
        },
        {
            "name": "Event Management",
            "description": "\nAPIs for managing customer events",
            "item": [
                {
                    "name": "List Customer Events",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "\/events",
                            "query": [],
                            "raw": "{{baseUrl}}\/events"
                        },
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\"type\":\"system\",\"product_model\":\"instance\",\"from\":1707653422,\"to\":1707653999,\"page\":1}"
                        },
                        "description": " <aside class=\"notice\">need <small class=\"badge\">event:list<\/small> ability for api token<\/aside>"
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{\n        \"data\": [\n            {\n                \"product_id\": \"01F8MECHZX3TBDSZ7XRADM79XE\",\n                \"type\": \"customer\",\n                \"content\": \"A network event occurred.\",\n                \"created_at\": 1739256828\n            },\n            {\n                \"product_id\": \"01F8MECHZX3TBDSZ7XRADM79XE\",\n                \"type\": \"system\",\n                \"content\": \"A system event occurred.\",\n                \"created_at\": 1739256683\n            }\n        ],\n        \"meta\": {\n            \"current_page\": 1,\n            \"from\": 1,\n            \"last_page\": 10,\n            \"per_page\": 20,\n            \"to\": 20,\n            \"total\": 200\n        }\n}",
                            "name": "Success Response"
                        }
                    ]
                }
            ]
        }
    ],
    "auth": {
        "type": "bearer",
        "bearer": [
            {
                "key": "Authorization",
                "type": "string"
            }
        ]
    }
}