openapi: 3.0.3
info:
  title: 'Virak Cloud API'
  description: 'The Virak Cloud API provides developers with a robust set of tools to interact with the Virak Cloud infrastructure, allowing for seamless integration and management of cloud resources.'
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/dns/domains:
    get:
      summary: Index
      operationId: index
      description: ' <aside class="notice">need <small class="badge">dns:domain:list</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Successful response'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      domain: string
                      status: string
                      dns_info:
                        virak_dns:
                          - string|null
                        domain_dns:
                          - string
                    -
                      domain: string
                      status: string
                      dns_info:
                        virak_dns:
                          - string|null
                        domain_dns:
                          - string
                properties:
                  data:
                    type: array
                    example:
                      -
                        domain: string
                        status: string
                        dns_info:
                          virak_dns:
                            - string|null
                          domain_dns:
                            - string
                      -
                        domain: string
                        status: string
                        dns_info:
                          virak_dns:
                            - string|null
                          domain_dns:
                            - string
                    items:
                      type: object
                      properties:
                        domain:
                          type: string
                          example: string
                        status:
                          type: string
                          example: string
                        dns_info:
                          type: object
                          properties:
                            virak_dns:
                              type: array
                              example:
                                - string|null
                              items:
                                type: string
                            domain_dns:
                              type: array
                              example:
                                - string
                              items:
                                type: string
      tags:
        - DNS
    post:
      summary: Create
      operationId: create
      description: ' <aside class="notice">need <small class="badge">dns:domain:create</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Successful response'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: success
                properties:
                  message:
                    type: string
                    example: success
        422:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'The domain field is required.'
                    type: object
                    example:
                      message: 'The domain field is required.'
                      errors:
                        domain:
                          - 'The domain field is required.'
                    properties:
                      message:
                        type: string
                        example: 'The domain field is required.'
                      errors:
                        type: object
                        properties:
                          domain:
                            type: array
                            example:
                              - 'The domain field is required.'
                            items:
                              type: string
                  -
                    description: 'Invalid domain name'
                    type: object
                    example:
                      message: 'The domain must be valid TLD.'
                      errors:
                        domain:
                          - 'The domain must be valid TLD.'
                    properties:
                      message:
                        type: string
                        example: 'The domain must be valid TLD.'
                      errors:
                        type: object
                        properties:
                          domain:
                            type: array
                            example:
                              - 'The domain must be valid TLD.'
                            items:
                              type: string
                  -
                    description: 'Invalid domain name (invalid TLD)'
                    type: object
                    example:
                      message: 'The domain must be valid domain.'
                      errors:
                        domain:
                          - 'The domain must be valid domain.'
                    properties:
                      message:
                        type: string
                        example: 'The domain must be valid domain.'
                      errors:
                        type: object
                        properties:
                          domain:
                            type: array
                            example:
                              - 'The domain must be valid domain.'
                            items:
                              type: string
                  -
                    description: 'Reached maximum limit of pending domains'
                    type: object
                    example:
                      message: 'The domain field is invalid.'
                      errors:
                        domain:
                          - 'The customer has reached the maximum limit of pending domains.'
                    properties:
                      message:
                        type: string
                        example: 'The domain field is invalid.'
                      errors:
                        type: object
                        properties:
                          domain:
                            type: array
                            example:
                              - 'The customer has reached the maximum limit of pending domains.'
                            items:
                              type: string
      tags:
        - DNS
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                domain:
                  type: string
                  description: 'Domain name with valid TLD, cannot be a subdomain for creating DNS domain in Virak Cloud.'
                  example: domain.com
                  nullable: false
              required:
                - domain
  '/api/dns/domains/{domain}':
    get:
      summary: Show
      operationId: show
      description: ' <aside class="notice">need <small class="badge">dns:domain:show</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Successful response'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    domain: string
                    status: string
                    dns_info:
                      virak_dns:
                        - string|null
                      domain_dns:
                        - string
                properties:
                  data:
                    type: object
                    properties:
                      domain:
                        type: string
                        example: string
                      status:
                        type: string
                        example: string
                      dns_info:
                        type: object
                        properties:
                          virak_dns:
                            type: array
                            example:
                              - string|null
                            items:
                              type: string
                          domain_dns:
                            type: array
                            example:
                              - string
                            items:
                              type: string
        422:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'The domain field is required.'
                    type: object
                    example:
                      message: 'The domain field is required.'
                      errors:
                        domain:
                          - 'The domain field is required.'
                    properties:
                      message:
                        type: string
                        example: 'The domain field is required.'
                      errors:
                        type: object
                        properties:
                          domain:
                            type: array
                            example:
                              - 'The domain field is required.'
                            items:
                              type: string
                  -
                    description: 'The domain field is invalid.'
                    type: object
                    example:
                      message: 'The domain field is invalid.'
                      errors:
                        domain:
                          - 'The domain field is invalid.'
                    properties:
                      message:
                        type: string
                        example: 'The domain field is invalid.'
                      errors:
                        type: object
                        properties:
                          domain:
                            type: array
                            example:
                              - 'The domain field is invalid.'
                            items:
                              type: string
      tags:
        - DNS
    delete:
      summary: Delete
      operationId: delete
      description: ' <aside class="notice">need <small class="badge">dns:domain:delete</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Successful response'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: success
                properties:
                  message:
                    type: string
                    example: success
        422:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'The domain field is required.'
                    type: object
                    example:
                      message: 'The domain field is required.'
                      errors:
                        domain:
                          - 'The domain field is required.'
                    properties:
                      message:
                        type: string
                        example: 'The domain field is required.'
                      errors:
                        type: object
                        properties:
                          domain:
                            type: array
                            example:
                              - 'The domain field is required.'
                            items:
                              type: string
                  -
                    description: 'The domain field is invalid.'
                    type: object
                    example:
                      message: 'The domain field is invalid.'
                      errors:
                        domain:
                          - 'The domain field is invalid.'
                    properties:
                      message:
                        type: string
                        example: 'The domain field is invalid.'
                      errors:
                        type: object
                        properties:
                          domain:
                            type: array
                            example:
                              - 'The domain field is invalid.'
                            items:
                              type: string
      tags:
        - DNS
    parameters:
      -
        in: path
        name: domain
        description: "Customer's Domain."
        example: domain.com
        required: true
        schema:
          type: string
  '/api/dns/domains/{domain}/records':
    get:
      summary: Show
      operationId: show
      description: ' <aside class="notice">need <small class="badge">dns:domain:show</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Successful response'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    domain: string
                    status: string
                    dns_info:
                      virak_dns:
                        - string|null
                      domain_dns:
                        - string
                properties:
                  data:
                    type: object
                    properties:
                      domain:
                        type: string
                        example: string
                      status:
                        type: string
                        example: string
                      dns_info:
                        type: object
                        properties:
                          virak_dns:
                            type: array
                            example:
                              - string|null
                            items:
                              type: string
                          domain_dns:
                            type: array
                            example:
                              - string
                            items:
                              type: string
        422:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'The domain field is required.'
                    type: object
                    example:
                      message: 'The domain field is required.'
                      errors:
                        domain:
                          - 'The domain field is required.'
                    properties:
                      message:
                        type: string
                        example: 'The domain field is required.'
                      errors:
                        type: object
                        properties:
                          domain:
                            type: array
                            example:
                              - 'The domain field is required.'
                            items:
                              type: string
                  -
                    description: 'The domain field is invalid.'
                    type: object
                    example:
                      message: 'The domain field is invalid.'
                      errors:
                        domain:
                          - 'The domain field is invalid.'
                    properties:
                      message:
                        type: string
                        example: 'The domain field is invalid.'
                      errors:
                        type: object
                        properties:
                          domain:
                            type: array
                            example:
                              - 'The domain field is invalid.'
                            items:
                              type: string
      tags:
        - DNS
    post:
      summary: Create
      operationId: create
      description: ' <aside class="notice">need <small class="badge">dns:domain:record:create</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Successful response'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: success
                properties:
                  message:
                    type: string
                    example: success
        422:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'The domain field is required.'
                    type: object
                    example:
                      message: 'The domain field is required.'
                      errors:
                        zone:
                          - 'The domain field is required.'
                    properties:
                      message:
                        type: string
                        example: 'The domain field is required.'
                      errors:
                        type: object
                        properties:
                          zone:
                            type: array
                            example:
                              - 'The domain field is required.'
                            items:
                              type: string
                  -
                    description: 'Invalid domain format.'
                    type: object
                    example:
                      message: 'The domain must be a string.'
                      errors:
                        zone:
                          - 'The domain must be a string.'
                    properties:
                      message:
                        type: string
                        example: 'The domain must be a string.'
                      errors:
                        type: object
                        properties:
                          zone:
                            type: array
                            example:
                              - 'The domain must be a string.'
                            items:
                              type: string
                  -
                    description: 'Invalid domain selection.'
                    type: object
                    example:
                      message: 'The selected domain is invalid.'
                      errors:
                        zone:
                          - 'The selected domain is invalid.'
                    properties:
                      message:
                        type: string
                        example: 'The selected domain is invalid.'
                      errors:
                        type: object
                        properties:
                          zone:
                            type: array
                            example:
                              - 'The selected domain is invalid.'
                            items:
                              type: string
                  -
                    description: 'The type field is required.'
                    type: object
                    example:
                      message: 'The type field is required.'
                      errors:
                        type:
                          - 'The type field is required.'
                    properties:
                      message:
                        type: string
                        example: 'The type field is required.'
                      errors:
                        type: object
                        properties:
                          type:
                            type: array
                            example:
                              - 'The type field is required.'
                            items:
                              type: string
                  -
                    description: 'Invalid DNS record type.'
                    type: object
                    example:
                      message: 'The selected type is invalid.'
                      errors:
                        type:
                          - 'The selected type is invalid.'
                    properties:
                      message:
                        type: string
                        example: 'The selected type is invalid.'
                      errors:
                        type: object
                        properties:
                          type:
                            type: array
                            example:
                              - 'The selected type is invalid.'
                            items:
                              type: string
                  -
                    description: 'The record field is required.'
                    type: object
                    example:
                      message: 'The record field is required.'
                      errors:
                        record:
                          - 'The record field is required.'
                    properties:
                      message:
                        type: string
                        example: 'The record field is required.'
                      errors:
                        type: object
                        properties:
                          record:
                            type: array
                            example:
                              - 'The record field is required.'
                            items:
                              type: string
                  -
                    description: 'Invalid record format.'
                    type: object
                    example:
                      message: 'The record must be a string.'
                      errors:
                        record:
                          - 'The record must be a string.'
                    properties:
                      message:
                        type: string
                        example: 'The record must be a string.'
                      errors:
                        type: object
                        properties:
                          record:
                            type: array
                            example:
                              - 'The record must be a string.'
                            items:
                              type: string
                  -
                    description: 'The ttl field is required.'
                    type: object
                    example:
                      message: 'The ttl field is required.'
                      errors:
                        ttl:
                          - 'The ttl field is required.'
                    properties:
                      message:
                        type: string
                        example: 'The ttl field is required.'
                      errors:
                        type: object
                        properties:
                          ttl:
                            type: array
                            example:
                              - 'The ttl field is required.'
                            items:
                              type: string
                  -
                    description: 'Invalid ttl format.'
                    type: object
                    example:
                      message: 'The ttl must be an integer.'
                      errors:
                        ttl:
                          - 'The ttl must be an integer.'
                    properties:
                      message:
                        type: string
                        example: 'The ttl must be an integer.'
                      errors:
                        type: object
                        properties:
                          ttl:
                            type: array
                            example:
                              - 'The ttl must be an integer.'
                            items:
                              type: string
      tags:
        - DNS
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                record:
                  type: string
                  description: 'The name of the DNS record.'
                  example: www.domain.com
                  nullable: false
                type:
                  type: string
                  description: 'The type of the DNS record (e.g., A, AAAA, CNAME, NS, MX, TXT, SRV, PTR, CAA, TLSA).'
                  example: A
                  nullable: false
                ttl:
                  type: integer
                  description: 'The time-to-live for the DNS record in seconds. Must be at least 60.'
                  example: 3600
                  nullable: false
                content:
                  type: string
                  description: 'The Record Content.'
                  example: 8.8.8.8
                  nullable: false
              required:
                - record
                - type
                - ttl
                - content
    parameters:
      -
        in: path
        name: domain
        description: "Customer's Domain."
        example: domain.com
        required: true
        schema:
          type: string
  '/api/dns/domains/{domain}/records/{record}/{type}/{contentId}':
    put:
      summary: Update
      operationId: update
      description: ' <aside class="notice">need <small class="badge">dns:domain:record:update</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Successful response'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: success
                properties:
                  message:
                    type: string
                    example: success
        422:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'The domain field is required.'
                    type: object
                    example:
                      message: 'The domain field is required.'
                      errors:
                        domain:
                          - 'The domain field is required.'
                    properties:
                      message:
                        type: string
                        example: 'The domain field is required.'
                      errors:
                        type: object
                        properties:
                          domain:
                            type: array
                            example:
                              - 'The domain field is required.'
                            items:
                              type: string
                  -
                    description: 'Invalid domain format.'
                    type: object
                    example:
                      message: 'The domain must be a string.'
                      errors:
                        domain:
                          - 'The domain must be a string.'
                    properties:
                      message:
                        type: string
                        example: 'The domain must be a string.'
                      errors:
                        type: object
                        properties:
                          domain:
                            type: array
                            example:
                              - 'The domain must be a string.'
                            items:
                              type: string
                  -
                    description: 'Invalid domain selection.'
                    type: object
                    example:
                      message: 'The selected domain is invalid.'
                      errors:
                        domain:
                          - 'The selected domain is invalid.'
                    properties:
                      message:
                        type: string
                        example: 'The selected domain is invalid.'
                      errors:
                        type: object
                        properties:
                          domain:
                            type: array
                            example:
                              - 'The selected domain is invalid.'
                            items:
                              type: string
                  -
                    description: 'The type field is required.'
                    type: object
                    example:
                      message: 'The type field is required.'
                      errors:
                        type:
                          - 'The type field is required.'
                    properties:
                      message:
                        type: string
                        example: 'The type field is required.'
                      errors:
                        type: object
                        properties:
                          type:
                            type: array
                            example:
                              - 'The type field is required.'
                            items:
                              type: string
                  -
                    description: 'Invalid DNS record type.'
                    type: object
                    example:
                      message: 'The selected type is invalid.'
                      errors:
                        type:
                          - 'The selected type is invalid.'
                    properties:
                      message:
                        type: string
                        example: 'The selected type is invalid.'
                      errors:
                        type: object
                        properties:
                          type:
                            type: array
                            example:
                              - 'The selected type is invalid.'
                            items:
                              type: string
                  -
                    description: 'The record field is required.'
                    type: object
                    example:
                      message: 'The record field is required.'
                      errors:
                        record:
                          - 'The record field is required.'
                    properties:
                      message:
                        type: string
                        example: 'The record field is required.'
                      errors:
                        type: object
                        properties:
                          record:
                            type: array
                            example:
                              - 'The record field is required.'
                            items:
                              type: string
                  -
                    description: 'Invalid record format.'
                    type: object
                    example:
                      message: 'The record must be a string.'
                      errors:
                        record:
                          - 'The record must be a string.'
                    properties:
                      message:
                        type: string
                        example: 'The record must be a string.'
                      errors:
                        type: object
                        properties:
                          record:
                            type: array
                            example:
                              - 'The record must be a string.'
                            items:
                              type: string
                  -
                    description: 'The selected record does not exist.'
                    type: object
                    example:
                      message: 'The selected record is invalid.'
                      errors:
                        record:
                          - 'The selected record is invalid.'
                    properties:
                      message:
                        type: string
                        example: 'The selected record is invalid.'
                      errors:
                        type: object
                        properties:
                          record:
                            type: array
                            example:
                              - 'The selected record is invalid.'
                            items:
                              type: string
                  -
                    description: 'The ttl field is required.'
                    type: object
                    example:
                      message: 'The ttl field is required.'
                      errors:
                        ttl:
                          - 'The ttl field is required.'
                    properties:
                      message:
                        type: string
                        example: 'The ttl field is required.'
                      errors:
                        type: object
                        properties:
                          ttl:
                            type: array
                            example:
                              - 'The ttl field is required.'
                            items:
                              type: string
                  -
                    description: 'Invalid ttl format.'
                    type: object
                    example:
                      message: 'The ttl must be an integer.'
                      errors:
                        ttl:
                          - 'The ttl must be an integer.'
                    properties:
                      message:
                        type: string
                        example: 'The ttl must be an integer.'
                      errors:
                        type: object
                        properties:
                          ttl:
                            type: array
                            example:
                              - 'The ttl must be an integer.'
                            items:
                              type: string
                  -
                    description: 'The contentId field is required.'
                    type: object
                    example:
                      message: 'The contentId field is required.'
                      errors:
                        contentId:
                          - 'The contentId field is required.'
                    properties:
                      message:
                        type: string
                        example: 'The contentId field is required.'
                      errors:
                        type: object
                        properties:
                          contentId:
                            type: array
                            example:
                              - 'The contentId field is required.'
                            items:
                              type: string
                  -
                    description: 'Invalid contentId format.'
                    type: object
                    example:
                      message: 'The contentId must be a valid ULID.'
                      errors:
                        contentId:
                          - 'The contentId must be a valid ULID.'
                    properties:
                      message:
                        type: string
                        example: 'The contentId must be a valid ULID.'
                      errors:
                        type: object
                        properties:
                          contentId:
                            type: array
                            example:
                              - 'The contentId must be a valid ULID.'
                            items:
                              type: string
                  -
                    description: 'The selected contentId does not exist.'
                    type: object
                    example:
                      message: 'The selected contentId is invalid.'
                      errors:
                        contentId:
                          - 'The selected contentId is invalid.'
                    properties:
                      message:
                        type: string
                        example: 'The selected contentId is invalid.'
                      errors:
                        type: object
                        properties:
                          contentId:
                            type: array
                            example:
                              - 'The selected contentId is invalid.'
                            items:
                              type: string
      tags:
        - DNS
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ttl:
                  type: integer
                  description: 'The time-to-live for the DNS record in seconds. Must be at least 60.'
                  example: 3600
                  nullable: false
                content:
                  type: string
                  description: 'The Record Content.'
                  example: 8.8.8.8.8
                  nullable: false
              required:
                - ttl
                - content
    delete:
      summary: Delete
      operationId: delete
      description: ' <aside class="notice">need <small class="badge">dns:domain:record:delete</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Successful response'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: success
                properties:
                  message:
                    type: string
                    example: success
        422:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'The domain field is required.'
                    type: object
                    example:
                      message: 'The domain field is required.'
                      errors:
                        domain:
                          - 'The domain field is required.'
                    properties:
                      message:
                        type: string
                        example: 'The domain field is required.'
                      errors:
                        type: object
                        properties:
                          domain:
                            type: array
                            example:
                              - 'The domain field is required.'
                            items:
                              type: string
                  -
                    description: 'Invalid domain format.'
                    type: object
                    example:
                      message: 'The domain must be a string.'
                      errors:
                        domain:
                          - 'The domain must be a string.'
                    properties:
                      message:
                        type: string
                        example: 'The domain must be a string.'
                      errors:
                        type: object
                        properties:
                          domain:
                            type: array
                            example:
                              - 'The domain must be a string.'
                            items:
                              type: string
                  -
                    description: 'Invalid domain selection.'
                    type: object
                    example:
                      message: 'The selected domain is invalid.'
                      errors:
                        domain:
                          - 'The selected domain is invalid.'
                    properties:
                      message:
                        type: string
                        example: 'The selected domain is invalid.'
                      errors:
                        type: object
                        properties:
                          domain:
                            type: array
                            example:
                              - 'The selected domain is invalid.'
                            items:
                              type: string
                  -
                    description: 'The type field is required.'
                    type: object
                    example:
                      message: 'The type field is required.'
                      errors:
                        type:
                          - 'The type field is required.'
                    properties:
                      message:
                        type: string
                        example: 'The type field is required.'
                      errors:
                        type: object
                        properties:
                          type:
                            type: array
                            example:
                              - 'The type field is required.'
                            items:
                              type: string
                  -
                    description: 'Invalid DNS record type.'
                    type: object
                    example:
                      message: 'The selected type is invalid.'
                      errors:
                        type:
                          - 'The selected type is invalid.'
                    properties:
                      message:
                        type: string
                        example: 'The selected type is invalid.'
                      errors:
                        type: object
                        properties:
                          type:
                            type: array
                            example:
                              - 'The selected type is invalid.'
                            items:
                              type: string
                  -
                    description: 'The record field is required.'
                    type: object
                    example:
                      message: 'The record field is required.'
                      errors:
                        record:
                          - 'The record field is required.'
                    properties:
                      message:
                        type: string
                        example: 'The record field is required.'
                      errors:
                        type: object
                        properties:
                          record:
                            type: array
                            example:
                              - 'The record field is required.'
                            items:
                              type: string
                  -
                    description: 'Invalid record format.'
                    type: object
                    example:
                      message: 'The record must be a string.'
                      errors:
                        record:
                          - 'The record must be a string.'
                    properties:
                      message:
                        type: string
                        example: 'The record must be a string.'
                      errors:
                        type: object
                        properties:
                          record:
                            type: array
                            example:
                              - 'The record must be a string.'
                            items:
                              type: string
                  -
                    description: 'The selected record does not exist.'
                    type: object
                    example:
                      message: 'The selected record is invalid.'
                      errors:
                        record:
                          - 'The selected record is invalid.'
                    properties:
                      message:
                        type: string
                        example: 'The selected record is invalid.'
                      errors:
                        type: object
                        properties:
                          record:
                            type: array
                            example:
                              - 'The selected record is invalid.'
                            items:
                              type: string
                  -
                    description: 'The contentId field is required.'
                    type: object
                    example:
                      message: 'The contentId field is required.'
                      errors:
                        contentId:
                          - 'The contentId field is required.'
                    properties:
                      message:
                        type: string
                        example: 'The contentId field is required.'
                      errors:
                        type: object
                        properties:
                          contentId:
                            type: array
                            example:
                              - 'The contentId field is required.'
                            items:
                              type: string
                  -
                    description: 'Invalid contentId format.'
                    type: object
                    example:
                      message: 'The contentId must be a valid ULID.'
                      errors:
                        contentId:
                          - 'The contentId must be a valid ULID.'
                    properties:
                      message:
                        type: string
                        example: 'The contentId must be a valid ULID.'
                      errors:
                        type: object
                        properties:
                          contentId:
                            type: array
                            example:
                              - 'The contentId must be a valid ULID.'
                            items:
                              type: string
                  -
                    description: 'The selected contentId does not exist.'
                    type: object
                    example:
                      message: 'The selected contentId is invalid.'
                      errors:
                        contentId:
                          - 'The selected contentId is invalid.'
                    properties:
                      message:
                        type: string
                        example: 'The selected contentId is invalid.'
                      errors:
                        type: object
                        properties:
                          contentId:
                            type: array
                            example:
                              - 'The selected contentId is invalid.'
                            items:
                              type: string
      tags:
        - DNS
    parameters:
      -
        in: path
        name: domain
        description: "Customer's Domain."
        example: domain.com
        required: true
        schema:
          type: string
      -
        in: path
        name: record
        description: Record.
        example: domain.com
        required: true
        schema:
          type: string
      -
        in: path
        name: type
        description: ''
        example: ea
        required: true
        schema:
          type: string
      -
        in: path
        name: contentId
        description: 'Record Content Id'
        example: 01JJ1W1R241GRQYQ28703F8DSH
        required: true
        schema:
          type: ulid
  /api/up:
    get:
      summary: 'Handle the health check request.'
      operationId: handleTheHealthCheckRequest
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: OK
                  timestamp: 1751972011
                  database: OK
                  cache: OK
                properties:
                  status:
                    type: string
                    example: OK
                  timestamp:
                    type: integer
                    example: 1751972011
                  database:
                    type: string
                    example: OK
                  cache:
                    type: string
                    example: OK
      tags:
        - Endpoints
  '/api/zone/{zoneId}/network/instance/connect/{networkId}':
    post:
      summary: ''
      operationId: postApiZoneZoneIdNetworkInstanceConnectNetworkId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                instance_cs_id:
                  type: string
                  description: 'Must be a valid UUID.'
                  example: 60f03b9e-48e1-345e-8212-cc368a52e7e7
                  nullable: false
                network_id:
                  type: string
                  description: ''
                  example: harum
                  nullable: false
              required:
                - instance_cs_id
                - network_id
    parameters:
      -
        in: path
        name: zoneId
        description: ''
        example: dolorem
        required: true
        schema:
          type: string
      -
        in: path
        name: networkId
        description: ''
        example: 3F5Vny2dRP963p994B84Pw7rzd
        required: true
        schema:
          type: string
  '/api/zone/{zoneId}/network/instance/disconnect/{networkId}':
    post:
      summary: ''
      operationId: postApiZoneZoneIdNetworkInstanceDisconnectNetworkId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                instance_network_id:
                  type: string
                  description: ''
                  example: architecto
                  nullable: false
                account_id:
                  type: string
                  description: 'Must be a valid UUID.'
                  example: 366ae181-fcb2-3884-8267-2309756f6338
                  nullable: false
              required:
                - instance_network_id
                - account_id
    parameters:
      -
        in: path
        name: zoneId
        description: ''
        example: corporis
        required: true
        schema:
          type: string
      -
        in: path
        name: networkId
        description: ''
        example: 2NZsayqGmAdc40vZXE5kyZ21mw
        required: true
        schema:
          type: string
  '/api/zone/{zoneId}/network/instance/show/{networkId}':
    get:
      summary: ''
      operationId: getApiZoneZoneIdNetworkInstanceShowNetworkId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                instance_cs_id:
                  type: string
                  description: 'Must be a valid UUID.'
                  example: 4a57fc56-f5a8-3f46-b8ae-6d41922081c7
                  nullable: false
                account_id:
                  type: string
                  description: 'Must be a valid UUID.'
                  example: 718eaaed-769b-3b90-8a97-4649058d3ac3
                  nullable: false
              required:
                - instance_cs_id
                - account_id
    parameters:
      -
        in: path
        name: zoneId
        description: ''
        example: adipisci
        required: true
        schema:
          type: string
      -
        in: path
        name: networkId
        description: ''
        example: 6gAyjrnqqp0ZzFS41fHewWsJVB
        required: true
        schema:
          type: string
  '/api/zone/{zoneId}/instance/{instanceId}/snapshot':
    post:
      summary: 'Create Snapshot'
      operationId: createSnapshot
      description: "<aside class=\"notice\">need <small class=\"badge\">instance:snapshot:create</small> ability for api token</aside>\n<b>Note:</b> This function creates a snapshot for a specific instance.<br>\n<pre>{\n  \"data\": {\n      \"id\": \"string\",\n      \"name\": \"string\",\n      \"status\": \"string\",\n      \"created_at\": 1234567890\n  }\n}</pre>"
      parameters: []
      responses:
        201:
          description: 'Snapshot creation accepted.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 01H9ZCNF46W6C1EM45T21B6M0S
                    name: my-snapshot
                    status: CREATING
                    created_at: 1712345678
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 01H9ZCNF46W6C1EM45T21B6M0S
                      name:
                        type: string
                        example: my-snapshot
                      status:
                        type: string
                        example: CREATING
                      created_at:
                        type: integer
                        example: 1712345678
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                instance_id:
                  type: string
                  description: 'The unique identifier for the instance to snapshot.'
                  example: 01F8MECHZX3RZ8Y6B8Q5F1E3V6
                  nullable: false
                name:
                  type: string
                  description: 'The name of the snapshot.'
                  example: my-snapshot
                  nullable: false
              required:
                - instance_id
                - name
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
      -
        in: path
        name: instanceId
        description: 'The ID of the instance.'
        example: 01H9ZCNF46W6C1EM45T21B6M0I
        required: true
        schema:
          type: ulid
  '/api/zone/{zoneId}/instance/{instanceId}/snapshot/{snapshotId}':
    delete:
      summary: 'Delete Snapshot'
      operationId: deleteSnapshot
      description: "<aside class=\"notice\">need <small class=\"badge\">instance:snapshot:delete</small> ability for api token</aside>\n<b>Note:</b> This function deletes a snapshot for a specific instance.<br>\n<pre>{\n  \"data\": {\n      \"success\": true\n  }\n}</pre>"
      parameters: []
      responses:
        200:
          description: 'Snapshot deleted.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    success: true
                properties:
                  data:
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
      -
        in: path
        name: instanceId
        description: 'The ID of the instance.'
        example: 01H9ZCNF46W6C1EM45T21B6M0I
        required: true
        schema:
          type: ulid
      -
        in: path
        name: snapshotId
        description: 'The ID of the snapshot.'
        example: 01H9ZCNF46W6C1EM45T21B6M0S
        required: true
        schema:
          type: ulid
  '/api/zone/{zoneId}/instance/{instanceId}/snapshot/revert':
    post:
      summary: 'Revert Snapshot'
      operationId: revertSnapshot
      description: "<aside class=\"notice\">need <small class=\"badge\">instance:snapshot:revert</small> ability for api token</aside>\n<b>Note:</b> This function reverts an instance to a specific snapshot.<br>\n<pre>{\n  \"data\": {\n      \"success\": true\n  }\n}</pre>"
      parameters: []
      responses:
        200:
          description: 'Instance reverted to snapshot.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    success: true
                properties:
                  data:
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
      -
        in: path
        name: instanceId
        description: 'The ID of the instance.'
        example: 01H9ZCNF46W6C1EM45T21B6M0I
        required: true
        schema:
          type: ulid
      -
        in: path
        name: snapshotId
        description: 'The ID of the snapshot.'
        example: 01H9ZCNF46W6C1EM45T21B6M0S
        required: true
        schema:
          type: ulid
  '/api/zone/{zoneId}/instance/volumes':
    get:
      summary: 'List Volumes'
      operationId: listVolumes
      description: 'List all volumes for the authenticated user in the specified zone.'
      parameters: []
      responses:
        200:
          description: 'List of volumes.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 01H9ZCNF46W6C1EM45T21B6M0V
                      name: volume-1
                      size: 50
                      status: available
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 01H9ZCNF46W6C1EM45T21B6M0V
                        name: volume-1
                        size: 50
                        status: available
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: 01H9ZCNF46W6C1EM45T21B6M0V
                        name:
                          type: string
                          example: volume-1
                        size:
                          type: integer
                          example: 50
                        status:
                          type: string
                          example: available
      tags:
        - Endpoints
    post:
      summary: 'Create Volume'
      operationId: createVolume
      description: 'Create a new volume in the specified zone.'
      parameters: []
      responses:
        200:
          description: 'Volume creation accepted.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 01H9ZCNF46W6C1EM45T21B6M0V
                    name: my-volume
                    size: 50
                    status: CREATING
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 01H9ZCNF46W6C1EM45T21B6M0V
                      name:
                        type: string
                        example: my-volume
                      size:
                        type: integer
                        example: 50
                      status:
                        type: string
                        example: CREATING
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                service_offering_id:
                  type: ulid
                  description: 'The ID of the service offering.'
                  example: 01H9ZCNF46W6C1EM45T21B6M0G
                  nullable: false
                size:
                  type: integer
                  description: 'The size of the volume in GB.'
                  example: 50
                  nullable: false
                name:
                  type: string
                  description: 'The name of the volume.'
                  example: my-volume
                  nullable: false
              required:
                - service_offering_id
                - size
                - name
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
  '/api/zone/{zoneId}/instance/volumes/{volumeId}':
    delete:
      summary: 'Delete Volume'
      operationId: deleteVolume
      description: 'Delete a volume by its ID.'
      parameters: []
      responses:
        200:
          description: 'Volume deleted.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    success: true
                properties:
                  data:
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                instance_id:
                  type: string
                  description: 'The unique identifier for the instance associated with the volume.'
                  example: 01F8MECHZX3RZ8Y6B8Q5F1E3V6
                  nullable: false
                volume_id:
                  type: string
                  description: 'The unique identifier for the volume to be deleted.'
                  example: 01F8MECHZX3RZ8Y6B8Q5F1E3V5
                  nullable: false
              required:
                - instance_id
                - volume_id
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
      -
        in: path
        name: volumeId
        description: 'The ID of the volume.'
        example: 01H9ZCNF46W6C1EM45T21B6M0V
        required: true
        schema:
          type: ulid
  '/api/zone/{zoneId}/instance/volumes/{volumeId}/detach/{instanceId}':
    post:
      summary: 'Detach Volume'
      operationId: detachVolume
      description: 'Detach a volume from an instance.'
      parameters: []
      responses:
        200:
          description: 'Volume detached.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    success: true
                properties:
                  data:
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                instance_id:
                  type: ulid
                  description: 'The ID of the instance to detach from.'
                  example: 01H9ZCNF46W6C1EM45T21B6M0I
                  nullable: false
              required:
                - instance_id
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
      -
        in: path
        name: volumeId
        description: 'The ID of the volume.'
        example: 01H9ZCNF46W6C1EM45T21B6M0V
        required: true
        schema:
          type: ulid
      -
        in: path
        name: instanceId
        description: ''
        example: 7qQBHgPtq42SecEqapARSadA50
        required: true
        schema:
          type: string
  '/api/zone/{zoneId}/instance/volumes/{volumeId}/attach/{instanceId}':
    post:
      summary: 'Attach Volume'
      operationId: attachVolume
      description: 'Attach a volume to an instance.'
      parameters: []
      responses:
        200:
          description: 'Volume attached.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    success: true
                properties:
                  data:
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
      -
        in: path
        name: volumeId
        description: 'The ID of the volume.'
        example: 01H9ZCNF46W6C1EM45T21B6M0V
        required: true
        schema:
          type: ulid
      -
        in: path
        name: instanceId
        description: 'The ID of the instance.'
        example: 01H9ZCNF46W6C1EM45T21B6M0I
        required: true
        schema:
          type: ulid
  /api/token:
    get:
      summary: ''
      operationId: getApiToken
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
  /api/events:
    get:
      summary: 'List Customer Events'
      operationId: listCustomerEvents
      description: ' <aside class="notice">need <small class="badge">event:list</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Success Response'
          content:
            text/plain:
              schema:
                type: string
                example: "{\n        \"data\": [\n            {\n                \"product_model\": \"App\\Models\\Network\",\n                \"product_id\": \"01F8MECHZX3TBDSZ7XRADM79XE\",\n                \"product_source\": \"network\",\n                \"type\": \"customer\",\n                \"content\": \"A network event occurred.\",\n                \"created_at\": 1739256828\n            },\n            {\n                \"product_model\": \"App\\Models\\Instance\",\n                \"product_id\": \"01F8MECHZX3TBDSZ7XRADM79XE\",\n                \"product_source\": \"core\",\n                \"type\": \"system\",\n                \"content\": \"A system event occurred.\",\n                \"created_at\": 1739256683\n            }\n        ],\n        \"meta\": {\n            \"current_page\": 1,\n            \"from\": 1,\n            \"last_page\": 10,\n            \"per_page\": 20,\n            \"to\": 20,\n            \"total\": 200\n        }\n}"
      tags:
        - 'Event Management'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: 'The type of events to filter'
                  example: system
                  nullable: false
                from:
                  type: integer
                  description: 'The timestamp to start filtering events from'
                  example: 1707653422
                  nullable: false
                to:
                  type: integer
                  description: 'The timestamp to end filtering events'
                  example: 1707653999
                  nullable: false
  '/api/zone/{zoneId}/instance':
    get:
      summary: Index
      operationId: index
      description: ' <aside class="notice">need <small class="badge">instance:list</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Successful response'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: string
                      name: string
                      created: true
                      template_id: null
                      vm_image:
                        id: string
                        type: string
                        name: string
                        is_available: true
                        display_text: string
                        name_orginal: string
                        ready_to_use_app: false
                        ready_to_use_app_name: null
                        ready_to_use_app_version: null
                        os_type: string
                        os_name: string
                        os_version: string
                        hardware_requirement:
                          cpunumber: 1
                          cpuspeed: 500
                          memory: 500
                          rootdisksize: 25
                        category: string
                      zone:
                        id: string
                        name: string
                        location: string
                        is_public: true
                        is_featured: true
                        is_ready: true
                      service_offering:
                        id: string
                        name: string
                        has_image_requirement: null
                        is_available: true
                        is_public: true
                        suggested: false
                        category: string
                        hourly_price:
                          up: 0
                          down: 0
                        hourly_price_no_discount:
                          up: 0
                          down: 0
                        description: null
                        hardware:
                          cpu_core: 1
                          memory_mb: 512
                          cpu_speed_MHz: 1000
                          root_disk_size_gB: 30
                          network_rate: 200
                          disk_iops: 2500
                      disk_offering_id: null
                      service_offering_id: string
                      status: string
                      instance_status: string
                      password: string
                      username: string
                      created_at: 1234567890
                      updated_at: 1234567890
                      metadata: []
                      kubernetes_cluster_id: null
                      data_volumes: []
                      snapshot: []
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: string
                        name: string
                        created: true
                        template_id: null
                        vm_image:
                          id: string
                          type: string
                          name: string
                          is_available: true
                          display_text: string
                          name_orginal: string
                          ready_to_use_app: false
                          ready_to_use_app_name: null
                          ready_to_use_app_version: null
                          os_type: string
                          os_name: string
                          os_version: string
                          hardware_requirement:
                            cpunumber: 1
                            cpuspeed: 500
                            memory: 500
                            rootdisksize: 25
                          category: string
                        zone:
                          id: string
                          name: string
                          location: string
                          is_public: true
                          is_featured: true
                          is_ready: true
                        service_offering:
                          id: string
                          name: string
                          has_image_requirement: null
                          is_available: true
                          is_public: true
                          suggested: false
                          category: string
                          hourly_price:
                            up: 0
                            down: 0
                          hourly_price_no_discount:
                            up: 0
                            down: 0
                          description: null
                          hardware:
                            cpu_core: 1
                            memory_mb: 512
                            cpu_speed_MHz: 1000
                            root_disk_size_gB: 30
                            network_rate: 200
                            disk_iops: 2500
                        disk_offering_id: null
                        service_offering_id: string
                        status: string
                        instance_status: string
                        password: string
                        username: string
                        created_at: 1234567890
                        updated_at: 1234567890
                        metadata: []
                        kubernetes_cluster_id: null
                        data_volumes: []
                        snapshot: []
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: string
                        name:
                          type: string
                          example: string
                        created:
                          type: boolean
                          example: true
                        template_id:
                          type: string
                          example: null
                        vm_image:
                          type: object
                          properties:
                            id:
                              type: string
                              example: string
                            type:
                              type: string
                              example: string
                            name:
                              type: string
                              example: string
                            is_available:
                              type: boolean
                              example: true
                            display_text:
                              type: string
                              example: string
                            name_orginal:
                              type: string
                              example: string
                            ready_to_use_app:
                              type: boolean
                              example: false
                            ready_to_use_app_name:
                              type: string
                              example: null
                            ready_to_use_app_version:
                              type: string
                              example: null
                            os_type:
                              type: string
                              example: string
                            os_name:
                              type: string
                              example: string
                            os_version:
                              type: string
                              example: string
                            hardware_requirement:
                              type: object
                              properties:
                                cpunumber:
                                  type: integer
                                  example: 1
                                cpuspeed:
                                  type: integer
                                  example: 500
                                memory:
                                  type: integer
                                  example: 500
                                rootdisksize:
                                  type: integer
                                  example: 25
                            category:
                              type: string
                              example: string
                        zone:
                          type: object
                          properties:
                            id:
                              type: string
                              example: string
                            name:
                              type: string
                              example: string
                            location:
                              type: string
                              example: string
                            is_public:
                              type: boolean
                              example: true
                            is_featured:
                              type: boolean
                              example: true
                            is_ready:
                              type: boolean
                              example: true
                        service_offering:
                          type: object
                          properties:
                            id:
                              type: string
                              example: string
                            name:
                              type: string
                              example: string
                            has_image_requirement:
                              type: string
                              example: null
                            is_available:
                              type: boolean
                              example: true
                            is_public:
                              type: boolean
                              example: true
                            suggested:
                              type: boolean
                              example: false
                            category:
                              type: string
                              example: string
                            hourly_price:
                              type: object
                              properties:
                                up:
                                  type: integer
                                  example: 0
                                down:
                                  type: integer
                                  example: 0
                            hourly_price_no_discount:
                              type: object
                              properties:
                                up:
                                  type: integer
                                  example: 0
                                down:
                                  type: integer
                                  example: 0
                            description:
                              type: string
                              example: null
                            hardware:
                              type: object
                              properties:
                                cpu_core:
                                  type: integer
                                  example: 1
                                memory_mb:
                                  type: integer
                                  example: 512
                                cpu_speed_MHz:
                                  type: integer
                                  example: 1000
                                root_disk_size_gB:
                                  type: integer
                                  example: 30
                                network_rate:
                                  type: integer
                                  example: 200
                                disk_iops:
                                  type: integer
                                  example: 2500
                        disk_offering_id:
                          type: string
                          example: null
                        service_offering_id:
                          type: string
                          example: string
                        status:
                          type: string
                          example: string
                        instance_status:
                          type: string
                          example: string
                        password:
                          type: string
                          example: string
                        username:
                          type: string
                          example: string
                        created_at:
                          type: integer
                          example: 1234567890
                        updated_at:
                          type: integer
                          example: 1234567890
                        metadata:
                          type: array
                          example: []
                        kubernetes_cluster_id:
                          type: string
                          example: null
                        data_volumes:
                          type: array
                          example: []
                        snapshot:
                          type: array
                          example: []
      tags:
        - Instance
    post:
      summary: 'Create Instance'
      operationId: createInstance
      description: "  <aside class=\"notice\">need <small class=\"badge\">instance:create</small> ability for api token</aside>\n  <b>Note:</b> This function runs asynchronously in the background. The response will be:<br>\n  <pre>{\n    \"data\": {\n        \"success\": true\n    }\n  }</pre>\n  To check the status of the created instance, use the <b>List Instance</b> endpoint and review the <code>status</code> field."
      parameters: []
      responses:
        201:
          description: 'Accepted for async processing. Use List Instance to check status.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    success: true
                properties:
                  data:
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
      tags:
        - Instance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                service_offering_id:
                  type: ulid
                  description: 'The ID of the service offering.'
                  example: 01H9ZCNF46W6C1EM45T21B6M0G
                  nullable: false
                vm_image_id:
                  type: ulid
                  description: 'The ID of the VM image.'
                  example: 01H9ZCNF46W6C1EM45T21B6M0H
                  nullable: false
                network_ids:
                  type: array<ulid>
                  description: 'Array of network IDs to attach to the instance.'
                  example:
                    - 01H9ZCNF46W6C1EM45T21B6M0N
                  nullable: false
                name:
                  type: string
                  description: 'The name of the instance.'
                  example: my-instance
                  nullable: false
              required:
                - service_offering_id
                - vm_image_id
                - network_ids
                - name
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: string
  '/api/zone/{zoneId}/kubernetes':
    get:
      summary: Index
      operationId: index
      description: ' <aside class="notice">need <small class="badge">kubernetes:cluster:list</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Successful response with cluster list.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 01F8MECHZX3TBDSZ7XRADM79XE
                      name: example-cluster
                      description: 'This is a test cluster'
                      zone_id: zone-id
                      status: Running
                      kubernetes_version:
                        id: k8s-version-id
                        version: 1.26.14
                        enabled: true
                        min_cpu: 2
                        min_memory: 2048
                      service_offering:
                        id: service-offering-id
                        name: service-offering-name
                        hourly_price:
                          up: 100
                          down: 100
                        hardware:
                          cpu_core: 4
                          memory_mb: 4096
                          cpu_speed_MHz: 2300
                          root_disk_size_gB: 50
                          network_rate: 980
                          disk_iops: 2500
                      ssh_key: 'ssh-ed25519 ...'
                      ha_enabled: false
                      cluster_size: 1
                      created_at: 1737794395
                      updated_at: 1737794395
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 01F8MECHZX3TBDSZ7XRADM79XE
                        name: example-cluster
                        description: 'This is a test cluster'
                        zone_id: zone-id
                        status: Running
                        kubernetes_version:
                          id: k8s-version-id
                          version: 1.26.14
                          enabled: true
                          min_cpu: 2
                          min_memory: 2048
                        service_offering:
                          id: service-offering-id
                          name: service-offering-name
                          hourly_price:
                            up: 100
                            down: 100
                          hardware:
                            cpu_core: 4
                            memory_mb: 4096
                            cpu_speed_MHz: 2300
                            root_disk_size_gB: 50
                            network_rate: 980
                            disk_iops: 2500
                        ssh_key: 'ssh-ed25519 ...'
                        ha_enabled: false
                        cluster_size: 1
                        created_at: 1737794395
                        updated_at: 1737794395
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: 01F8MECHZX3TBDSZ7XRADM79XE
                        name:
                          type: string
                          example: example-cluster
                        description:
                          type: string
                          example: 'This is a test cluster'
                        zone_id:
                          type: string
                          example: zone-id
                        status:
                          type: string
                          example: Running
                        kubernetes_version:
                          type: object
                          properties:
                            id:
                              type: string
                              example: k8s-version-id
                            version:
                              type: string
                              example: 1.26.14
                            enabled:
                              type: boolean
                              example: true
                            min_cpu:
                              type: integer
                              example: 2
                            min_memory:
                              type: integer
                              example: 2048
                        service_offering:
                          type: object
                          properties:
                            id:
                              type: string
                              example: service-offering-id
                            name:
                              type: string
                              example: service-offering-name
                            hourly_price:
                              type: object
                              properties:
                                up:
                                  type: integer
                                  example: 100
                                down:
                                  type: integer
                                  example: 100
                            hardware:
                              type: object
                              properties:
                                cpu_core:
                                  type: integer
                                  example: 4
                                memory_mb:
                                  type: integer
                                  example: 4096
                                cpu_speed_MHz:
                                  type: integer
                                  example: 2300
                                root_disk_size_gB:
                                  type: integer
                                  example: 50
                                network_rate:
                                  type: integer
                                  example: 980
                                disk_iops:
                                  type: integer
                                  example: 2500
                        ssh_key:
                          type: string
                          example: 'ssh-ed25519 ...'
                        ha_enabled:
                          type: boolean
                          example: false
                        cluster_size:
                          type: integer
                          example: 1
                        created_at:
                          type: integer
                          example: 1737794395
                        updated_at:
                          type: integer
                          example: 1737794395
      tags:
        - Kubernetes
    post:
      summary: Create
      operationId: create
      description: ' <aside class="notice">need <small class="badge">kubernetes:cluster:create</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Successful response'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 01F8MECHZX3TBDSZ7XRADM79XE
                    name: example-cluster
                    description: 'This is a test cluster'
                    zone_id: zone-id
                    status: Running
                    kubernetes_version:
                      id: k8s-version-id
                      version: 1.26.14
                      enabled: true
                      min_cpu: 2
                      min_memory: 2048
                    service_offering:
                      id: service-offering-id
                      name: service-offering-name
                      is_public: true
                      is_available: true
                      hourly_price:
                        up: 100
                        down: 100
                      hardware:
                        cpu_core: 4
                        memory_mb: 4096
                        cpu_speed_MHz: 2300
                        root_disk_size_gB: 50
                        network_rate: 980
                        disk_iops: 2500
                    ssh_key: 'ssh-ed25519 ...'
                    ha_enabled: false
                    cluster_size: 1
                    created_at: 1737794395
                    updated_at: 1737794395
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 01F8MECHZX3TBDSZ7XRADM79XE
                      name:
                        type: string
                        example: example-cluster
                      description:
                        type: string
                        example: 'This is a test cluster'
                      zone_id:
                        type: string
                        example: zone-id
                      status:
                        type: string
                        example: Running
                      kubernetes_version:
                        type: object
                        properties:
                          id:
                            type: string
                            example: k8s-version-id
                          version:
                            type: string
                            example: 1.26.14
                          enabled:
                            type: boolean
                            example: true
                          min_cpu:
                            type: integer
                            example: 2
                          min_memory:
                            type: integer
                            example: 2048
                      service_offering:
                        type: object
                        properties:
                          id:
                            type: string
                            example: service-offering-id
                          name:
                            type: string
                            example: service-offering-name
                          is_public:
                            type: boolean
                            example: true
                          is_available:
                            type: boolean
                            example: true
                          hourly_price:
                            type: object
                            properties:
                              up:
                                type: integer
                                example: 100
                              down:
                                type: integer
                                example: 100
                          hardware:
                            type: object
                            properties:
                              cpu_core:
                                type: integer
                                example: 4
                              memory_mb:
                                type: integer
                                example: 4096
                              cpu_speed_MHz:
                                type: integer
                                example: 2300
                              root_disk_size_gB:
                                type: integer
                                example: 50
                              network_rate:
                                type: integer
                                example: 980
                              disk_iops:
                                type: integer
                                example: 2500
                      ssh_key:
                        type: string
                        example: 'ssh-ed25519 ...'
                      ha_enabled:
                        type: boolean
                        example: false
                      cluster_size:
                        type: integer
                        example: 1
                      created_at:
                        type: integer
                        example: 1737794395
                      updated_at:
                        type: integer
                        example: 1737794395
        422:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Validation error - Name is required.'
                    type: object
                    example:
                      message: 'The name field is required.'
                      errors:
                        name:
                          - 'The name field is required.'
                    properties:
                      message:
                        type: string
                        example: 'The name field is required.'
                      errors:
                        type: object
                        properties:
                          name:
                            type: array
                            example:
                              - 'The name field is required.'
                            items:
                              type: string
                  -
                    description: 'Validation error - Kubernetes Version ID is required.'
                    type: object
                    example:
                      message: 'The kubernetes version id field is required.'
                      errors:
                        kubernetes_version_id:
                          - 'The kubernetes version id field is required.'
                    properties:
                      message:
                        type: string
                        example: 'The kubernetes version id field is required.'
                      errors:
                        type: object
                        properties:
                          kubernetes_version_id:
                            type: array
                            example:
                              - 'The kubernetes version id field is required.'
                            items:
                              type: string
                  -
                    description: 'Validation error - Service Offering ID is required.'
                    type: object
                    example:
                      message: 'The service offering id field is required.'
                      errors:
                        service_offering_id:
                          - 'The service offering id field is required.'
                    properties:
                      message:
                        type: string
                        example: 'The service offering id field is required.'
                      errors:
                        type: object
                        properties:
                          service_offering_id:
                            type: array
                            example:
                              - 'The service offering id field is required.'
                            items:
                              type: string
                  -
                    description: 'Validation error - HA Enabled is required.'
                    type: object
                    example:
                      message: 'The ha enabled field is required.'
                      errors:
                        ha_enabled:
                          - 'The ha enabled field is required.'
                    properties:
                      message:
                        type: string
                        example: 'The ha enabled field is required.'
                      errors:
                        type: object
                        properties:
                          ha_enabled:
                            type: array
                            example:
                              - 'The ha enabled field is required.'
                            items:
                              type: string
                  -
                    description: 'Validation error - SSH Key is required.'
                    type: object
                    example:
                      message: 'The ssh key field is required.'
                      errors:
                        ssh_key:
                          - 'The ssh key field is required.'
                    properties:
                      message:
                        type: string
                        example: 'The ssh key field is required.'
                      errors:
                        type: object
                        properties:
                          ssh_key:
                            type: array
                            example:
                              - 'The ssh key field is required.'
                            items:
                              type: string
                  -
                    description: 'Validation error - Network ID is required.'
                    type: object
                    example:
                      message: 'The network id field is required.'
                      errors:
                        network_id:
                          - 'The network id field is required.'
                    properties:
                      message:
                        type: string
                        example: 'The network id field is required.'
                      errors:
                        type: object
                        properties:
                          network_id:
                            type: array
                            example:
                              - 'The network id field is required.'
                            items:
                              type: string
                  -
                    description: 'Validation error - Invalid Kubernetes Version ID.'
                    type: object
                    example:
                      message: 'The selected kubernetes version id is invalid.'
                      errors:
                        kubernetes_version_id:
                          - 'The selected kubernetes version id is invalid.'
                    properties:
                      message:
                        type: string
                        example: 'The selected kubernetes version id is invalid.'
                      errors:
                        type: object
                        properties:
                          kubernetes_version_id:
                            type: array
                            example:
                              - 'The selected kubernetes version id is invalid.'
                            items:
                              type: string
                  -
                    description: 'Validation error - Invalid Service Offering ID.'
                    type: object
                    example:
                      message: 'The selected service offering id is invalid.'
                      errors:
                        service_offering_id:
                          - 'The selected service offering id is invalid.'
                    properties:
                      message:
                        type: string
                        example: 'The selected service offering id is invalid.'
                      errors:
                        type: object
                        properties:
                          service_offering_id:
                            type: array
                            example:
                              - 'The selected service offering id is invalid.'
                            items:
                              type: string
                  -
                    description: 'Validation error - Invalid Network ID.'
                    type: object
                    example:
                      message: 'The selected network id is invalid.'
                      errors:
                        network_id:
                          - 'The selected network id is invalid.'
                    properties:
                      message:
                        type: string
                        example: 'The selected network id is invalid.'
                      errors:
                        type: object
                        properties:
                          network_id:
                            type: array
                            example:
                              - 'The selected network id is invalid.'
                            items:
                              type: string
                  -
                    description: "Validation error - Customer's CPU limit exceeds."
                    type: object
                    example:
                      message: 'The kubernetes version id field is required.'
                      errors:
                        kubernetes_version_id:
                          - "The required CPU (cpu core) exceeds the customer's limit (in core count)."
                    properties:
                      message:
                        type: string
                        example: 'The kubernetes version id field is required.'
                      errors:
                        type: object
                        properties:
                          kubernetes_version_id:
                            type: array
                            example:
                              - "The required CPU (cpu core) exceeds the customer's limit (in core count)."
                            items:
                              type: string
                  -
                    description: "Validation error - Customer's Memory (RAM) limit exceeds."
                    type: object
                    example:
                      message: 'The kubernetes version id field is required.'
                      errors:
                        kubernetes_version_id:
                          - "The required memory (memory MB) exceeds the customer's limit (in MB)."
                    properties:
                      message:
                        type: string
                        example: 'The kubernetes version id field is required.'
                      errors:
                        type: object
                        properties:
                          kubernetes_version_id:
                            type: array
                            example:
                              - "The required memory (memory MB) exceeds the customer's limit (in MB)."
                            items:
                              type: string
                  -
                    description: "Validation error - Customer's Disk limit exceeds."
                    type: object
                    example:
                      message: 'The kubernetes version id field is required.'
                      errors:
                        kubernetes_version_id:
                          - "The required primary storage (disk GB) exceeds the customer's limit (in GB)."
                    properties:
                      message:
                        type: string
                        example: 'The kubernetes version id field is required.'
                      errors:
                        type: object
                        properties:
                          kubernetes_version_id:
                            type: array
                            example:
                              - "The required primary storage (disk GB) exceeds the customer's limit (in GB)."
                            items:
                              type: string
      tags:
        - Kubernetes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the Kubernetes cluster. Must be between 3 and 255 characters.'
                  example: my-k8s-cluster
                  nullable: false
                kubernetes_version_id:
                  type: string
                  description: 'The unique identifier for the Kubernetes version to be used.'
                  example: 01F8MECHZX3RZ8Y6B8Q5F1E3V6
                  nullable: false
                service_offering_id:
                  type: string
                  description: 'The unique identifier for the service offering associated with the cluster.'
                  example: 01F8MECHZX3RZ8Y6B8Q5F1E3V7
                  nullable: false
                ha_enabled:
                  type: boolean
                  description: 'Indicates if high availability is enabled for the cluster.'
                  example: false
                  nullable: false
                ssh_key:
                  type: string
                  description: 'A valid SSH public key for accessing the cluster.'
                  example: 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQD...'
                  nullable: false
                network_id:
                  type: string
                  description: 'The unique identifier for the network associated with the cluster.'
                  example: 01F8MECHZX3RZ8Y6B8Q5F1E3V5
                  nullable: false
                description:
                  type: string
                  description: 'A brief description of the Kubernetes cluster.'
                  example: 'This is a test Kubernetes cluster.'
                  nullable: true
                cluster_size:
                  type: integer
                  description: 'The size of the cluster. Must be a positive integer.'
                  example: 3
                  nullable: true
                private_registry:
                  type: object
                  description: 'Configuration for a private container registry.'
                  example:
                    username: my-username
                    password: my-password
                    url: 'https://my-private-registry.com'
                  nullable: true
                  properties: {  }
                ha_config:
                  type: object
                  description: 'Configuration for high availability settings, if enabled.'
                  example:
                    controller_nodes: 3
                    external_loadbalancer_ip: 192.0.2.1
                  nullable: true
                  properties: {  }
              required:
                - name
                - kubernetes_version_id
                - service_offering_id
                - ha_enabled
                - ssh_key
                - network_id
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
  '/api/zone/{zoneId}/kubernetes/events':
    get:
      summary: 'Kubernetes Service Events'
      operationId: kubernetesServiceEvents
      description: ' <aside class="notice">need <small class="badge">kubernetes:events:list</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Success Response'
          content:
            text/plain:
              schema:
                type: string
                example: "{\n        \"data\": [\n            {\n                \"product_model\": \"App\\Models\\KubernetesCluster\",\n                \"product_id\": \"01F8MECHZX3TBDSZ7XRADM79XE\",\n                \"product_source\": \"k8s\",\n                \"type\": \"customer\",\n                \"content\": \"A kubernetes cluster event occurred.\",\n                \"created_at\": 1739256828\n            },\n        ],\n        \"meta\": {\n            \"current_page\": 1,\n            \"from\": 1,\n            \"last_page\": 10,\n            \"per_page\": 20,\n            \"to\": 20,\n            \"total\": 200\n        }\n}"
      tags:
        - Kubernetes
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: 'The type of events to filter'
                  example: system
                  nullable: false
                from:
                  type: integer
                  description: 'The timestamp to start filtering events from'
                  example: 1707653422
                  nullable: false
                to:
                  type: integer
                  description: 'The timestamp to end filtering events'
                  example: 1707653999
                  nullable: false
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
  '/api/zone/{zoneId}/kubernetes/versions':
    get:
      summary: 'List Kubernetes Versions'
      operationId: listKubernetesVersions
      description: ' <aside class="notice">need <small class="badge">kubernetes:versions:list</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Successful response with available Kubernetes versions.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 01jetc3f8f218krnm9hwh46j8d
                      version: 1.30.3
                      enabled: true
                      min_cpu: 2
                      min_memory: 2048
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 01jetc3f8f218krnm9hwh46j8d
                        version: 1.30.3
                        enabled: true
                        min_cpu: 2
                        min_memory: 2048
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: 01jetc3f8f218krnm9hwh46j8d
                        version:
                          type: string
                          example: 1.30.3
                        enabled:
                          type: boolean
                          example: true
                        min_cpu:
                          type: integer
                          example: 2
                        min_memory:
                          type: integer
                          example: 2048
      tags:
        - Kubernetes
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
  '/api/zone/{zoneId}/kubernetes/{clusterId}':
    get:
      summary: Show
      operationId: show
      description: ' <aside class="notice">need <small class="badge">kubernetes:cluster:show</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Successful response with cluster details.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 01F8MECHZX3TBDSZ7XRADM79XE
                    name: example-cluster
                    description: 'This is a test cluster'
                    zone_id: 01F8MECHZX3TBDSZ7XRADM79XE
                    status: Running
                    kubernetes_version:
                      id: k8s-version-id
                      version: 1.26.14
                      enabled: true
                      min_cpu: 2
                      min_memory: 2048
                    service_offering:
                      id: service-offering-id
                      name: service-offering-name
                      is_public: true
                      is_available: true
                      hourly_price:
                        up: 100
                        down: 100
                      hardware:
                        cpu_core: 4
                        memory_mb: 4096
                        cpu_speed_MHz: 2300
                        root_disk_size_gB: 50
                        network_rate: 980
                        disk_iops: 2500
                    ssh_key: 'ssh-ed25519 ...'
                    ha_enabled: false
                    cluster_size: 1
                    created_at: 1737794395
                    updated_at: 1737794395
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 01F8MECHZX3TBDSZ7XRADM79XE
                      name:
                        type: string
                        example: example-cluster
                      description:
                        type: string
                        example: 'This is a test cluster'
                      zone_id:
                        type: string
                        example: 01F8MECHZX3TBDSZ7XRADM79XE
                      status:
                        type: string
                        example: Running
                      kubernetes_version:
                        type: object
                        properties:
                          id:
                            type: string
                            example: k8s-version-id
                          version:
                            type: string
                            example: 1.26.14
                          enabled:
                            type: boolean
                            example: true
                          min_cpu:
                            type: integer
                            example: 2
                          min_memory:
                            type: integer
                            example: 2048
                      service_offering:
                        type: object
                        properties:
                          id:
                            type: string
                            example: service-offering-id
                          name:
                            type: string
                            example: service-offering-name
                          is_public:
                            type: boolean
                            example: true
                          is_available:
                            type: boolean
                            example: true
                          hourly_price:
                            type: object
                            properties:
                              up:
                                type: integer
                                example: 100
                              down:
                                type: integer
                                example: 100
                          hardware:
                            type: object
                            properties:
                              cpu_core:
                                type: integer
                                example: 4
                              memory_mb:
                                type: integer
                                example: 4096
                              cpu_speed_MHz:
                                type: integer
                                example: 2300
                              root_disk_size_gB:
                                type: integer
                                example: 50
                              network_rate:
                                type: integer
                                example: 980
                              disk_iops:
                                type: integer
                                example: 2500
                      ssh_key:
                        type: string
                        example: 'ssh-ed25519 ...'
                      ha_enabled:
                        type: boolean
                        example: false
                      cluster_size:
                        type: integer
                        example: 1
                      created_at:
                        type: integer
                        example: 1737794395
                      updated_at:
                        type: integer
                        example: 1737794395
      tags:
        - Kubernetes
    put:
      summary: Update
      operationId: update
      description: ' <aside class="notice">need <small class="badge">kubernetes:cluster:update</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Successful response'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 01F8MECHZX3TBDSZ7XRADM79XE
                    name: example-cluster
                    description: 'This is a test cluster'
                    zone_id: zone-id
                    status: Running
                    kubernetes_version:
                      id: k8s-version-id
                      version: 1.26.14
                      enabled: true
                      min_cpu: 2
                      min_memory: 2048
                    service_offering:
                      id: service-offering-id
                      name: service-offering-name
                      is_public: true
                      is_available: true
                      hourly_price:
                        up: 100
                        down: 100
                      hardware:
                        cpu_core: 4
                        memory_mb: 4096
                        cpu_speed_MHz: 2300
                        root_disk_size_gB: 50
                        network_rate: 980
                        disk_iops: 2500
                    ssh_key: 'ssh-ed25519 ...'
                    ha_enabled: false
                    cluster_size: 1
                    created_at: 1737794395
                    updated_at: 1737794395
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 01F8MECHZX3TBDSZ7XRADM79XE
                      name:
                        type: string
                        example: example-cluster
                      description:
                        type: string
                        example: 'This is a test cluster'
                      zone_id:
                        type: string
                        example: zone-id
                      status:
                        type: string
                        example: Running
                      kubernetes_version:
                        type: object
                        properties:
                          id:
                            type: string
                            example: k8s-version-id
                          version:
                            type: string
                            example: 1.26.14
                          enabled:
                            type: boolean
                            example: true
                          min_cpu:
                            type: integer
                            example: 2
                          min_memory:
                            type: integer
                            example: 2048
                      service_offering:
                        type: object
                        properties:
                          id:
                            type: string
                            example: service-offering-id
                          name:
                            type: string
                            example: service-offering-name
                          is_public:
                            type: boolean
                            example: true
                          is_available:
                            type: boolean
                            example: true
                          hourly_price:
                            type: object
                            properties:
                              up:
                                type: integer
                                example: 100
                              down:
                                type: integer
                                example: 100
                          hardware:
                            type: object
                            properties:
                              cpu_core:
                                type: integer
                                example: 4
                              memory_mb:
                                type: integer
                                example: 4096
                              cpu_speed_MHz:
                                type: integer
                                example: 2300
                              root_disk_size_gB:
                                type: integer
                                example: 50
                              network_rate:
                                type: integer
                                example: 980
                              disk_iops:
                                type: integer
                                example: 2500
                      ssh_key:
                        type: string
                        example: 'ssh-ed25519 ...'
                      ha_enabled:
                        type: boolean
                        example: false
                      cluster_size:
                        type: integer
                        example: 1
                      created_at:
                        type: integer
                        example: 1737794395
                      updated_at:
                        type: integer
                        example: 1737794395
        422:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Validation error - Invalid Name format.'
                    type: object
                    example:
                      message: 'The name field must be a string.'
                      errors:
                        name:
                          - 'The name field must be a string.'
                    properties:
                      message:
                        type: string
                        example: 'The name field must be a string.'
                      errors:
                        type: object
                        properties:
                          name:
                            type: array
                            example:
                              - 'The name field must be a string.'
                            items:
                              type: string
                  -
                    description: 'Validation error - Invalid Description format.'
                    type: object
                    example:
                      message: 'The description field must be a string.'
                      errors:
                        description:
                          - 'The description field must be a string.'
                    properties:
                      message:
                        type: string
                        example: 'The description field must be a string.'
                      errors:
                        type: object
                        properties:
                          description:
                            type: array
                            example:
                              - 'The description field must be a string.'
                            items:
                              type: string
      tags:
        - Kubernetes
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: nam
                  nullable: true
                description:
                  type: string
                  description: ''
                  example: 'Alias dignissimos et neque aut tempora voluptas.'
                  nullable: true
    delete:
      summary: Delete
      operationId: delete
      description: ' <aside class="notice">need <small class="badge">kubernetes:cluster:delete</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Successful deletion'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 01F8MECHZX3TBDSZ7XRADM79XE
                    name: example-cluster
                    description: 'This is a test cluster'
                    zone_id: zone-id
                    status: Running
                    kubernetes_version:
                      id: k8s-version-id
                      version: 1.26.14
                      enabled: true
                      min_cpu: 2
                      min_memory: 2048
                    service_offering:
                      id: service-offering-id
                      name: service-offering-name
                      is_public: true
                      is_available: true
                      hourly_price:
                        up: 100
                        down: 100
                      hardware:
                        cpu_core: 4
                        memory_mb: 4096
                        cpu_speed_MHz: 2300
                        root_disk_size_gB: 50
                        network_rate: 980
                        disk_iops: 2500
                    ssh_key: 'ssh-ed25519 ...'
                    ha_enabled: false
                    cluster_size: 1
                    created_at: 1737794395
                    updated_at: 1737794395
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 01F8MECHZX3TBDSZ7XRADM79XE
                      name:
                        type: string
                        example: example-cluster
                      description:
                        type: string
                        example: 'This is a test cluster'
                      zone_id:
                        type: string
                        example: zone-id
                      status:
                        type: string
                        example: Running
                      kubernetes_version:
                        type: object
                        properties:
                          id:
                            type: string
                            example: k8s-version-id
                          version:
                            type: string
                            example: 1.26.14
                          enabled:
                            type: boolean
                            example: true
                          min_cpu:
                            type: integer
                            example: 2
                          min_memory:
                            type: integer
                            example: 2048
                      service_offering:
                        type: object
                        properties:
                          id:
                            type: string
                            example: service-offering-id
                          name:
                            type: string
                            example: service-offering-name
                          is_public:
                            type: boolean
                            example: true
                          is_available:
                            type: boolean
                            example: true
                          hourly_price:
                            type: object
                            properties:
                              up:
                                type: integer
                                example: 100
                              down:
                                type: integer
                                example: 100
                          hardware:
                            type: object
                            properties:
                              cpu_core:
                                type: integer
                                example: 4
                              memory_mb:
                                type: integer
                                example: 4096
                              cpu_speed_MHz:
                                type: integer
                                example: 2300
                              root_disk_size_gB:
                                type: integer
                                example: 50
                              network_rate:
                                type: integer
                                example: 980
                              disk_iops:
                                type: integer
                                example: 2500
                      ssh_key:
                        type: string
                        example: 'ssh-ed25519 ...'
                      ha_enabled:
                        type: boolean
                        example: false
                      cluster_size:
                        type: integer
                        example: 1
                      created_at:
                        type: integer
                        example: 1737794395
                      updated_at:
                        type: integer
                        example: 1737794395
      tags:
        - Kubernetes
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
      -
        in: path
        name: clusterId
        description: 'The ID of the cluster.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
  '/api/zone/{zoneId}/kubernetes/{clusterId}/events':
    get:
      summary: Events
      operationId: events
      description: ' <aside class="notice">need <small class="badge">kubernetes:cluster:event:list</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Success Response'
          content:
            text/plain:
              schema:
                type: string
                example: "{\n        \"data\": [\n            {\n                \"product_model\": \"App\\Models\\KubernetesCluster\",\n                \"product_id\": \"01F8MECHZX3TBDSZ7XRADM79XE\",\n                \"product_source\": \"k8s\",\n                \"type\": \"customer\",\n                \"content\": \"A kubernetes cluster event occurred.\",\n                \"created_at\": 1739256828\n            },\n        ],\n        \"meta\": {\n            \"current_page\": 1,\n            \"from\": 1,\n            \"last_page\": 10,\n            \"per_page\": 20,\n            \"to\": 20,\n            \"total\": 200\n        }\n}"
      tags:
        - Kubernetes
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: 'The type of events to filter'
                  example: system
                  nullable: false
                from:
                  type: integer
                  description: 'The timestamp to start filtering events from'
                  example: 1707653422
                  nullable: false
                to:
                  type: integer
                  description: 'The timestamp to end filtering events'
                  example: 1707653999
                  nullable: false
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
      -
        in: path
        name: clusterId
        description: 'The ID of the cluster.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
  '/api/zone/{zoneId}/kubernetes/{clusterId}/start':
    post:
      summary: Start
      operationId: start
      description: ' <aside class="notice">need <small class="badge">kubernetes:cluster:start</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Successful start'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: success
                properties:
                  message:
                    type: string
                    example: success
      tags:
        - Kubernetes
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
      -
        in: path
        name: clusterId
        description: 'The ID of the cluster.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
  '/api/zone/{zoneId}/kubernetes/{clusterId}/stop':
    post:
      summary: Stop
      operationId: stop
      description: ' <aside class="notice">need <small class="badge">kubernetes:cluster:stop</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Successful stop'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 01F8MECHZX3TBDSZ7XRADM79XE
                    name: example-cluster
                    description: 'This is a test cluster'
                    zone_id: zone-id
                    status: Running
                    kubernetes_version:
                      id: k8s-version-id
                      version: 1.26.14
                      enabled: true
                      min_cpu: 2
                      min_memory: 2048
                    service_offering:
                      id: service-offering-id
                      name: service-offering-name
                      is_public: true
                      is_available: true
                      hourly_price:
                        up: 100
                        down: 100
                      hardware:
                        cpu_core: 4
                        memory_mb: 4096
                        cpu_speed_MHz: 2300
                        root_disk_size_gB: 50
                        network_rate: 980
                        disk_iops: 2500
                    ssh_key: 'ssh-ed25519 ...'
                    ha_enabled: false
                    cluster_size: 1
                    created_at: 1737794395
                    updated_at: 1737794395
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 01F8MECHZX3TBDSZ7XRADM79XE
                      name:
                        type: string
                        example: example-cluster
                      description:
                        type: string
                        example: 'This is a test cluster'
                      zone_id:
                        type: string
                        example: zone-id
                      status:
                        type: string
                        example: Running
                      kubernetes_version:
                        type: object
                        properties:
                          id:
                            type: string
                            example: k8s-version-id
                          version:
                            type: string
                            example: 1.26.14
                          enabled:
                            type: boolean
                            example: true
                          min_cpu:
                            type: integer
                            example: 2
                          min_memory:
                            type: integer
                            example: 2048
                      service_offering:
                        type: object
                        properties:
                          id:
                            type: string
                            example: service-offering-id
                          name:
                            type: string
                            example: service-offering-name
                          is_public:
                            type: boolean
                            example: true
                          is_available:
                            type: boolean
                            example: true
                          hourly_price:
                            type: object
                            properties:
                              up:
                                type: integer
                                example: 100
                              down:
                                type: integer
                                example: 100
                          hardware:
                            type: object
                            properties:
                              cpu_core:
                                type: integer
                                example: 4
                              memory_mb:
                                type: integer
                                example: 4096
                              cpu_speed_MHz:
                                type: integer
                                example: 2300
                              root_disk_size_gB:
                                type: integer
                                example: 50
                              network_rate:
                                type: integer
                                example: 980
                              disk_iops:
                                type: integer
                                example: 2500
                      ssh_key:
                        type: string
                        example: 'ssh-ed25519 ...'
                      ha_enabled:
                        type: boolean
                        example: false
                      cluster_size:
                        type: integer
                        example: 1
                      created_at:
                        type: integer
                        example: 1737794395
                      updated_at:
                        type: integer
                        example: 1737794395
      tags:
        - Kubernetes
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
      -
        in: path
        name: clusterId
        description: 'The ID of the cluster.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
  '/api/zone/{zoneId}/kubernetes/{clusterId}/scale':
    post:
      summary: Scale
      operationId: scale
      description: ' <aside class="notice">need <small class="badge">kubernetes:cluster:scale</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Successful scaling'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 01F8MECHZX3TBDSZ7XRADM79XE
                    name: example-cluster
                    description: 'This is a test cluster'
                    zone_id: zone-id
                    status: Running
                    kubernetes_version:
                      id: k8s-version-id
                      version: 1.26.14
                      enabled: true
                      min_cpu: 2
                      min_memory: 2048
                    service_offering:
                      id: service-offering-id
                      name: service-offering-name
                      is_public: true
                      is_available: true
                      hourly_price:
                        up: 100
                        down: 100
                      hardware:
                        cpu_core: 4
                        memory_mb: 4096
                        cpu_speed_MHz: 2300
                        root_disk_size_gB: 50
                        network_rate: 980
                        disk_iops: 2500
                    ssh_key: 'ssh-ed25519 ...'
                    ha_enabled: false
                    cluster_size: 1
                    created_at: 1737794395
                    updated_at: 1737794395
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 01F8MECHZX3TBDSZ7XRADM79XE
                      name:
                        type: string
                        example: example-cluster
                      description:
                        type: string
                        example: 'This is a test cluster'
                      zone_id:
                        type: string
                        example: zone-id
                      status:
                        type: string
                        example: Running
                      kubernetes_version:
                        type: object
                        properties:
                          id:
                            type: string
                            example: k8s-version-id
                          version:
                            type: string
                            example: 1.26.14
                          enabled:
                            type: boolean
                            example: true
                          min_cpu:
                            type: integer
                            example: 2
                          min_memory:
                            type: integer
                            example: 2048
                      service_offering:
                        type: object
                        properties:
                          id:
                            type: string
                            example: service-offering-id
                          name:
                            type: string
                            example: service-offering-name
                          is_public:
                            type: boolean
                            example: true
                          is_available:
                            type: boolean
                            example: true
                          hourly_price:
                            type: object
                            properties:
                              up:
                                type: integer
                                example: 100
                              down:
                                type: integer
                                example: 100
                          hardware:
                            type: object
                            properties:
                              cpu_core:
                                type: integer
                                example: 4
                              memory_mb:
                                type: integer
                                example: 4096
                              cpu_speed_MHz:
                                type: integer
                                example: 2300
                              root_disk_size_gB:
                                type: integer
                                example: 50
                              network_rate:
                                type: integer
                                example: 980
                              disk_iops:
                                type: integer
                                example: 2500
                      ssh_key:
                        type: string
                        example: 'ssh-ed25519 ...'
                      ha_enabled:
                        type: boolean
                        example: false
                      cluster_size:
                        type: integer
                        example: 1
                      created_at:
                        type: integer
                        example: 1737794395
                      updated_at:
                        type: integer
                        example: 1737794395
        422:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'The auto scaling field is required.'
                    type: object
                    example:
                      message: 'The auto scaling field is required.'
                      errors:
                        auto_scaling:
                          - 'The auto scaling field is required.'
                    properties:
                      message:
                        type: string
                        example: 'The auto scaling field is required.'
                      errors:
                        type: object
                        properties:
                          auto_scaling:
                            type: array
                            example:
                              - 'The auto scaling field is required.'
                            items:
                              type: string
                  -
                    description: 'Invalid auto scaling format.'
                    type: object
                    example:
                      message: 'The auto scaling field must be true or false.'
                      errors:
                        auto_scaling:
                          - 'The auto scaling field must be true or false.'
                    properties:
                      message:
                        type: string
                        example: 'The auto scaling field must be true or false.'
                      errors:
                        type: object
                        properties:
                          auto_scaling:
                            type: array
                            example:
                              - 'The auto scaling field must be true or false.'
                            items:
                              type: string
                  -
                    description: 'The cluster size field is required when auto scaling is false.'
                    type: object
                    example:
                      message: 'The cluster size field is required when auto scaling is false.'
                      errors:
                        cluster_size:
                          - 'The cluster size field is required when auto scaling is false.'
                    properties:
                      message:
                        type: string
                        example: 'The cluster size field is required when auto scaling is false.'
                      errors:
                        type: object
                        properties:
                          cluster_size:
                            type: array
                            example:
                              - 'The cluster size field is required when auto scaling is false.'
                            items:
                              type: string
                  -
                    description: 'Invalid cluster size format.'
                    type: object
                    example:
                      message: 'The cluster size must be an integer.'
                      errors:
                        cluster_size:
                          - 'The cluster size must be an integer.'
                    properties:
                      message:
                        type: string
                        example: 'The cluster size must be an integer.'
                      errors:
                        type: object
                        properties:
                          cluster_size:
                            type: array
                            example:
                              - 'The cluster size must be an integer.'
                            items:
                              type: string
                  -
                    description: 'The min cluster size field is required when auto scaling is true.'
                    type: object
                    example:
                      message: 'The min cluster size field is required when auto scaling is true.'
                      errors:
                        min_cluster_size:
                          - 'The min cluster size field is required when auto scaling is true.'
                    properties:
                      message:
                        type: string
                        example: 'The min cluster size field is required when auto scaling is true.'
                      errors:
                        type: object
                        properties:
                          min_cluster_size:
                            type: array
                            example:
                              - 'The min cluster size field is required when auto scaling is true.'
                            items:
                              type: string
                  -
                    description: 'Invalid min cluster size format.'
                    type: object
                    example:
                      message: 'The min cluster size must be an integer.'
                      errors:
                        min_cluster_size:
                          - 'The min cluster size must be an integer.'
                    properties:
                      message:
                        type: string
                        example: 'The min cluster size must be an integer.'
                      errors:
                        type: object
                        properties:
                          min_cluster_size:
                            type: array
                            example:
                              - 'The min cluster size must be an integer.'
                            items:
                              type: string
                  -
                    description: 'The max cluster size field is required when auto scaling is true.'
                    type: object
                    example:
                      message: 'The max cluster size field is required when auto scaling is true.'
                      errors:
                        max_cluster_size:
                          - 'The max cluster size field is required when auto scaling is true.'
                    properties:
                      message:
                        type: string
                        example: 'The max cluster size field is required when auto scaling is true.'
                      errors:
                        type: object
                        properties:
                          max_cluster_size:
                            type: array
                            example:
                              - 'The max cluster size field is required when auto scaling is true.'
                            items:
                              type: string
                  -
                    description: 'Invalid max cluster size format.'
                    type: object
                    example:
                      message: 'The max cluster size must be an integer.'
                      errors:
                        max_cluster_size:
                          - 'The max cluster size must be an integer.'
                    properties:
                      message:
                        type: string
                        example: 'The max cluster size must be an integer.'
                      errors:
                        type: object
                        properties:
                          max_cluster_size:
                            type: array
                            example:
                              - 'The max cluster size must be an integer.'
                            items:
                              type: string
      tags:
        - Kubernetes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                auto_scaling:
                  type: boolean
                  description: 'Indicates whether auto-scaling is enabled.'
                  example: false
                  nullable: false
                cluster_size:
                  type: integer
                  description: 'The desired size of the cluster. Must be at least 1.'
                  example: 3
                  nullable: true
                min_cluster_size:
                  type: integer
                  description: 'The minimum size of the cluster when auto-scaling is enabled. Must be at least 1.'
                  example: 1
                  nullable: true
                max_cluster_size:
                  type: integer
                  description: 'The maximum size of the cluster when auto-scaling is enabled. Must be at least 1.'
                  example: 5
                  nullable: true
              required:
                - auto_scaling
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
      -
        in: path
        name: clusterId
        description: 'The ID of the cluster.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
  '/api/zone/{zoneId}/kubernetes/{clusterId}/service-offering':
    post:
      summary: 'Update Service Offering'
      operationId: updateServiceOffering
      description: ' <aside class="notice">need <small class="badge">kubernetes:cluster:update-service-offering</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Successful service offering update'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 01F8MECHZX3TBDSZ7XRADM79XE
                    name: example-cluster
                    description: 'This is a test cluster'
                    zone_id: zone-id
                    status: Running
                    kubernetes_version:
                      id: k8s-version-id
                      version: 1.26.14
                      enabled: true
                      min_cpu: 2
                      min_memory: 2048
                    service_offering:
                      id: service-offering-id
                      name: service-offering-name
                      is_public: true
                      is_available: true
                      hourly_price:
                        up: 100
                        down: 100
                      hardware:
                        cpu_core: 4
                        memory_mb: 4096
                        cpu_speed_MHz: 2300
                        root_disk_size_gB: 50
                        network_rate: 980
                        disk_iops: 2500
                    ssh_key: 'ssh-ed25519 ...'
                    ha_enabled: false
                    cluster_size: 1
                    created_at: 1737794395
                    updated_at: 1737794395
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 01F8MECHZX3TBDSZ7XRADM79XE
                      name:
                        type: string
                        example: example-cluster
                      description:
                        type: string
                        example: 'This is a test cluster'
                      zone_id:
                        type: string
                        example: zone-id
                      status:
                        type: string
                        example: Running
                      kubernetes_version:
                        type: object
                        properties:
                          id:
                            type: string
                            example: k8s-version-id
                          version:
                            type: string
                            example: 1.26.14
                          enabled:
                            type: boolean
                            example: true
                          min_cpu:
                            type: integer
                            example: 2
                          min_memory:
                            type: integer
                            example: 2048
                      service_offering:
                        type: object
                        properties:
                          id:
                            type: string
                            example: service-offering-id
                          name:
                            type: string
                            example: service-offering-name
                          is_public:
                            type: boolean
                            example: true
                          is_available:
                            type: boolean
                            example: true
                          hourly_price:
                            type: object
                            properties:
                              up:
                                type: integer
                                example: 100
                              down:
                                type: integer
                                example: 100
                          hardware:
                            type: object
                            properties:
                              cpu_core:
                                type: integer
                                example: 4
                              memory_mb:
                                type: integer
                                example: 4096
                              cpu_speed_MHz:
                                type: integer
                                example: 2300
                              root_disk_size_gB:
                                type: integer
                                example: 50
                              network_rate:
                                type: integer
                                example: 980
                              disk_iops:
                                type: integer
                                example: 2500
                      ssh_key:
                        type: string
                        example: 'ssh-ed25519 ...'
                      ha_enabled:
                        type: boolean
                        example: false
                      cluster_size:
                        type: integer
                        example: 1
                      created_at:
                        type: integer
                        example: 1737794395
                      updated_at:
                        type: integer
                        example: 1737794395
      tags:
        - Kubernetes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                service_offering_id:
                  type: string
                  description: 'The ID of the new service offering to be applied to the cluster.'
                  example: 01F8MECHZX3TBDSZ7XRADM79XE
                  nullable: false
              required:
                - service_offering_id
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
      -
        in: path
        name: clusterId
        description: 'The ID of the cluster.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
  '/api/zone/{zoneId}/kubernetes/{clusterId}/upgrade':
    post:
      summary: 'Upgrade Version'
      operationId: upgradeVersion
      description: ' <aside class="notice">need <small class="badge">kubernetes:cluster:upgrade-version</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Successful version upgrade'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 01F8MECHZX3TBDSZ7XRADM79XE
                    name: example-cluster
                    description: 'This is a test cluster'
                    zone_id: zone-id
                    status: Running
                    kubernetes_version:
                      id: k8s-version-id
                      version: 1.26.14
                      enabled: true
                      min_cpu: 2
                      min_memory: 2048
                    service_offering:
                      id: service-offering-id
                      name: service-offering-name
                      is_public: true
                      is_available: true
                      hourly_price:
                        up: 100
                        down: 100
                      hardware:
                        cpu_core: 4
                        memory_mb: 4096
                        cpu_speed_MHz: 2300
                        root_disk_size_gB: 50
                        network_rate: 980
                        disk_iops: 2500
                    ssh_key: 'ssh-ed25519 ...'
                    ha_enabled: false
                    cluster_size: 1
                    created_at: 1737794395
                    updated_at: 1737794395
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 01F8MECHZX3TBDSZ7XRADM79XE
                      name:
                        type: string
                        example: example-cluster
                      description:
                        type: string
                        example: 'This is a test cluster'
                      zone_id:
                        type: string
                        example: zone-id
                      status:
                        type: string
                        example: Running
                      kubernetes_version:
                        type: object
                        properties:
                          id:
                            type: string
                            example: k8s-version-id
                          version:
                            type: string
                            example: 1.26.14
                          enabled:
                            type: boolean
                            example: true
                          min_cpu:
                            type: integer
                            example: 2
                          min_memory:
                            type: integer
                            example: 2048
                      service_offering:
                        type: object
                        properties:
                          id:
                            type: string
                            example: service-offering-id
                          name:
                            type: string
                            example: service-offering-name
                          is_public:
                            type: boolean
                            example: true
                          is_available:
                            type: boolean
                            example: true
                          hourly_price:
                            type: object
                            properties:
                              up:
                                type: integer
                                example: 100
                              down:
                                type: integer
                                example: 100
                          hardware:
                            type: object
                            properties:
                              cpu_core:
                                type: integer
                                example: 4
                              memory_mb:
                                type: integer
                                example: 4096
                              cpu_speed_MHz:
                                type: integer
                                example: 2300
                              root_disk_size_gB:
                                type: integer
                                example: 50
                              network_rate:
                                type: integer
                                example: 980
                              disk_iops:
                                type: integer
                                example: 2500
                      ssh_key:
                        type: string
                        example: 'ssh-ed25519 ...'
                      ha_enabled:
                        type: boolean
                        example: false
                      cluster_size:
                        type: integer
                        example: 1
                      created_at:
                        type: integer
                        example: 1737794395
                      updated_at:
                        type: integer
                        example: 1737794395
      tags:
        - Kubernetes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                new_kubernetes_version_id:
                  type: string
                  description: 'The ID of the new Kubernetes version to upgrade to.'
                  example: 01F8MECHZX3TBDSZ7XRADM79XE
                  nullable: false
              required:
                - new_kubernetes_version_id
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
      -
        in: path
        name: clusterId
        description: 'The ID of the cluster.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
  '/api/zone/{zoneId}/kubernetes/service-offerings':
    get:
      summary: 'List Service Offerings'
      operationId: listServiceOfferings
      description: ' <aside class="notice">need <small class="badge">kubernetes:service-offerings:list</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Successful response with available service offerings.'
          content:
            text/plain:
              schema:
                type: string
                example: "{\n        \"data\": [\n            {\n                \"id\": \"01hytvspdx8rzae97ba2qc8fvs\",\n                \"name\": \"n04-04-050-980-v3\",\n                \"is_public\": true,\n                \"is_available\": true,\n                \"hourly_price\": {\n                    \"up\": 100,\n                    \"down\": 100\n                },\n                \"hourly_price_no_discount\": {\n                    \"up\": 100,\n                    \"down\": 100\n                },\n                \"description\": null,\n                \"hardware\": {\n                    \"cpu_core\": 4,\n                    \"memory_mb\": 4096,\n                    \"cpu_speed_MHz\": 2300,\n                    \"root_disk_size_gB\": 50,\n                    \"network_rate\": 980,\n                    \"disk_iops\": 2500\n                }\n            },\n            // Additional service offerings...\n        ]\n    }"
      tags:
        - Kubernetes
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
  '/api/zone/{zoneId}/network/{networkId}/firewall/ipv4':
    get:
      summary: 'List IPv4 Firewall Rules'
      operationId: listIPv4FirewallRules
      description: "  <aside class=\"notice\">need <small class=\"badge\">network:firewall:ipv4:list</small> ability for api token</aside>\n  <p>Retrieves a list of all IPv4 firewall rules associated with a specific network.</p>\n  <ul>\n    <li><b>id</b>: Unique identifier for the firewall rule.</li>\n    <li><b>network_public_ip_id</b>: The public IP address associated with the rule (if any).</li>\n    <li><b>protocol</b>: Network protocol (e.g., TCP, UDP, ICMP).</li>\n    <li><b>traffic_type</b>: Direction of traffic (<code>Ingress</code> for incoming, <code>Egress</code> for outgoing).</li>\n    <li><b>ip_source</b>: Source IP or CIDR range.</li>\n    <li><b>ip_destination</b>: Destination IP or CIDR range.</li>\n    <li><b>port_start</b>: Starting port (for TCP/UDP protocols).</li>\n    <li><b>port_end</b>: Ending port (for TCP/UDP protocols).</li>\n    <li><b>icmp_code</b>: ICMP code (for ICMP protocol).</li>\n    <li><b>icmp_type</b>: ICMP type (for ICMP protocol).</li>\n    <li><b>status</b>: Current status of the rule (e.g., Active).</li>\n    <li><b>created_at</b>: Timestamp when the rule was created.</li>\n  </ul>"
      parameters: []
      responses:
        200:
          description: 'Successful response with a list of IPv4 firewall rules.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: firewall-rule-id
                      network_public_ip_id: ip-public-id
                      protocol: ICMP
                      traffic_type: Ingress
                      ip_source: 0.0.0.0/0
                      ip_destination: 192.168.61.58
                      port_start: null
                      port_end: null
                      icmp_code: null
                      icmp_type: null
                      status: Active
                      created_at: '2025-06-30T13:15:35.000000Z'
                    -
                      id: firewall-rule-id
                      network_public_ip_id: null
                      protocol: UDP
                      traffic_type: Egress
                      ip_source: 192.168.1.0/24
                      ip_destination: 0.0.0.0/0
                      port_start: '0'
                      port_end: '65535'
                      icmp_code: null
                      icmp_type: null
                      status: Active
                      created_at: '2025-06-30T13:15:29.000000Z'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: firewall-rule-id
                        network_public_ip_id: ip-public-id
                        protocol: ICMP
                        traffic_type: Ingress
                        ip_source: 0.0.0.0/0
                        ip_destination: 192.168.61.58
                        port_start: null
                        port_end: null
                        icmp_code: null
                        icmp_type: null
                        status: Active
                        created_at: '2025-06-30T13:15:35.000000Z'
                      -
                        id: firewall-rule-id
                        network_public_ip_id: null
                        protocol: UDP
                        traffic_type: Egress
                        ip_source: 192.168.1.0/24
                        ip_destination: 0.0.0.0/0
                        port_start: '0'
                        port_end: '65535'
                        icmp_code: null
                        icmp_type: null
                        status: Active
                        created_at: '2025-06-30T13:15:29.000000Z'
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: firewall-rule-id
                        network_public_ip_id:
                          type: string
                          example: ip-public-id
                        protocol:
                          type: string
                          example: ICMP
                        traffic_type:
                          type: string
                          example: Ingress
                        ip_source:
                          type: string
                          example: 0.0.0.0/0
                        ip_destination:
                          type: string
                          example: 192.168.61.58
                        port_start:
                          type: string
                          example: null
                        port_end:
                          type: string
                          example: null
                        icmp_code:
                          type: string
                          example: null
                        icmp_type:
                          type: string
                          example: null
                        status:
                          type: string
                          example: Active
                        created_at:
                          type: string
                          example: '2025-06-30T13:15:35.000000Z'
        422:
          description: 'Validation error - Network ID is required.'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The network id field is required.'
                  errors:
                    network_id:
                      - 'The network id field is required.'
                properties:
                  message:
                    type: string
                    example: 'The network id field is required.'
                  errors:
                    type: object
                    properties:
                      network_id:
                        type: array
                        example:
                          - 'The network id field is required.'
                        items:
                          type: string
      tags:
        - Network
    post:
      summary: 'Create IPv4 Firewall Rule'
      operationId: createIPv4FirewallRule
      description: " <aside class=\"notice\">need <small class=\"badge\">network:firewall:ipv4:create</small> ability for api token</aside>\n <p>Creates a new firewall rule for IPv4 traffic on a given network.</p>"
      parameters: []
      responses:
        201:
          description: 'Successful creation of a new firewall rule.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    success: true
                properties:
                  data:
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
        422:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Validation error - Missing network_id.'
                    type: object
                    example:
                      message: 'The network id field is required.'
                    properties:
                      message:
                        type: string
                        example: 'The network id field is required.'
                  -
                    description: 'Validation error - Missing traffic_type.'
                    type: object
                    example:
                      message: 'The traffic type field is required.'
                    properties:
                      message:
                        type: string
                        example: 'The traffic type field is required.'
                  -
                    description: 'Validation error - Missing protocol_type.'
                    type: object
                    example:
                      message: 'The protocol type field is required.'
                    properties:
                      message:
                        type: string
                        example: 'The protocol type field is required.'
                  -
                    description: 'Validation error - Invalid CIDR format for ip_source.'
                    type: object
                    example:
                      message: 'The ip source must be a valid CIDR address.'
                    properties:
                      message:
                        type: string
                        example: 'The ip source must be a valid CIDR address.'
      tags:
        - Network
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                traffic_type:
                  type: string
                  description: ''
                  example: Ingress
                  nullable: false
                  enum:
                    - Ingress
                    - Egress
                protocol_type:
                  type: string
                  description: ''
                  example: UDP
                  nullable: false
                  enum:
                    - TCP
                    - UDP
                    - ICMP
                public_ip_id:
                  type: string
                  description: ''
                  example: voluptatum
                  nullable: true
                ip_source:
                  type: string
                  description: ''
                  example: quibusdam
                  nullable: true
                ip_destination:
                  type: string
                  description: ''
                  example: odit
                  nullable: true
                port_start:
                  type: integer
                  description: ''
                  example: 14
                  nullable: true
                port_end:
                  type: integer
                  description: ''
                  example: 20
                  nullable: true
                icmp_code:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                icmp_type:
                  type: string
                  description: ''
                  example: null
                  nullable: true
              required:
                - traffic_type
                - protocol_type
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
      -
        in: path
        name: networkId
        description: 'The ID of the network to fetch rules for.'
        example: 01H9ZCNF46W6C1EM45T21B6M0G
        required: true
        schema:
          type: ulid
  '/api/zone/{zoneId}/network/{networkId}/firewall/ipv4/{ruleId}':
    delete:
      summary: 'Delete IPv4 Firewall Rule'
      operationId: deleteIPv4FirewallRule
      description: " <aside class=\"notice\">need <small class=\"badge\">network:firewall:ipv4:delete</small> ability for api token</aside>\n <p>Deletes a specific IPv4 firewall rule by its ID.</p>"
      parameters: []
      responses:
        200:
          description: 'Successful deletion.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    success: true
                properties:
                  data:
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
      tags:
        - Network
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
      -
        in: path
        name: networkId
        description: 'The ID of the network to fetch rules for.'
        example: 01H9ZCNF46W6C1EM45T21B6M0G
        required: true
        schema:
          type: ulid
      -
        in: path
        name: ruleId
        description: 'The ID of the firewall rule to delete.'
        example: 01H9ZCPF46W6C1EM45T21B6M0H
        required: true
        schema:
          type: ulid
  '/api/zone/{zoneId}/network/{networkId}/firewall/ipv6':
    get:
      summary: 'List IPv6 Firewall Rules'
      operationId: listIPv6FirewallRules
      description: "  <aside class=\"notice\">need <small class=\"badge\">network:firewall:ipv6:list</small> ability for api token</aside>\n  <p>Retrieves a list of all IPv6 firewall rules associated with a specific network.</p>\n  <ul>\n    <li><b>id</b>: Unique identifier for the firewall rule.</li>\n    <li><b>protocol</b>: Network protocol (e.g., TCP, UDP, ICMP).</li>\n    <li><b>traffic_type</b>: Direction of traffic (<code>Ingress</code> for incoming, <code>Egress</code> for outgoing).</li>\n    <li><b>ip_source</b>: Source IPv6 or CIDR range.</li>\n    <li><b>ip_destination</b>: Destination IPv6 or CIDR range.</li>\n    <li><b>port_start</b>: Starting port (for TCP/UDP protocols).</li>\n    <li><b>port_end</b>: Ending port (for TCP/UDP protocols).</li>\n    <li><b>icmp_code</b>: ICMP code (for ICMP protocol).</li>\n    <li><b>icmp_type</b>: ICMP type (for ICMP protocol).</li>\n    <li><b>status</b>: Current status of the rule (e.g., Active).</li>\n    <li><b>created_at</b>: Timestamp when the rule was created.</li>\n  </ul>"
      parameters: []
      responses:
        200:
          description: 'Successful response with a list of IPv6 firewall rules.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: firewall-rule-id-1
                      protocol: ICMP
                      traffic_type: Ingress
                      ip_source: '::/0'
                      ip_destination: '::/0'
                      port_start: null
                      port_end: null
                      icmp_code: null
                      icmp_type: null
                      status: Active
                      created_at: '2025-06-30T14:35:07.000000Z'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: firewall-rule-id-1
                        protocol: ICMP
                        traffic_type: Ingress
                        ip_source: '::/0'
                        ip_destination: '::/0'
                        port_start: null
                        port_end: null
                        icmp_code: null
                        icmp_type: null
                        status: Active
                        created_at: '2025-06-30T14:35:07.000000Z'
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: firewall-rule-id-1
                        protocol:
                          type: string
                          example: ICMP
                        traffic_type:
                          type: string
                          example: Ingress
                        ip_source:
                          type: string
                          example: '::/0'
                        ip_destination:
                          type: string
                          example: '::/0'
                        port_start:
                          type: string
                          example: null
                        port_end:
                          type: string
                          example: null
                        icmp_code:
                          type: string
                          example: null
                        icmp_type:
                          type: string
                          example: null
                        status:
                          type: string
                          example: Active
                        created_at:
                          type: string
                          example: '2025-06-30T14:35:07.000000Z'
        422:
          description: 'Validation error - Network ID is required.'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The network id field is required.'
                  errors:
                    network_id:
                      - 'The network id field is required.'
                properties:
                  message:
                    type: string
                    example: 'The network id field is required.'
                  errors:
                    type: object
                    properties:
                      network_id:
                        type: array
                        example:
                          - 'The network id field is required.'
                        items:
                          type: string
      tags:
        - Network
    post:
      summary: 'Create IPv6 Firewall Rule'
      operationId: createIPv6FirewallRule
      description: " <aside class=\"notice\">need <small class=\"badge\">network:firewall:ipv6:create</small> ability for api token</aside>\n <p>Creates a new firewall rule for IPv6 traffic on a given network.</p>"
      parameters: []
      responses:
        201:
          description: 'Successful creation of a new IPv6 firewall rule.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    success: true
                properties:
                  data:
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
      tags:
        - Network
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                traffic_type:
                  type: string
                  description: ''
                  example: Egress
                  nullable: false
                  enum:
                    - Ingress
                    - Egress
                protocol_type:
                  type: string
                  description: ''
                  example: UDP
                  nullable: false
                  enum:
                    - TCP
                    - UDP
                    - ICMP
                ip_source:
                  type: string
                  description: ''
                  example: dolores
                  nullable: true
                ip_destination:
                  type: string
                  description: ''
                  example: rerum
                  nullable: true
                port_start:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                port_end:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                icmp_code:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                icmp_type:
                  type: string
                  description: ''
                  example: null
                  nullable: true
              required:
                - traffic_type
                - protocol_type
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
      -
        in: path
        name: networkId
        description: 'The ID of the network to fetch rules for.'
        example: 01H9ZCNF46W6C1EM45T21B6M0G
        required: true
        schema:
          type: ulid
  '/api/zone/{zoneId}/network/{networkId}/firewall/ipv6/{ruleId}':
    delete:
      summary: 'Delete IPv6 Firewall Rule'
      operationId: deleteIPv6FirewallRule
      description: " <aside class=\"notice\">need <small class=\"badge\">network:firewall:ipv6:delete</small> ability for api token</aside>\n <p>Deletes a specific IPv6 firewall rule by its ID.</p>"
      parameters: []
      responses:
        200:
          description: 'Successful deletion.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    success: true
                properties:
                  data:
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
        422:
          description: 'Validation error - Rule ID is required.'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The id field is required.'
                properties:
                  message:
                    type: string
                    example: 'The id field is required.'
      tags:
        - Network
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
      -
        in: path
        name: networkId
        description: 'The ID of the network to fetch rules for.'
        example: 01H9ZCNF46W6C1EM45T21B6M0G
        required: true
        schema:
          type: ulid
      -
        in: path
        name: ruleId
        description: 'The ID of the firewall rule to delete.'
        example: 01H9ZCPF46W6C1EM45T21B6M0H
        required: true
        schema:
          type: ulid
  '/api/zone/{zoneId}/network/service-offering':
    get:
      summary: 'List Network Offering'
      operationId: listNetworkOffering
      description: "  <aside class=\"notice\">need <small class=\"badge\">network:service-offering:list</small> ability for api token</aside>\n  <br>\n  <b>Response fields:</b>\n  <ul>\n    <li><b>id</b>: Unique identifier of the network offering.</li>\n    <li><b>name</b>: Internal name of the network offering.</li>\n    <li><b>displayname</b>: Display name (EN).</li>\n    <li><b>displayname_fa</b>: Display name (FA).</li>\n    <li><b>hourly_started_price</b>: Cost per hour in Toman.</li>\n    <li><b>traffic_transfer_overprice</b>: Price of each extra gigabyte of traffic (Toman).</li>\n    <li><b>traffic_transfer_free_gig</b>: Free network transfer in gigabytes.</li>\n    <li><b>networkrate</b>: Network bandwidth in megabits per second (Mbps).</li>\n    <li><b>type</b>: Network type. <b>Shared</b> (default network), <b>L2</b> (Layer 2 switch network), or <b>Isolated</b> (Layer 3 switch network).</li>\n    <li><b>description</b>: Description of the network offering.</li>\n    <li><b>internet_protocol</b>: Can be <b>DualStack</b> (IPv6 & IPv4) or <b>IPv4</b>.</li>\n  </ul>"
      parameters: []
      responses:
        200:
          description: 'Successful response with a list of network offerings.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 01hyv0camy9nbhpjp1ev5ycjj9
                      name: DefaultL2Network250
                      displayname: DefaultL2Network250
                      displayname_fa: DefaultL2Network250
                      hourly_started_price: 10
                      traffic_transfer_overprice: 0
                      traffic_transfer_plan: 1000
                      networkrate: 250
                      type: L2
                      description: DefaultL2Network250
                      internet_protocol: IPv4
                    -
                      id: 01hyv0chr050jpn247bs4mmws2
                      name: DefaultIsolatedSingle250
                      displayname: DefaultIsolatedSingle250
                      displayname_fa: DefaultIsolatedSingle250
                      hourly_started_price: 10
                      traffic_transfer_overprice: 1
                      traffic_transfer_plan: 1000
                      networkrate: 250
                      type: Isolated
                      description: DefaultIsolatedSingle250
                      internet_protocol: IPv4
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 01hyv0camy9nbhpjp1ev5ycjj9
                        name: DefaultL2Network250
                        displayname: DefaultL2Network250
                        displayname_fa: DefaultL2Network250
                        hourly_started_price: 10
                        traffic_transfer_overprice: 0
                        traffic_transfer_plan: 1000
                        networkrate: 250
                        type: L2
                        description: DefaultL2Network250
                        internet_protocol: IPv4
                      -
                        id: 01hyv0chr050jpn247bs4mmws2
                        name: DefaultIsolatedSingle250
                        displayname: DefaultIsolatedSingle250
                        displayname_fa: DefaultIsolatedSingle250
                        hourly_started_price: 10
                        traffic_transfer_overprice: 1
                        traffic_transfer_plan: 1000
                        networkrate: 250
                        type: Isolated
                        description: DefaultIsolatedSingle250
                        internet_protocol: IPv4
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: 01hyv0camy9nbhpjp1ev5ycjj9
                        name:
                          type: string
                          example: DefaultL2Network250
                        displayname:
                          type: string
                          example: DefaultL2Network250
                        displayname_fa:
                          type: string
                          example: DefaultL2Network250
                        hourly_started_price:
                          type: integer
                          example: 10
                        traffic_transfer_overprice:
                          type: integer
                          example: 0
                        traffic_transfer_plan:
                          type: integer
                          example: 1000
                        networkrate:
                          type: integer
                          example: 250
                        type:
                          type: string
                          example: L2
                        description:
                          type: string
                          example: DefaultL2Network250
                        internet_protocol:
                          type: string
                          example: IPv4
      tags:
        - Network
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
  '/api/zone/{zoneId}/network/{networkId}/port-forward':
    get:
      summary: 'List Port Forward Rules'
      operationId: listPortForwardRules
      description: 'Get a list of port forward rules for a network.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 01jz0pkxe7phb41cchw1hpk6dt
                      instance_ipaddress: 192.168.1.103
                      network_public_ip:
                        id: 01jz0m8znysysxak6vhk8zfy9m
                        network_id: 01jz0m6cwk2m7jz67x5krjwgct
                        ipaddress: 193.246.200.17
                        is_sourcenat: true
                        created_at: '2025-06-30T14:36:21.000000Z'
                        staticnat: []
                      network:
                        id: 01jz0m6cwk2m7jz67x5krjwgct
                        name: test-for-firewall-ipv6
                        status: Implementing
                        ip_config:
                          gateway: 192.168.1.1
                          netmask: 255.255.255.0
                        ip_config_v6:
                          gateway_v6: '2a04:acc0:18:61d8::1'
                          netmask_v6: '2a04:acc0:18:61d8::/64'
                          route_gateway_v6: '2001:470:1f08:a27:1c00:fcff:fe00:75'
                          route_subnet_v6: '2a04:acc0:18:61d8::/64'
                        network_offering:
                          id: 01he2s0n9ywg5yepr7vezjqtkf
                          name: ipv6
                          displayname: 'روتر مجازی با آیپی ورژن ۶'
                          displayname_fa: ipv6
                          hourly_started_price: 10000
                          traffic_transfer_overprice: 1000
                          traffic_transfer_plan: 1
                          networkrate: 250
                          type: Isolated
                          description: ''
                          internet_protocol: DualStack
                      instance:
                        id: 01jz0m8z7ge1m0yqmnjyyvnpn4
                        instance_cs_id: b28049a1-5f13-4950-b6e5-c5c926e10cc9
                        ipaddress: 192.168.1.103
                        ipaddress_v6: '2a04:acc0:18:61d8:0:70ff:fe04:1'
                        macaddress: '02:00:70:04:00:01'
                        is_default: false
                        created_at: '2025-06-30T14:36:20.000000Z'
                        secondary_ips: []
                      protocol: TCP
                      port_start_public: 1
                      port_end_public: 2
                      port_start_private: 1
                      port_end_private: 2
                      status: Active
                      created_at: '2025-06-30T15:17:16.000000Z'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 01jz0pkxe7phb41cchw1hpk6dt
                        instance_ipaddress: 192.168.1.103
                        network_public_ip:
                          id: 01jz0m8znysysxak6vhk8zfy9m
                          network_id: 01jz0m6cwk2m7jz67x5krjwgct
                          ipaddress: 193.246.200.17
                          is_sourcenat: true
                          created_at: '2025-06-30T14:36:21.000000Z'
                          staticnat: []
                        network:
                          id: 01jz0m6cwk2m7jz67x5krjwgct
                          name: test-for-firewall-ipv6
                          status: Implementing
                          ip_config:
                            gateway: 192.168.1.1
                            netmask: 255.255.255.0
                          ip_config_v6:
                            gateway_v6: '2a04:acc0:18:61d8::1'
                            netmask_v6: '2a04:acc0:18:61d8::/64'
                            route_gateway_v6: '2001:470:1f08:a27:1c00:fcff:fe00:75'
                            route_subnet_v6: '2a04:acc0:18:61d8::/64'
                          network_offering:
                            id: 01he2s0n9ywg5yepr7vezjqtkf
                            name: ipv6
                            displayname: 'روتر مجازی با آیپی ورژن ۶'
                            displayname_fa: ipv6
                            hourly_started_price: 10000
                            traffic_transfer_overprice: 1000
                            traffic_transfer_plan: 1
                            networkrate: 250
                            type: Isolated
                            description: ''
                            internet_protocol: DualStack
                        instance:
                          id: 01jz0m8z7ge1m0yqmnjyyvnpn4
                          instance_cs_id: b28049a1-5f13-4950-b6e5-c5c926e10cc9
                          ipaddress: 192.168.1.103
                          ipaddress_v6: '2a04:acc0:18:61d8:0:70ff:fe04:1'
                          macaddress: '02:00:70:04:00:01'
                          is_default: false
                          created_at: '2025-06-30T14:36:20.000000Z'
                          secondary_ips: []
                        protocol: TCP
                        port_start_public: 1
                        port_end_public: 2
                        port_start_private: 1
                        port_end_private: 2
                        status: Active
                        created_at: '2025-06-30T15:17:16.000000Z'
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: 01jz0pkxe7phb41cchw1hpk6dt
                        instance_ipaddress:
                          type: string
                          example: 192.168.1.103
                        network_public_ip:
                          type: object
                          properties:
                            id:
                              type: string
                              example: 01jz0m8znysysxak6vhk8zfy9m
                            network_id:
                              type: string
                              example: 01jz0m6cwk2m7jz67x5krjwgct
                            ipaddress:
                              type: string
                              example: 193.246.200.17
                            is_sourcenat:
                              type: boolean
                              example: true
                            created_at:
                              type: string
                              example: '2025-06-30T14:36:21.000000Z'
                            staticnat:
                              type: array
                              example: []
                        network:
                          type: object
                          properties:
                            id:
                              type: string
                              example: 01jz0m6cwk2m7jz67x5krjwgct
                            name:
                              type: string
                              example: test-for-firewall-ipv6
                            status:
                              type: string
                              example: Implementing
                            ip_config:
                              type: object
                              properties:
                                gateway:
                                  type: string
                                  example: 192.168.1.1
                                netmask:
                                  type: string
                                  example: 255.255.255.0
                            ip_config_v6:
                              type: object
                              properties:
                                gateway_v6:
                                  type: string
                                  example: '2a04:acc0:18:61d8::1'
                                netmask_v6:
                                  type: string
                                  example: '2a04:acc0:18:61d8::/64'
                                route_gateway_v6:
                                  type: string
                                  example: '2001:470:1f08:a27:1c00:fcff:fe00:75'
                                route_subnet_v6:
                                  type: string
                                  example: '2a04:acc0:18:61d8::/64'
                            network_offering:
                              type: object
                              properties:
                                id:
                                  type: string
                                  example: 01he2s0n9ywg5yepr7vezjqtkf
                                name:
                                  type: string
                                  example: ipv6
                                displayname:
                                  type: string
                                  example: 'روتر مجازی با آیپی ورژن ۶'
                                displayname_fa:
                                  type: string
                                  example: ipv6
                                hourly_started_price:
                                  type: integer
                                  example: 10000
                                traffic_transfer_overprice:
                                  type: integer
                                  example: 1000
                                traffic_transfer_plan:
                                  type: integer
                                  example: 1
                                networkrate:
                                  type: integer
                                  example: 250
                                type:
                                  type: string
                                  example: Isolated
                                description:
                                  type: string
                                  example: ''
                                internet_protocol:
                                  type: string
                                  example: DualStack
                        instance:
                          type: object
                          properties:
                            id:
                              type: string
                              example: 01jz0m8z7ge1m0yqmnjyyvnpn4
                            instance_cs_id:
                              type: string
                              example: b28049a1-5f13-4950-b6e5-c5c926e10cc9
                            ipaddress:
                              type: string
                              example: 192.168.1.103
                            ipaddress_v6:
                              type: string
                              example: '2a04:acc0:18:61d8:0:70ff:fe04:1'
                            macaddress:
                              type: string
                              example: '02:00:70:04:00:01'
                            is_default:
                              type: boolean
                              example: false
                            created_at:
                              type: string
                              example: '2025-06-30T14:36:20.000000Z'
                            secondary_ips:
                              type: array
                              example: []
                        protocol:
                          type: string
                          example: TCP
                        port_start_public:
                          type: integer
                          example: 1
                        port_end_public:
                          type: integer
                          example: 2
                        port_start_private:
                          type: integer
                          example: 1
                        port_end_private:
                          type: integer
                          example: 2
                        status:
                          type: string
                          example: Active
                        created_at:
                          type: string
                          example: '2025-06-30T15:17:16.000000Z'
      tags:
        - Network
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                public_ip_id:
                  type: string
                  description: 'The public IP ULID to filter by (optional).'
                  example: totam
                  nullable: false
              required:
                - public_ip_id
    post:
      summary: 'Add Port Forward Rule'
      operationId: addPortForwardRule
      description: 'Add a new port forward rule to a network.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  data:
                    rule_id: 01HZYKJ8QK8ZJ6K8J6K8J6K8J6
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      rule_id:
                        type: string
                        example: 01HZYKJ8QK8ZJ6K8J6K8J6K8J6
      tags:
        - Network
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                network_id:
                  type: string
                  description: ''
                  example: ea
                  nullable: false
                public_ip_id:
                  type: string
                  description: 'The public IP ULID.'
                  example: 01HZYKJ8QK8ZJ6K8J6K8J6K8J6
                  nullable: false
                protocol_type:
                  type: string
                  description: 'The protocol type (TCP or UDP).'
                  example: TCP
                  nullable: false
                instance_cs_id:
                  type: string
                  description: 'The instance UUID.'
                  example: 123e4567-e89b-12d3-a456-426614174000
                  nullable: false
                port_start_public:
                  type: integer
                  description: 'The starting public port.'
                  example: 8080
                  nullable: false
                port_start_private:
                  type: integer
                  description: 'The starting private port.'
                  example: 80
                  nullable: false
                port_end_public:
                  type: integer
                  description: 'The ending public port (optional).'
                  example: 15
                  nullable: false
                port_end_private:
                  type: integer
                  description: 'The ending private port (optional).'
                  example: 1
                  nullable: false
                instance_network_secondary_ip_id:
                  type: string
                  description: 'The secondary IP ULID (optional).'
                  example: iure
                  nullable: false
              required:
                - network_id
                - public_ip_id
                - protocol_type
                - instance_cs_id
                - port_start_public
                - port_start_private
                - port_end_public
                - port_end_private
                - instance_network_secondary_ip_id
    parameters:
      -
        in: path
        name: zoneId
        description: 'The zone ULID.'
        example: 01HZYKJ8QK8ZJ6K8J6K8J6K8J6
        required: true
        schema:
          type: string
      -
        in: path
        name: networkId
        description: 'The network ULID.'
        example: 01HZYKJ8QK8ZJ6K8J6K8J6K8J6
        required: true
        schema:
          type: string
  '/api/zone/{zoneId}/network/{networkId}/port-forward/{portforwardId}':
    delete:
      summary: 'Delete Port Forward Rule'
      operationId: deletePortForwardRule
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    success: true
                properties:
                  data:
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
      tags:
        - Network
    parameters:
      -
        in: path
        name: zoneId
        description: 'The zone ULID.'
        example: 01HZYKJ8QK8ZJ6K8J6K8J6K8J6
        required: true
        schema:
          type: string
      -
        in: path
        name: networkId
        description: 'The network ULID.'
        example: 01HZYKJ8QK8ZJ6K8J6K8J6K8J6
        required: true
        schema:
          type: string
      -
        in: path
        name: portforwardId
        description: 'The port forward rule ULID.'
        example: 01HZYKJ8QK8ZJ6K8J6K8J6K8J6
        required: true
        schema:
          type: string
  '/api/zone/{zoneId}/network/l2':
    post:
      summary: 'Create L2 Network'
      operationId: createL2Network
      description: "  <aside class=\"notice\">Requires appropriate <small class=\"badge\">network:l2:create</small> ability for API token</aside>\n  <p>Creates a new Layer 2 (L2) network in the specified zone. For <code>network_offering_id</code>, use the ID of a service offering with type <code>L2</code>.<br><br>\n  <b>Note:</b> This function runs asynchronously in the background. The response will be:<br>\n  <pre>{\n    \"data\": {\n        \"success\": true\n    }\n  }</pre>\n  To check the status of the created network, use the <b>List Networks</b> endpoint and review the <code>status</code> field.\n  </p>"
      parameters: []
      responses:
        201:
          description: 'Successful creation of L2 network.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: network-id
                    name: my-l2-network
                    zone_id: 01F8MECHZX3TBDSZ7XRADM79XE
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: network-id
                      name:
                        type: string
                        example: my-l2-network
                      zone_id:
                        type: string
                        example: 01F8MECHZX3TBDSZ7XRADM79XE
        422:
          description: 'Validation error - Network offering ID is required.'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The network offering id field is required.'
                  errors:
                    network_offering_id:
                      - 'The network offering id field is required.'
                properties:
                  message:
                    type: string
                    example: 'The network offering id field is required.'
                  errors:
                    type: object
                    properties:
                      network_offering_id:
                        type: array
                        example:
                          - 'The network offering id field is required.'
                        items:
                          type: string
      tags:
        - Network
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                network_offering_id:
                  type: ulid
                  description: 'The ID of the network offering.'
                  example: 01H9ZCNF46W6C1EM45T21B6M0G
                  nullable: false
                name:
                  type: string
                  description: 'The name of the network.'
                  example: my-l2-network
                  nullable: false
                account_id:
                  type: uuid
                  description: 'The account ID.'
                  example: b3b6c7d8-e9f0-1234-5678-abcdefabcdef
                  nullable: false
              required:
                - network_offering_id
                - name
                - account_id
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
  '/api/zone/{zoneId}/network/l3':
    post:
      summary: 'Create L3 Network'
      operationId: createL3Network
      description: "  <aside class=\"notice\">Requires appropriate <small class=\"badge\">network:l3:create</small> ability for API token</aside>\n  <p>Creates a new Layer 3 (L3) network in the specified zone. For <code>network_offering_id</code>, use the ID of a service offering with type <code>Isolated</code>.<br><br>\n  <b>Note:</b> This function runs asynchronously in the background. The response will be:<br>\n  <pre>{\n    \"data\": {\n        \"success\": true\n    }\n  }</pre>\n  To check the status of the created network, use the <b>List Networks</b> endpoint and review the <code>status</code> field.\n  </p>"
      parameters: []
      responses:
        200:
          description: 'Accepted for async processing. Use List Networks to check status.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    success: true
                properties:
                  data:
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
        422:
          description: 'Validation error - Gateway is required.'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The getaway field is required.'
                  errors:
                    getaway:
                      - 'The getaway field is required.'
                properties:
                  message:
                    type: string
                    example: 'The getaway field is required.'
                  errors:
                    type: object
                    properties:
                      getaway:
                        type: array
                        example:
                          - 'The getaway field is required.'
                        items:
                          type: string
      tags:
        - Network
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                network_offering_id:
                  type: ulid
                  description: 'The ID of the network offering.'
                  example: 01H9ZCNF46W6C1EM45T21B6M0G
                  nullable: false
                name:
                  type: string
                  description: 'The name of the network.'
                  example: my-l3-network
                  nullable: false
                getaway:
                  type: ipv4
                  description: 'The gateway IP address.'
                  example: 192.168.1.1
                  nullable: false
                netmask:
                  type: ipv4
                  description: 'The netmask for the network.'
                  example: 255.255.255.0
                  nullable: false
              required:
                - network_offering_id
                - name
                - getaway
                - netmask
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
  '/api/zone/{zoneId}/network':
    get:
      summary: 'List Networks'
      operationId: listNetworks
      description: "  <aside class=\"notice\">Requires appropriate <small class=\"badge\">network:list</small> ability for API token</aside>\n  <p>Retrieves a list of all networks in the specified zone for the authenticated customer.</p>"
      parameters: []
      responses:
        200:
          description: 'Successful response with network list.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 01hyyz3eabcd9r25m5aysqjm21
                      cs_id: b1f170d3-4ae3-448d-9e4c-2f842867e99d
                      name: INTERNET-DEV001
                      status: Implemented
                      ip_config: []
                      ip_config_v6: []
                      network_offering:
                        id: 01hyv0c4fptdfx3vmjdnzerg93
                        name: DefaultSharedNetworkOffering
                        displayname: DefaultSharedNetworkOffering
                        displayname_fa: DefaultSharedNetworkOffering
                        hourly_started_price: 0
                        traffic_transfer_overprice: 0
                        traffic_transfer_plan: 1000
                        networkrate: 200
                        type: Shared
                        description: ''
                        internet_protocol: IPv4
                      instance_network: []
                    -
                      id: 01jwk5mfxyz3x00bsqv615hec8
                      cs_id: 9d374e5d-e344-40e8-86d8-9831ee361beb
                      name: network-demo-2025-06-29-12-00
                      status: Implemented
                      ip_config:
                        gateway: 10.0.0.1
                        netmask: 255.255.255.0
                      ip_config_v6:
                        gateway_v6: null
                        netmask_v6: null
                        route_gateway_v6: null
                        route_subnet_v6: null
                      network_offering:
                        id: 01hyv0chr050jpn247bs4mmws3
                        name: DefaultIsolatedSingle250
                        displayname: DefaultIsolatedSingle250
                        displayname_fa: DefaultIsolatedSingle250
                        hourly_started_price: 10
                        traffic_transfer_overprice: 1
                        traffic_transfer_plan: 1000
                        networkrate: 250
                        type: Isolated
                        description: DefaultIsolatedSingle250
                        internet_protocol: IPv4
                      instance_network:
                        -
                          id: 01jwk8kvhknpghxaga3rjk8e2w
                          instance_cs_id: 96657132-358e-4806-a26d-768867fda35e
                          ipaddress: 10.0.0.52
                          ipaddress_v6: null
                          macaddress: '02:01:04:5e:00:04'
                          is_default: true
                          created_at: '2025-06-29T09:00:00.000000Z'
                          secondary_ips: []
                        -
                          id: 01jwk8kvj3njcx1mr5x64c1ne3
                          instance_cs_id: 994800f7-5510-41c4-8d8a-15ab30866113
                          ipaddress: 10.0.0.253
                          ipaddress_v6: null
                          macaddress: '02:01:04:5e:00:05'
                          is_default: true
                          created_at: '2025-06-29T09:00:00.000000Z'
                          secondary_ips: []
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 01hyyz3eabcd9r25m5aysqjm21
                        cs_id: b1f170d3-4ae3-448d-9e4c-2f842867e99d
                        name: INTERNET-DEV001
                        status: Implemented
                        ip_config: []
                        ip_config_v6: []
                        network_offering:
                          id: 01hyv0c4fptdfx3vmjdnzerg93
                          name: DefaultSharedNetworkOffering
                          displayname: DefaultSharedNetworkOffering
                          displayname_fa: DefaultSharedNetworkOffering
                          hourly_started_price: 0
                          traffic_transfer_overprice: 0
                          traffic_transfer_plan: 1000
                          networkrate: 200
                          type: Shared
                          description: ''
                          internet_protocol: IPv4
                        instance_network: []
                      -
                        id: 01jwk5mfxyz3x00bsqv615hec8
                        cs_id: 9d374e5d-e344-40e8-86d8-9831ee361beb
                        name: network-demo-2025-06-29-12-00
                        status: Implemented
                        ip_config:
                          gateway: 10.0.0.1
                          netmask: 255.255.255.0
                        ip_config_v6:
                          gateway_v6: null
                          netmask_v6: null
                          route_gateway_v6: null
                          route_subnet_v6: null
                        network_offering:
                          id: 01hyv0chr050jpn247bs4mmws3
                          name: DefaultIsolatedSingle250
                          displayname: DefaultIsolatedSingle250
                          displayname_fa: DefaultIsolatedSingle250
                          hourly_started_price: 10
                          traffic_transfer_overprice: 1
                          traffic_transfer_plan: 1000
                          networkrate: 250
                          type: Isolated
                          description: DefaultIsolatedSingle250
                          internet_protocol: IPv4
                        instance_network:
                          -
                            id: 01jwk8kvhknpghxaga3rjk8e2w
                            instance_cs_id: 96657132-358e-4806-a26d-768867fda35e
                            ipaddress: 10.0.0.52
                            ipaddress_v6: null
                            macaddress: '02:01:04:5e:00:04'
                            is_default: true
                            created_at: '2025-06-29T09:00:00.000000Z'
                            secondary_ips: []
                          -
                            id: 01jwk8kvj3njcx1mr5x64c1ne3
                            instance_cs_id: 994800f7-5510-41c4-8d8a-15ab30866113
                            ipaddress: 10.0.0.253
                            ipaddress_v6: null
                            macaddress: '02:01:04:5e:00:05'
                            is_default: true
                            created_at: '2025-06-29T09:00:00.000000Z'
                            secondary_ips: []
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: 01hyyz3eabcd9r25m5aysqjm21
                        cs_id:
                          type: string
                          example: b1f170d3-4ae3-448d-9e4c-2f842867e99d
                        name:
                          type: string
                          example: INTERNET-DEV001
                        status:
                          type: string
                          example: Implemented
                        ip_config:
                          type: array
                          example: []
                        ip_config_v6:
                          type: array
                          example: []
                        network_offering:
                          type: object
                          properties:
                            id:
                              type: string
                              example: 01hyv0c4fptdfx3vmjdnzerg93
                            name:
                              type: string
                              example: DefaultSharedNetworkOffering
                            displayname:
                              type: string
                              example: DefaultSharedNetworkOffering
                            displayname_fa:
                              type: string
                              example: DefaultSharedNetworkOffering
                            hourly_started_price:
                              type: integer
                              example: 0
                            traffic_transfer_overprice:
                              type: integer
                              example: 0
                            traffic_transfer_plan:
                              type: integer
                              example: 1000
                            networkrate:
                              type: integer
                              example: 200
                            type:
                              type: string
                              example: Shared
                            description:
                              type: string
                              example: ''
                            internet_protocol:
                              type: string
                              example: IPv4
                        instance_network:
                          type: array
                          example: []
      tags:
        - Network
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
  '/api/zone/{zoneId}/network/{networkId}':
    get:
      summary: 'Show Network'
      operationId: showNetwork
      description: "  <aside class=\"notice\">Requires appropriate <small class=\"badge\">network:show</small> ability for API token</aside>\n  <p>Retrieves details of a specific network by its ID in the specified zone.</p>"
      parameters: []
      responses:
        200:
          description: 'Successful response with network details.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 01jyxqvs2k3scsyd0apks5a3jg
                    name: amin-created-from-public-api
                    status: Allocated
                    ip_config:
                      gateway: 192.168.1.1
                      netmask: 255.255.255.0
                    ip_config_v6:
                      gateway_v6: null
                      netmask_v6: null
                      route_gateway_v6: null
                      route_subnet_v6: null
                    network_offering:
                      id: 01hyv0chr050jpn247bs4mmws2
                      name: DefaultIsolatedSingle250
                      displayname: DefaultIsolatedSingle250
                      displayname_fa: DefaultIsolatedSingle250
                      hourly_started_price: 10
                      traffic_transfer_overprice: 1
                      traffic_transfer_plan: 1000
                      networkrate: 250
                      type: Isolated
                      description: DefaultIsolatedSingle250
                      internet_protocol: IPv4
                    instance_network: []
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 01jyxqvs2k3scsyd0apks5a3jg
                      name:
                        type: string
                        example: amin-created-from-public-api
                      status:
                        type: string
                        example: Allocated
                      ip_config:
                        type: object
                        properties:
                          gateway:
                            type: string
                            example: 192.168.1.1
                          netmask:
                            type: string
                            example: 255.255.255.0
                      ip_config_v6:
                        type: object
                        properties:
                          gateway_v6:
                            type: string
                            example: null
                          netmask_v6:
                            type: string
                            example: null
                          route_gateway_v6:
                            type: string
                            example: null
                          route_subnet_v6:
                            type: string
                            example: null
                      network_offering:
                        type: object
                        properties:
                          id:
                            type: string
                            example: 01hyv0chr050jpn247bs4mmws2
                          name:
                            type: string
                            example: DefaultIsolatedSingle250
                          displayname:
                            type: string
                            example: DefaultIsolatedSingle250
                          displayname_fa:
                            type: string
                            example: DefaultIsolatedSingle250
                          hourly_started_price:
                            type: integer
                            example: 10
                          traffic_transfer_overprice:
                            type: integer
                            example: 1
                          traffic_transfer_plan:
                            type: integer
                            example: 1000
                          networkrate:
                            type: integer
                            example: 250
                          type:
                            type: string
                            example: Isolated
                          description:
                            type: string
                            example: DefaultIsolatedSingle250
                          internet_protocol:
                            type: string
                            example: IPv4
                      instance_network:
                        type: array
                        example: []
      tags:
        - Network
    delete:
      summary: 'Delete Network'
      operationId: deleteNetwork
      description: "  <aside class=\"notice\">Requires appropriate <small class=\"badge\">network:delete</small> ability for API token</aside>\n  <p>Deletes a specific network by its ID in the specified zone.</p>"
      parameters: []
      responses:
        200:
          description: 'Successful deletion.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    success: true
                properties:
                  data:
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
      tags:
        - Network
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
      -
        in: path
        name: networkId
        description: 'The ID of the network.'
        example: 01H9ZCNF46W6C1EM45T21B6M0G
        required: true
        schema:
          type: ulid
  '/api/zone/{zoneId}/object-storage/buckets':
    get:
      summary: Index
      operationId: index
      description: ' <aside class="notice">need <small class="badge">object_storage:bucket:list</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Successful response'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: string
                      name: string
                      url: string
                      access_key: string|null
                      secret_key: string|null
                      status: string
                      policy: string
                      size: integer
                      created_at: integer
                      updated_at: integer
                      tier: string|null
                      is_failed: boolean
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: string
                        name: string
                        url: string
                        access_key: string|null
                        secret_key: string|null
                        status: string
                        policy: string
                        size: integer
                        created_at: integer
                        updated_at: integer
                        tier: string|null
                        is_failed: boolean
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: string
                        name:
                          type: string
                          example: string
                        url:
                          type: string
                          example: string
                        access_key:
                          type: string
                          example: string|null
                        secret_key:
                          type: string
                          example: string|null
                        status:
                          type: string
                          example: string
                        policy:
                          type: string
                          example: string
                        size:
                          type: string
                          example: integer
                        created_at:
                          type: string
                          example: integer
                        updated_at:
                          type: string
                          example: integer
                        tier:
                          type: string
                          example: string|null
                        is_failed:
                          type: string
                          example: boolean
      tags:
        - 'Object Storage'
    post:
      summary: 'Create (Async)'
      operationId: createAsync
      description: "  <aside class=\"notice\">need <small class=\"badge\">object_storage:bucket:create</small> ability for api token</aside>\n  <br><b>Note:</b> This endpoint works asynchronously. To check the result, use the bucket list endpoint to see the status of your bucket."
      parameters: []
      responses:
        201:
          description: 'Bucket creation request accepted. Operation is asynchronous; check the bucket list for status.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    success: true
                properties:
                  data:
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
        422:
          description: 'The name field is required.'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The name field is required.'
                  errors:
                    name:
                      - 'The name field is required.'
                properties:
                  message:
                    type: string
                    example: 'The name field is required.'
                  errors:
                    type: object
                    properties:
                      name:
                        type: array
                        example:
                          - 'The name field is required.'
                        items:
                          type: string
      tags:
        - 'Object Storage'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the bucket to be created. Must not be greater than 255 characters.'
                  example: my-new-bucket
                  nullable: false
                policy:
                  type: string
                  description: 'The access policy for the bucket (Private or Public).'
                  example: Private
                  nullable: false
                  enum:
                    - Private
                    - Public
              required:
                - name
                - policy
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: string
  '/api/zone/{zoneId}/object-storage/buckets/{bucketId}':
    get:
      summary: Show
      operationId: show
      description: ' <aside class="notice">need <small class="badge">object_storage:bucket:show</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Successful response'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: string
                    name: string
                    url: string
                    access_key: string|null
                    secret_key: string|null
                    status: string
                    policy: string
                    size: integer
                    created_at: integer
                    updated_at: integer
                    tier: string|null
                    is_failed: boolean
                    message: string|null
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: string
                      name:
                        type: string
                        example: string
                      url:
                        type: string
                        example: string
                      access_key:
                        type: string
                        example: string|null
                      secret_key:
                        type: string
                        example: string|null
                      status:
                        type: string
                        example: string
                      policy:
                        type: string
                        example: string
                      size:
                        type: string
                        example: integer
                      created_at:
                        type: string
                        example: integer
                      updated_at:
                        type: string
                        example: integer
                      tier:
                        type: string
                        example: string|null
                      is_failed:
                        type: string
                        example: boolean
                      message:
                        type: string
                        example: string|null
      tags:
        - 'Object Storage'
    put:
      summary: 'Update (Async)'
      operationId: updateAsync
      description: "  <aside class=\"notice\">need <small class=\"badge\">object_storage:bucket:update</small> ability for api token</aside>\n  <br><b>Note:</b> This endpoint works asynchronously. After calling this endpoint, the bucket will be in the <code>Updating</code> status. Shortly after, the status will change to <code>Active</code> once the update is complete. Use the bucket list or show endpoint to check the current status."
      parameters: []
      responses:
        200:
          description: 'Bucket update request accepted. Operation is asynchronous; check the bucket list or show endpoint for status.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: string
                    name: string
                    url: string
                    access_key: string|null
                    secret_key: string|null
                    status: string
                    policy: string
                    size: integer
                    created_at: integer
                    updated_at: integer
                    tier: string|null
                    is_failed: boolean
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: string
                      name:
                        type: string
                        example: string
                      url:
                        type: string
                        example: string
                      access_key:
                        type: string
                        example: string|null
                      secret_key:
                        type: string
                        example: string|null
                      status:
                        type: string
                        example: string
                      policy:
                        type: string
                        example: string
                      size:
                        type: string
                        example: integer
                      created_at:
                        type: string
                        example: integer
                      updated_at:
                        type: string
                        example: integer
                      tier:
                        type: string
                        example: string|null
                      is_failed:
                        type: string
                        example: boolean
        422:
          description: 'The policy field is required.'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The policy field is required.'
                  errors:
                    policy:
                      - 'The policy field is required.'
                properties:
                  message:
                    type: string
                    example: 'The policy field is required.'
                  errors:
                    type: object
                    properties:
                      policy:
                        type: array
                        example:
                          - 'The policy field is required.'
                        items:
                          type: string
      tags:
        - 'Object Storage'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                policy:
                  type: string
                  description: 'The new access policy for the bucket (Private or Public).'
                  example: Public
                  nullable: false
                  enum:
                    - Private
                    - Public
              required:
                - policy
    delete:
      summary: Delete
      operationId: delete
      description: ' <aside class="notice">need <small class="badge">object_storage:bucket:delete</small> ability for api token</aside>'
      parameters: []
      responses:
        204:
          description: 'Successful response'
      tags:
        - 'Object Storage'
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
      -
        in: path
        name: bucketId
        description: 'The ID of the bucket.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
  '/api/zone/{zoneId}/object-storage/buckets/{bucketId}/events':
    get:
      summary: Events
      operationId: events
      description: ' <aside class="notice">need <small class="badge">object_storage:event:list</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Success Response'
          content:
            text/plain:
              schema:
                type: string
                example: "{\n        \"data\": [\n            {\n                \"product_model\": \"App\\Models\\Bucket\",\n                \"product_id\": \"01F8MECHZX3TBDSZ7XRADM79XE\",\n                \"product_source\": \"k8s\",\n                \"type\": \"customer\",\n                \"content\": \"A bucket cluster event occurred.\",\n                \"created_at\": 1739256828\n            },\n        ],\n        \"meta\": {\n            \"current_page\": 1,\n            \"from\": 1,\n            \"last_page\": 10,\n            \"per_page\": 20,\n            \"to\": 20,\n            \"total\": 200\n        }\n}"
      tags:
        - 'Object Storage'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: 'The type of events to filter'
                  example: system
                  nullable: false
                from:
                  type: integer
                  description: 'The timestamp to start filtering events from'
                  example: 1707653422
                  nullable: false
                to:
                  type: integer
                  description: 'The timestamp to end filtering events'
                  example: 1707653999
                  nullable: false
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
      -
        in: path
        name: bucketId
        description: 'The ID of the bucket.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
tags:
  -
    name: DNS
    description: "\n<div class='sl-prose'>\n<p>A DNS Domain (or DNS Zone) is a distinct part of the domain namespace for which administrative responsibility has been delegated. Think of it as a container for DNS records for a specific domain and its subdomains (if any). Managing a DNS Domain involves creating, updating, and deleting DNS records within that domain.</p>\n\n<p><b>Key Concepts:</b></p>\n<ul>\n   <li><b>Domain:</b> A portion of the DNS namespace (e.g., example.com) that is managed as a single unit. A domain contains all the DNS records for that domain name and potentially its subdomains. This is also commonly referred to as a \"zone\".</li>\n   <li><b>Domain Name:</b> The domain name associated with the DNS Domain (e.g., example.com).</li>\n   <li><b>Status:</b> The current status of the DNS Domain (e.g., 'Active', 'Pending', 'Error').</li>\n   <li><b>DNS Info:</b> Information about the DNS servers responsible for the domain. This often includes:\n      <ul>\n         <li><b>virak_dns:</b> The nameservers provided by the service (e.g., ns1.virak.cloud, ns2.virak.cloud). These are the nameservers you should point your domain to at your registrar.</li>\n<li><b>domain_dns:</b> The current nameservers configured for the domain (as detected by the system). This might be different from `virak_dns` if the domain hasn't been pointed to our nameservers yet, or if the change hasn't fully propagated.</li>\n      </ul>\n   </li>\n   <li><b>TLD (Top-Level Domain):</b> The last part of a domain name (e.g., .com, .org, .net). Valid TLDs are required when creating a DNS Domain.</li>\n</ul>\n\n\n<p><b>Domain Management</b></p>\n<p>This API allows you to manage DNS Domains. You can create, list, retrieve details about, and delete domains. When you create a domain, you'll receive the `virak_dns` nameservers. You'll need to update your domain's nameserver settings at your domain registrar to point to these nameservers. This delegates authority for your domain's DNS to our service.</p>\n</div>"
  -
    name: Endpoints
    description: ''
  -
    name: 'Event Management'
    description: "\nAPIs for managing customer events"
  -
    name: Instance
    description: "\n<div class='sl-prose'>\n<p>An <b>Instance</b> represents a virtual machine (VM) or compute resource provisioned in a specific zone. Instances are the core compute units in the cloud platform, allowing users to run applications, host services, and manage workloads. Each instance is created from a template or image, has its own resources (CPU, memory, disk), and can be managed through various lifecycle operations.</p>\n\n<p><b>Key Concepts:</b></p>\n<ul>\n   <li><b>Instance:</b> A virtual machine or compute resource, including its configuration, status, and metadata.</li>\n   <li><b>Zone:</b> A physical or logical location where instances are provisioned. Each instance belongs to a zone.</li>\n   <li><b>VM Image:</b> The template or image used to create the instance, defining its operating system and base software.</li>\n   <li><b>Service Offering:</b> Defines the hardware resources (CPU, memory, disk, network) allocated to the instance.</li>\n   <li><b>Volume:</b> Persistent storage that can be attached to or detached from an instance.</li>\n   <li><b>Snapshot:</b> A point-in-time backup of an instance's volume, which can be created, deleted, or reverted.</li>\n   <li><b>Status:</b> The current state of the instance (e.g., 'Running', 'Stopped', 'Starting', 'Stopping', 'Error').</li>\n   <li><b>Metadata:</b> Custom key-value data associated with the instance.</li>\n</ul>\n\n<p><b>Instance Functionalities:</b></p>\n<ul>\n   <li>List all instances in a zone for the authenticated user.</li>\n   <li>Create, delete, and manage snapshots for instances.</li>\n   <li>Attach, detach, create, and delete volumes for instances.</li>\n   <li>Retrieve detailed information about each instance, including configuration, status, and related resources.</li>\n</ul>\n\n<p><b>Instance Statuses:</b></p>\n<ul>\n   <li><b>Running:</b> Instance is active and operational.</li>\n   <li><b>Stopped:</b> Instance is powered off.</li>\n   <li><b>Starting:</b> Instance is in the process of starting up.</li>\n   <li><b>Stopping:</b> Instance is in the process of shutting down.</li>\n   <li><b>Error:</b> Instance encountered an error during an operation.</li>\n</ul>\n</div>"
  -
    name: Kubernetes
    description: "\n<div class=\"sl-prose\">\n<p>Kubernetes is an open-source platform designed for managing containerized workloads and services.  It provides a powerful and flexible way to deploy, scale, and manage applications across a cluster of machines. Think of it as an operating system for your cloud-native applications.</p>\n\n<p><b>Key Concepts:</b></p>\n<ul>\n   <li><b>Containers:</b>  Applications are packaged into containers, which are lightweight, standalone, and executable packages that include everything needed to run a piece of software (code, runtime, system tools, libraries, settings).</li>\n   <li><b>Nodes:</b>  A Kubernetes cluster consists of a set of worker machines, called nodes, that run containerized applications.  Every cluster has at least one worker node.</li>\n   <li><b>Control Plane:</b> The control plane manages the worker nodes and the Pods in the cluster. In production environments, the control plane usually runs across multiple computers and a cluster usually runs multiple nodes, providing fault-tolerance and high availability.</li>\n   <li><b>Pods:</b>  Pods are the smallest deployable units of computing that you can create and manage in Kubernetes. A Pod (as in a pod of whales or pea pod) is a group of one or more containers, with shared storage/network resources, and a specification for how to run the containers.</li>\n</ul>\n\n<p><b>Cluster Statuses:</b></p>\n<p>Each cluster can be in one of the following statuses, indicating its current operational state:</p>\n<ul>\n   <li><b>Pending:</b> The cluster is being created and is not yet ready for use.</li>\n   <li><b>Deleting:</b> The cluster is in the process of being deleted.</li>\n   <li><b>Deleted:</b> The cluster has been successfully deleted.</li>\n   <li><b>Started:</b> The cluster is running and ready to accept workloads.</li>\n   <li><b>Stopped:</b> The cluster has been stopped and is not currently running.</li>\n   <li><b>Failed:</b> An error occurred in the cluster, and it is not operational.</li>\n   <li><b>Alert:</b>  An issue has been detected with the cluster that requires attention.</li>\n   <li><b>Stopping:</b> The cluster is in the process of being stopped.</li>\n   <li><b>Starting:</b> The cluster is in the process of starting up.</li>\n   <li><b>Running:</b>  The cluster is operational and running normally.</li>\n   <li><b>Upgrading:</b> The cluster's Kubernetes version is being upgraded.</li>\n   <li><b>Scaling:</b> The number of nodes in the cluster is being adjusted.</li>\n   <li><b>UpdateServiceOffering:</b> The service offering (e.g., hardware configuration) of the cluster is being changed.</li>\n    <li><b>Suspend:</b> The cluster is in suspend state.</li>\n    <li><b>Suspending:</b> The cluster is in suspending process.</li>\n    <li><b>UnSuspending:</b> The cluster is in UnSuspending process.</li>\n</ul>\n</div>"
  -
    name: Network
    description: "\n<div class=\"sl-prose\">\n<p>The Firewall API provides a way to manage and enforce network security rules for your infrastructure. It allows you to control the flow of incoming (ingress) and outgoing (egress) traffic based on IP addresses, protocols, and ports.</p>\n\n<p><b>Key Concepts:</b></p>\n<ul>\n<li><b>Firewall Rule:</b> A specific directive that allows or denies traffic. Each rule targets a specific protocol and can define source/destination IPs and port ranges.</li>\n<li><b>Traffic Type:</b>\n<ul>\n<li><b>Ingress:</b> Traffic coming into your network.</li>\n<li><b>Egress:</b> Traffic going out from your network.</li>\n</ul>\n</li>\n<li><b>Protocol:</b> The network protocol the rule applies to. Common protocols include:\n<ul>\n<li><b>TCP (Transmission Control Protocol):</b> Used for reliable, ordered, and error-checked delivery of a stream of octets (e.g., web browsing, email).</li>\n<li><b>UDP (User Datagram Protocol):</b> A simpler, connectionless protocol used when speed is prioritized over reliability (e.g., video streaming, DNS).</li>\n<li><b>ICMP (Internet Control Message Protocol):</b> Used by network devices to send error messages and operational information (e.g., ping).</li>\n</ul>\n</li>\n<li><b>CIDR (Classless Inter-Domain Routing):</b> A method for allocating IP addresses and for IP routing. It's used to specify a range of IP addresses (e.g., <code>192.168.1.0/24</code>). Use <code>0.0.0.0/0</code> for all IPv4 addresses.</li>\n</ul>\n</div>"
  -
    name: 'Object Storage'
    description: "\n<div class='sl-prose'>\n<p>Object storage is a data storage architecture that manages data as objects, as opposed to other storage architectures like file systems which manage data as a file hierarchy, and block storage which manages data as blocks within sectors and tracks.  Each object typically includes the data itself, a variable amount of metadata, and a globally unique identifier.</p>\n\n<p><b>Key Concepts:</b></p>\n<ul>\n   <li><b>Buckets:</b>  Buckets are containers for storing objects.  A bucket is similar to a folder in a file system, except that buckets cannot be nested.</li>\n   <li><b>Objects:</b> Objects are the fundamental entities stored in object storage.  An object consists of data (any sequence of bytes) and metadata (information about the object, such as its name, size, and content type).</li>\n   <li><b>Access Keys & Secret Keys:</b>  Object storage is typically accessed using an access key and a secret key, which are similar to a username and password. These keys are used to authenticate requests to the object storage service.</li>\n   <li><b>Policies:</b> Bucket policies define who has access to a bucket and what actions they can perform. Common policies include \"Private\" (only the owner has access) and \"Public Read\" (anyone can read the objects in the bucket).</li>\n   <li><b>URL:</b> Each bucket has url.</li>\n   <li><b>Status:</b> The current status of the bucket (e.g., 'Active', 'Creating', 'Deleting', 'Failed').</li>\n   <li><b>Tier:</b> storage tier (e.g., 'Standard', 'Infrequent Access', 'Archive').</li>\n</ul>\n<p><b>Bucket Statuses:</b></p>\n<ul>\n   <li><b>Active:</b> Bucket is ready.</li>\n   <li><b>Creating:</b> Bucket is creating.</li>\n   <li><b>Deleting:</b> Bucket is deleting.</li>\n   <li><b>Failed:</b> Bucket creation failed.</li>\n</ul>\n</div>"
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: 'You can retrieve your token by visiting your dashboard and clicking <b>Generate API token</b>.'
security:
  -
    default: []
