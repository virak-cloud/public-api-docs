openapi: 3.0.3
info:
  title: 'Virak Cloud API'
  description: "<P>\n    Welcome to the Virak Cloud API documentation.\n    Virak Cloud API is a comprehensive RESTful API that empowers developers to programmatically manage and interact with cloud infrastructure resources.\n    This API provides secure, scalable endpoints for managing virtual instances, networks, Kubernetes clusters, object storage, DNS records, and more. Built with enterprise-grade security and reliability, the Virak Cloud API enables seamless automation and integration with your existing workflows and applications.\n    <p>For detailed guides and advanced documentation, visit the <a href=\"https://docs.virakcloud.com/fa/guides/\" target=\"_blank\">VirakCloud Documentation</a>.</p>\n    <a href=\"https://github.com/virak-cloud/public-api-docs\"> <img src=\"https://img.shields.io/badge/github-%23181717.svg?&style=for-the-badge&logo=github&logoColor=white\" alt=\"github icon\" title=\"github icon\"></a>\n</P>"
  version: 1.0.0
servers:
  -
    url: 'https://public-api.virakcloud.com'
paths:
  /zones:
    get:
      summary: 'Zone List'
      operationId: zoneList
      description: ' <aside class="notice">need <small class="badge">zone:list</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Successful response'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: string
                      name: string
                      location: string
                      active: true
                    -
                      id: string
                      name: string
                      location: string
                      active: true
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: string
                        name: string
                        location: string
                        active: true
                      -
                        id: string
                        name: string
                        location: string
                        active: true
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: string
                        name:
                          type: string
                          example: string
                        location:
                          type: string
                          example: string
                        active:
                          type: boolean
                          example: true
      tags:
        - Datacenter
  '/zone/{zoneId}':
    get:
      summary: 'Zone Active Services'
      operationId: zoneActiveServices
      description: ' <aside class="notice">need <small class="badge">zone:show</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Successful response'
          content:
            application/json:
              schema:
                type: object
                example:
                  Instance: true
                  DataVolume: true
                  Network: true
                  ObjectStorage: true
                  K8s: false
                properties:
                  Instance:
                    type: boolean
                    example: true
                  DataVolume:
                    type: boolean
                    example: true
                  Network:
                    type: boolean
                    example: true
                  ObjectStorage:
                    type: boolean
                    example: true
                  K8s:
                    type: boolean
                    example: false
      tags:
        - Datacenter
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: string
  '/zone/{zoneId}/resources':
    get:
      summary: 'Customer Resource'
      operationId: customerResource
      description: ' <aside class="notice">need <small class="badge">zone:resource:list</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Successful response'
          content:
            application/json:
              schema:
                type: object
                example:
                  instance_resource_collected:
                    memory:
                      collected: 0
                      total: 40960
                    cpunumber:
                      collected: 0
                      total: 40
                    datavolume:
                      collected: 10
                      total: 200
                    vmlimit:
                      collected: 0
                      total: 20
                properties:
                  instance_resource_collected:
                    type: object
                    properties:
                      memory:
                        type: object
                        properties:
                          collected:
                            type: integer
                            example: 0
                          total:
                            type: integer
                            example: 40960
                      cpunumber:
                        type: object
                        properties:
                          collected:
                            type: integer
                            example: 0
                          total:
                            type: integer
                            example: 40
                      datavolume:
                        type: object
                        properties:
                          collected:
                            type: integer
                            example: 10
                          total:
                            type: integer
                            example: 200
                      vmlimit:
                        type: object
                        properties:
                          collected:
                            type: integer
                            example: 0
                          total:
                            type: integer
                            example: 20
      tags:
        - Datacenter
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: string
  /user/profile:
    get:
      summary: 'User Profile'
      operationId: userProfile
      description: ' <aside class="notice">need <small class="badge">customer:profile:show</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Successful response'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: ID_PLACEHOLDER
                    name: NAME_PLACEHOLDER
                    language: LANGUAGE_PLACEHOLDER
                    national_code: NATIONAL_CODE_PLACEHOLDER
                    email: EMAIL_PLACEHOLDER
                    phone: PHONE_PLACEHOLDER
                    country: null
                    state: null
                    city: null
                    address: null
                    zip: null
                    website: null
                    extra:
                      referral_code: null
                    status: STATUS_PLACEHOLDER
                    type: TYPE_PLACEHOLDER
                    created_at: CREATED_AT_PLACEHOLDER
                    updated_at: UPDATED_AT_PLACEHOLDER
                    customer_zones_count: null
                    instances_count: null
                    payments_count: null
                    wallets_count: null
                    invite_code: INVITE_CODE_PLACEHOLDER
                    invited_by_me: 0
                    picture: PICTURE_URL_PLACEHOLDER
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: ID_PLACEHOLDER
                      name:
                        type: string
                        example: NAME_PLACEHOLDER
                      language:
                        type: string
                        example: LANGUAGE_PLACEHOLDER
                      national_code:
                        type: string
                        example: NATIONAL_CODE_PLACEHOLDER
                      email:
                        type: string
                        example: EMAIL_PLACEHOLDER
                      phone:
                        type: string
                        example: PHONE_PLACEHOLDER
                      country:
                        type: string
                        example: null
                      state:
                        type: string
                        example: null
                      city:
                        type: string
                        example: null
                      address:
                        type: string
                        example: null
                      zip:
                        type: string
                        example: null
                      website:
                        type: string
                        example: null
                      extra:
                        type: object
                        properties:
                          referral_code:
                            type: string
                            example: null
                      status:
                        type: string
                        example: STATUS_PLACEHOLDER
                      type:
                        type: string
                        example: TYPE_PLACEHOLDER
                      created_at:
                        type: string
                        example: CREATED_AT_PLACEHOLDER
                      updated_at:
                        type: string
                        example: UPDATED_AT_PLACEHOLDER
                      customer_zones_count:
                        type: string
                        example: null
                      instances_count:
                        type: string
                        example: null
                      payments_count:
                        type: string
                        example: null
                      wallets_count:
                        type: string
                        example: null
                      invite_code:
                        type: string
                        example: INVITE_CODE_PLACEHOLDER
                      invited_by_me:
                        type: integer
                        example: 0
                      picture:
                        type: string
                        example: PICTURE_URL_PLACEHOLDER
      tags:
        - User
  /user/token:
    get:
      summary: 'Token validation'
      operationId: tokenValidation
      description: ''
      parameters: []
      responses:
        204:
          description: 'Success Response'
      tags:
        - User
  /user/token-abilities:
    get:
      summary: 'Token Abilities'
      operationId: tokenAbilities
      description: ''
      parameters: []
      responses:
        200:
          description: 'Success Response'
          content:
            text/plain:
              schema:
                type: string
                example: '{"abilities": ["ability1", "ability2", ...]}'
      tags:
        - User
  /user/ssh-key:
    get:
      summary: 'SSH key list'
      operationId: sSHKeyList
      description: ' <aside class="notice">need <small class="badge">ssh-key:list</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Successful response'
          content:
            application/json:
              schema:
                type: object
                example:
                  userData:
                    -
                      id: placeholder_id_1
                      display_name: 'User One'
                      datakey: ssh-authorized-keys
                      datavalue: 'ssh-rsa AAAA...== user1@example.com'
                      created_at: '2024-01-01T00:00:00.000000Z'
                    -
                      id: placeholder_id_2
                      display_name: 'User Two'
                      datakey: ssh-authorized-keys
                      datavalue: 'ssh-rsa AAAA...== user2@example.com'
                      created_at: '2024-01-02T00:00:00.000000Z'
                properties:
                  userData:
                    type: array
                    example:
                      -
                        id: placeholder_id_1
                        display_name: 'User One'
                        datakey: ssh-authorized-keys
                        datavalue: 'ssh-rsa AAAA...== user1@example.com'
                        created_at: '2024-01-01T00:00:00.000000Z'
                      -
                        id: placeholder_id_2
                        display_name: 'User Two'
                        datakey: ssh-authorized-keys
                        datavalue: 'ssh-rsa AAAA...== user2@example.com'
                        created_at: '2024-01-02T00:00:00.000000Z'
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: placeholder_id_1
                        display_name:
                          type: string
                          example: 'User One'
                        datakey:
                          type: string
                          example: ssh-authorized-keys
                        datavalue:
                          type: string
                          example: 'ssh-rsa AAAA...== user1@example.com'
                        created_at:
                          type: string
                          example: '2024-01-01T00:00:00.000000Z'
      tags:
        - User
    post:
      summary: 'Add new SSH Keys'
      operationId: addNewSSHKeys
      description: " <aside class=\"notice\">need <small class=\"badge\">ssh-key:create</small> ability for api token</aside>\n <b>Note:</b> This function runs asynchronously in the background. The response will be:<br>\n <pre>{\n   \"data\": {\n       \"success\": true\n   }\n }</pre>\n To check the status of the created ssh Key, use the <b>SSH key list</b> endpoint.\n"
      parameters: []
      responses:
        200:
          description: 'Successful response'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    success: true
                properties:
                  data:
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'A display name for the SSH key. Must be at least 3 characters. Must not be greater than 255 characters.'
                  example: 'My SSH Key'
                  nullable: false
                ssh_key:
                  type: string
                  description: 'The SSH public key to be registered.'
                  example: 'ssh-rsa AAAA...== user@example.com'
                  nullable: false
              required:
                - name
                - ssh_key
  '/user/ssh-key/{sshKeyId}':
    delete:
      summary: 'Delete SSH Key'
      operationId: deleteSSHKey
      description: " <aside class=\"notice\">need <small class=\"badge\">ssh-key:delete</small> ability for api token</aside>\n\n"
      parameters: []
      responses:
        200:
          description: 'Successful response'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    success: true
                properties:
                  data:
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
      tags:
        - User
    parameters:
      -
        in: path
        name: sshKeyId
        description: ''
        example: 75svX12wvT9g4KwQF1VHcRNjp4
        required: true
        schema:
          type: string
  /user/finance/wallet:
    get:
      summary: 'Wallets Balance'
      operationId: walletsBalance
      description: ' <aside class="notice">need <small class="badge">customer:wallet:balance</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Successful response'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    name: WALLET_NAME_PLACEHOLDER
                    track: TRACK_PLACEHOLDER
                    type: TYPE_PLACEHOLDER
                    balance: 0
                    balance_limit: 0
                    is_blocked: false
                    max_cost: 0
                    remaining_hours: 0
                    updated_at: DATE_PLACEHOLDER
                properties:
                  data:
                    type: object
                    properties:
                      name:
                        type: string
                        example: WALLET_NAME_PLACEHOLDER
                      track:
                        type: string
                        example: TRACK_PLACEHOLDER
                      type:
                        type: string
                        example: TYPE_PLACEHOLDER
                      balance:
                        type: integer
                        example: 0
                      balance_limit:
                        type: integer
                        example: 0
                      is_blocked:
                        type: boolean
                        example: false
                      max_cost:
                        type: integer
                        example: 0
                      remaining_hours:
                        type: integer
                        example: 0
                      updated_at:
                        type: string
                        example: DATE_PLACEHOLDER
      tags:
        - User
  /user/finance/documents:
    get:
      summary: 'Cost Documents Yearly'
      operationId: costDocumentsYearly
      description: ' <aside class="notice">need <small class="badge">customer:document:list</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Successful response'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      dateFrom: DATE_FROM_PLACEHOLDER
                      dateTo: DATE_TO_PLACEHOLDER
                      Instance: 0
                      NetworkNetflow: 0
                      InstanceSnapshot: 0
                      InstanceDataVolumes: 0
                      SupportOfferings: 0
                      NetworkInternetPublicAddressV4: 0
                      NetworkDevice: 0
                      InstanceNetworkSecondaryIpAddressV4: 0
                      BucketSize: 0
                      BucketDownloadTraffic: 0
                      BucketUploadTraffic: 0
                      KubernetesNode: 0
                properties:
                  data:
                    type: array
                    example:
                      -
                        dateFrom: DATE_FROM_PLACEHOLDER
                        dateTo: DATE_TO_PLACEHOLDER
                        Instance: 0
                        NetworkNetflow: 0
                        InstanceSnapshot: 0
                        InstanceDataVolumes: 0
                        SupportOfferings: 0
                        NetworkInternetPublicAddressV4: 0
                        NetworkDevice: 0
                        InstanceNetworkSecondaryIpAddressV4: 0
                        BucketSize: 0
                        BucketDownloadTraffic: 0
                        BucketUploadTraffic: 0
                        KubernetesNode: 0
                    items:
                      type: object
                      properties:
                        dateFrom:
                          type: string
                          example: DATE_FROM_PLACEHOLDER
                        dateTo:
                          type: string
                          example: DATE_TO_PLACEHOLDER
                        Instance:
                          type: integer
                          example: 0
                        NetworkNetflow:
                          type: integer
                          example: 0
                        InstanceSnapshot:
                          type: integer
                          example: 0
                        InstanceDataVolumes:
                          type: integer
                          example: 0
                        SupportOfferings:
                          type: integer
                          example: 0
                        NetworkInternetPublicAddressV4:
                          type: integer
                          example: 0
                        NetworkDevice:
                          type: integer
                          example: 0
                        InstanceNetworkSecondaryIpAddressV4:
                          type: integer
                          example: 0
                        BucketSize:
                          type: integer
                          example: 0
                        BucketDownloadTraffic:
                          type: integer
                          example: 0
                        BucketUploadTraffic:
                          type: integer
                          example: 0
                        KubernetesNode:
                          type: integer
                          example: 0
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                year:
                  type: integer
                  description: 'The year for the document. The year can be either solar (Shamsi) or Gregorian. Must be at least 1390.'
                  example: 2025
                  nullable: false
              required:
                - year
  /user/finance/payments:
    get:
      summary: 'Payment List'
      operationId: paymentList
      description: ' <aside class="notice">need <small class="badge">customer:payment:list</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Successful response'
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                properties:
                  data:
                    type: array
                    example: []
      tags:
        - User
  /user/finance/expenses:
    get:
      summary: 'Expense List'
      operationId: expenseList
      description: ' <aside class="notice">need <small class="badge">customer:expense:list</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Successful response'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 01k53kmw215q40x39eeejcpwen
                      from: '1404-06-23 11:27:16'
                      amount: 5107
                      documented: true
                      metadata:
                        name: bucket-name
                        traffic: 51
                        type: BucketUploadTraffic
                        tier: low-tier
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 1
                    per_page: 50
                    to: 26
                    total: 26
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 01k53kmw215q40x39eeejcpwen
                        from: '1404-06-23 11:27:16'
                        amount: 5107
                        documented: true
                        metadata:
                          name: bucket-name
                          traffic: 51
                          type: BucketUploadTraffic
                          tier: low-tier
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: 01k53kmw215q40x39eeejcpwen
                        from:
                          type: string
                          example: '1404-06-23 11:27:16'
                        amount:
                          type: integer
                          example: 5107
                        documented:
                          type: boolean
                          example: true
                        metadata:
                          type: object
                          properties:
                            name:
                              type: string
                              example: bucket-name
                            traffic:
                              type: integer
                              example: 51
                            type:
                              type: string
                              example: BucketUploadTraffic
                            tier:
                              type: string
                              example: low-tier
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 1
                      per_page:
                        type: integer
                        example: 50
                      to:
                        type: integer
                        example: 26
                      total:
                        type: integer
                        example: 26
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_type:
                  type: string
                  description: 'The type of the product for expenses.'
                  example: BucketUploadTraffic
                  nullable: false
                  enum:
                    - Instance
                    - InstanceNetworkSecondaryIpAddressV4
                    - BucketSize
                    - NetworkInternetPublicAddressV4
                    - KubernetesNode
                    - NetworkDevice
                    - NetworkNetflow
                    - SupportOfferings
                    - BucketUploadTraffic
                    - BucketDownloadTraffic
                product_id:
                  type: string
                  description: 'The ULID of the product.'
                  example: 01k53jsbp0bc08tq02694xpetf
                  nullable: false
                page:
                  type: integer
                  description: 'Page number for paginated results. Must be at least 1.'
                  example: 1
                  nullable: false
              required:
                - product_type
                - product_id
  '/zone/{zoneId}/instance':
    get:
      summary: Index
      operationId: index
      description: ' <aside class="notice">need <small class="badge">instance:list</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Successful response'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: string
                      name: string
                      created: true
                      template_id: null
                      vm_image:
                        id: string
                        type: string
                        name: string
                        is_available: true
                        display_text: string
                        name_orginal: string
                        ready_to_use_app: false
                        ready_to_use_app_name: null
                        ready_to_use_app_version: null
                        os_type: string
                        os_name: string
                        os_version: string
                        hardware_requirement:
                          cpunumber: 1
                          cpuspeed: 500
                          memory: 500
                          rootdisksize: 25
                        category: string
                      zone:
                        id: string
                        name: string
                        location: string
                        is_public: true
                        is_featured: true
                        is_ready: true
                      service_offering:
                        id: string
                        name: string
                        has_image_requirement: null
                        is_available: true
                        is_public: true
                        suggested: false
                        category: string
                        hourly_price:
                          up: 0
                          down: 0
                        hourly_price_no_discount:
                          up: 0
                          down: 0
                        description: null
                        hardware:
                          cpu_core: 1
                          memory_mb: 512
                          cpu_speed_MHz: 1000
                          root_disk_size_gB: 30
                          network_rate: 200
                          disk_iops: 2500
                      disk_offering_id: null
                      service_offering_id: string
                      status: string
                      instance_status: string
                      password: string
                      username: string
                      created_at: 1234567890
                      updated_at: 1234567890
                      metadata: []
                      kubernetes_cluster_id: null
                      data_volumes: []
                      snapshot: []
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: string
                        name: string
                        created: true
                        template_id: null
                        vm_image:
                          id: string
                          type: string
                          name: string
                          is_available: true
                          display_text: string
                          name_orginal: string
                          ready_to_use_app: false
                          ready_to_use_app_name: null
                          ready_to_use_app_version: null
                          os_type: string
                          os_name: string
                          os_version: string
                          hardware_requirement:
                            cpunumber: 1
                            cpuspeed: 500
                            memory: 500
                            rootdisksize: 25
                          category: string
                        zone:
                          id: string
                          name: string
                          location: string
                          is_public: true
                          is_featured: true
                          is_ready: true
                        service_offering:
                          id: string
                          name: string
                          has_image_requirement: null
                          is_available: true
                          is_public: true
                          suggested: false
                          category: string
                          hourly_price:
                            up: 0
                            down: 0
                          hourly_price_no_discount:
                            up: 0
                            down: 0
                          description: null
                          hardware:
                            cpu_core: 1
                            memory_mb: 512
                            cpu_speed_MHz: 1000
                            root_disk_size_gB: 30
                            network_rate: 200
                            disk_iops: 2500
                        disk_offering_id: null
                        service_offering_id: string
                        status: string
                        instance_status: string
                        password: string
                        username: string
                        created_at: 1234567890
                        updated_at: 1234567890
                        metadata: []
                        kubernetes_cluster_id: null
                        data_volumes: []
                        snapshot: []
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: string
                        name:
                          type: string
                          example: string
                        created:
                          type: boolean
                          example: true
                        template_id:
                          type: string
                          example: null
                        vm_image:
                          type: object
                          properties:
                            id:
                              type: string
                              example: string
                            type:
                              type: string
                              example: string
                            name:
                              type: string
                              example: string
                            is_available:
                              type: boolean
                              example: true
                            display_text:
                              type: string
                              example: string
                            name_orginal:
                              type: string
                              example: string
                            ready_to_use_app:
                              type: boolean
                              example: false
                            ready_to_use_app_name:
                              type: string
                              example: null
                            ready_to_use_app_version:
                              type: string
                              example: null
                            os_type:
                              type: string
                              example: string
                            os_name:
                              type: string
                              example: string
                            os_version:
                              type: string
                              example: string
                            hardware_requirement:
                              type: object
                              properties:
                                cpunumber:
                                  type: integer
                                  example: 1
                                cpuspeed:
                                  type: integer
                                  example: 500
                                memory:
                                  type: integer
                                  example: 500
                                rootdisksize:
                                  type: integer
                                  example: 25
                            category:
                              type: string
                              example: string
                        zone:
                          type: object
                          properties:
                            id:
                              type: string
                              example: string
                            name:
                              type: string
                              example: string
                            location:
                              type: string
                              example: string
                            is_public:
                              type: boolean
                              example: true
                            is_featured:
                              type: boolean
                              example: true
                            is_ready:
                              type: boolean
                              example: true
                        service_offering:
                          type: object
                          properties:
                            id:
                              type: string
                              example: string
                            name:
                              type: string
                              example: string
                            has_image_requirement:
                              type: string
                              example: null
                            is_available:
                              type: boolean
                              example: true
                            is_public:
                              type: boolean
                              example: true
                            suggested:
                              type: boolean
                              example: false
                            category:
                              type: string
                              example: string
                            hourly_price:
                              type: object
                              properties:
                                up:
                                  type: integer
                                  example: 0
                                down:
                                  type: integer
                                  example: 0
                            hourly_price_no_discount:
                              type: object
                              properties:
                                up:
                                  type: integer
                                  example: 0
                                down:
                                  type: integer
                                  example: 0
                            description:
                              type: string
                              example: null
                            hardware:
                              type: object
                              properties:
                                cpu_core:
                                  type: integer
                                  example: 1
                                memory_mb:
                                  type: integer
                                  example: 512
                                cpu_speed_MHz:
                                  type: integer
                                  example: 1000
                                root_disk_size_gB:
                                  type: integer
                                  example: 30
                                network_rate:
                                  type: integer
                                  example: 200
                                disk_iops:
                                  type: integer
                                  example: 2500
                        disk_offering_id:
                          type: string
                          example: null
                        service_offering_id:
                          type: string
                          example: string
                        status:
                          type: string
                          example: string
                        instance_status:
                          type: string
                          example: string
                        password:
                          type: string
                          example: string
                        username:
                          type: string
                          example: string
                        created_at:
                          type: integer
                          example: 1234567890
                        updated_at:
                          type: integer
                          example: 1234567890
                        metadata:
                          type: array
                          example: []
                        kubernetes_cluster_id:
                          type: string
                          example: null
                        data_volumes:
                          type: array
                          example: []
                        snapshot:
                          type: array
                          example: []
      tags:
        - Instance
    post:
      summary: 'Create Instance'
      operationId: createInstance
      description: "  <aside class=\"notice\">need <small class=\"badge\">instance:create</small> ability for api token</aside>\n  <b>Note:</b> This function runs asynchronously in the background. The response will be:<br>\n  <pre>{\n    \"data\": {\n        \"success\": true\n    }\n  }</pre>\n  To check the status of the created instance, use the <b>List Instance</b> endpoint and review the <code>status</code> field."
      parameters: []
      responses:
        201:
          description: 'Accepted for async processing. Use List Instance to check status.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    success: true
                properties:
                  data:
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
      tags:
        - Instance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                service_offering_id:
                  type: ulid
                  description: 'The ID of the service offering.'
                  example: 01H9ZCNF46W6C1EM45T21B6M0G
                  nullable: false
                vm_image_id:
                  type: ulid
                  description: 'The ID of the VM image.'
                  example: 01H9ZCNF46W6C1EM45T21B6M0H
                  nullable: false
                network_ids:
                  type: array<ulid>
                  description: 'Array of network IDs to attach to the instance.'
                  example:
                    - 01H9ZCNF46W6C1EM45T21B6M0N
                  nullable: false
                name:
                  type: string
                  description: 'The name of the instance.'
                  example: my-instance
                  nullable: false
              required:
                - service_offering_id
                - vm_image_id
                - network_ids
                - name
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: string
  '/zone/{zoneId}/instance/service-offerings':
    get:
      summary: 'List Instance Service Offerings'
      operationId: listInstanceServiceOfferings
      description: ' <aside class="notice">need <small class="badge">instance:metrics</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'List of instance service offerings (anonymized).'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: instance_service_offering_id_1
                      name: 'Instance Type A'
                      has_image_requirement: null
                      is_available: true
                      is_public: true
                      suggested: false
                      category: CPU
                      hourly_price:
                        up: 10000
                        down: 10000
                      hourly_price_no_discount:
                        up: 15000
                        down: 15000
                      description: 'CPU: 1 Core </br> Ram: 1 GB </br> Storage: 25 GB'
                      hardware:
                        cpu_core: 1
                        memory_mb: 1024
                        cpu_speed_MHz: 1000
                        root_disk_size_gB: 25
                        network_rate: 200
                        disk_iops: 2500
                    -
                      id: instance_service_offering_id_2
                      name: 'Instance Type B'
                      has_image_requirement: null
                      is_available: true
                      is_public: true
                      suggested: true
                      category: MEMORY
                      hourly_price:
                        up: 20000
                        down: 20000
                      hourly_price_no_discount:
                        up: 25000
                        down: 25000
                      description: 'CPU: 2 Core </br> Ram: 4 GB </br> Storage: 50 GB'
                      hardware:
                        cpu_core: 2
                        memory_mb: 4096
                        cpu_speed_MHz: 2000
                        root_disk_size_gB: 50
                        network_rate: 400
                        disk_iops: 5000
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: instance_service_offering_id_1
                        name: 'Instance Type A'
                        has_image_requirement: null
                        is_available: true
                        is_public: true
                        suggested: false
                        category: CPU
                        hourly_price:
                          up: 10000
                          down: 10000
                        hourly_price_no_discount:
                          up: 15000
                          down: 15000
                        description: 'CPU: 1 Core </br> Ram: 1 GB </br> Storage: 25 GB'
                        hardware:
                          cpu_core: 1
                          memory_mb: 1024
                          cpu_speed_MHz: 1000
                          root_disk_size_gB: 25
                          network_rate: 200
                          disk_iops: 2500
                      -
                        id: instance_service_offering_id_2
                        name: 'Instance Type B'
                        has_image_requirement: null
                        is_available: true
                        is_public: true
                        suggested: true
                        category: MEMORY
                        hourly_price:
                          up: 20000
                          down: 20000
                        hourly_price_no_discount:
                          up: 25000
                          down: 25000
                        description: 'CPU: 2 Core </br> Ram: 4 GB </br> Storage: 50 GB'
                        hardware:
                          cpu_core: 2
                          memory_mb: 4096
                          cpu_speed_MHz: 2000
                          root_disk_size_gB: 50
                          network_rate: 400
                          disk_iops: 5000
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: instance_service_offering_id_1
                        name:
                          type: string
                          example: 'Instance Type A'
                        has_image_requirement:
                          type: string
                          example: null
                        is_available:
                          type: boolean
                          example: true
                        is_public:
                          type: boolean
                          example: true
                        suggested:
                          type: boolean
                          example: false
                        category:
                          type: string
                          example: CPU
                        hourly_price:
                          type: object
                          properties:
                            up:
                              type: integer
                              example: 10000
                            down:
                              type: integer
                              example: 10000
                        hourly_price_no_discount:
                          type: object
                          properties:
                            up:
                              type: integer
                              example: 15000
                            down:
                              type: integer
                              example: 15000
                        description:
                          type: string
                          example: 'CPU: 1 Core </br> Ram: 1 GB </br> Storage: 25 GB'
                        hardware:
                          type: object
                          properties:
                            cpu_core:
                              type: integer
                              example: 1
                            memory_mb:
                              type: integer
                              example: 1024
                            cpu_speed_MHz:
                              type: integer
                              example: 1000
                            root_disk_size_gB:
                              type: integer
                              example: 25
                            network_rate:
                              type: integer
                              example: 200
                            disk_iops:
                              type: integer
                              example: 2500
      tags:
        - Instance
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
  '/zone/{zoneId}/instance/vm-images':
    get:
      summary: 'List Instance VM Image Service Offerings'
      operationId: listInstanceVMImageServiceOfferings
      description: ' <aside class="notice">need <small class="badge">instance:metrics</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'List of instance VM image service offerings (anonymized).'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: vm_image_id_1
                      type: TEMPLATE
                      name: 'Linux Template A'
                      is_available: true
                      display_text: 'Linux Template A'
                      name_orginal: 'linux OS A'
                      ready_to_use_app: true
                      ready_to_use_app_name: AppA
                      ready_to_use_app_version: '1.0'
                      os_type: linux
                      os_name: LinuxOS
                      os_version: '1.0'
                      hardware_requirement:
                        cpunumber: 1
                        cpuspeed: 1000
                        memory: 1024
                        rootdisksize: 25
                      category: GENERAL
                    -
                      id: vm_image_id_2
                      type: TEMPLATE
                      name: 'Windows Template B'
                      is_available: true
                      display_text: 'Windows Template B'
                      name_orginal: 'windows OS B'
                      ready_to_use_app: false
                      ready_to_use_app_name: null
                      ready_to_use_app_version: null
                      os_type: windows
                      os_name: WindowsOS
                      os_version: '2.0'
                      hardware_requirement:
                        cpunumber: 2
                        cpuspeed: 2000
                        memory: 2048
                        rootdisksize: 50
                      category: GENERAL
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: vm_image_id_1
                        type: TEMPLATE
                        name: 'Linux Template A'
                        is_available: true
                        display_text: 'Linux Template A'
                        name_orginal: 'linux OS A'
                        ready_to_use_app: true
                        ready_to_use_app_name: AppA
                        ready_to_use_app_version: '1.0'
                        os_type: linux
                        os_name: LinuxOS
                        os_version: '1.0'
                        hardware_requirement:
                          cpunumber: 1
                          cpuspeed: 1000
                          memory: 1024
                          rootdisksize: 25
                        category: GENERAL
                      -
                        id: vm_image_id_2
                        type: TEMPLATE
                        name: 'Windows Template B'
                        is_available: true
                        display_text: 'Windows Template B'
                        name_orginal: 'windows OS B'
                        ready_to_use_app: false
                        ready_to_use_app_name: null
                        ready_to_use_app_version: null
                        os_type: windows
                        os_name: WindowsOS
                        os_version: '2.0'
                        hardware_requirement:
                          cpunumber: 2
                          cpuspeed: 2000
                          memory: 2048
                          rootdisksize: 50
                        category: GENERAL
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: vm_image_id_1
                        type:
                          type: string
                          example: TEMPLATE
                        name:
                          type: string
                          example: 'Linux Template A'
                        is_available:
                          type: boolean
                          example: true
                        display_text:
                          type: string
                          example: 'Linux Template A'
                        name_orginal:
                          type: string
                          example: 'linux OS A'
                        ready_to_use_app:
                          type: boolean
                          example: true
                        ready_to_use_app_name:
                          type: string
                          example: AppA
                        ready_to_use_app_version:
                          type: string
                          example: '1.0'
                        os_type:
                          type: string
                          example: linux
                        os_name:
                          type: string
                          example: LinuxOS
                        os_version:
                          type: string
                          example: '1.0'
                        hardware_requirement:
                          type: object
                          properties:
                            cpunumber:
                              type: integer
                              example: 1
                            cpuspeed:
                              type: integer
                              example: 1000
                            memory:
                              type: integer
                              example: 1024
                            rootdisksize:
                              type: integer
                              example: 25
                        category:
                          type: string
                          example: GENERAL
      tags:
        - Instance
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
  '/zone/{zoneId}/instance/{instanceId}/rebuild':
    post:
      summary: 'Rebuild Instance'
      operationId: rebuildInstance
      description: ' <aside class="notice">need <small class="badge">instance:rebuild</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Instance rebuild started.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    success: true
                properties:
                  data:
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
      tags:
        - Instance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                vm_image_id:
                  type: ulid
                  description: 'The ID of the new VM image.'
                  example: 01H9ZCNF46W6C1EM45T21B6M0H
                  nullable: false
              required:
                - vm_image_id
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
      -
        in: path
        name: instanceId
        description: 'The ID of the instance.'
        example: 01H9ZCNF46W6C1EM45T21B6M0I
        required: true
        schema:
          type: ulid
  '/zone/{zoneId}/instance/{instanceId}/start':
    post:
      summary: 'Start Instance'
      operationId: startInstance
      description: ' <aside class="notice">need <small class="badge">instance:start</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Instance start requested.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    success: true
                properties:
                  data:
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
      tags:
        - Instance
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
      -
        in: path
        name: instanceId
        description: 'The ID of the instance.'
        example: 01H9ZCNF46W6C1EM45T21B6M0I
        required: true
        schema:
          type: ulid
  '/zone/{zoneId}/instance/{instanceId}/stop':
    post:
      summary: 'Stop Instance'
      operationId: stopInstance
      description: ' <aside class="notice">need <small class="badge">instance:stop</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Instance stop requested.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    success: true
                properties:
                  data:
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
      tags:
        - Instance
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                forced:
                  type: boolean
                  description: 'Force stop the instance.'
                  example: false
                  nullable: false
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
      -
        in: path
        name: instanceId
        description: 'The ID of the instance.'
        example: 01H9ZCNF46W6C1EM45T21B6M0I
        required: true
        schema:
          type: ulid
  '/zone/{zoneId}/instance/{instanceId}/reboot':
    post:
      summary: 'Reboot Instance'
      operationId: rebootInstance
      description: ' <aside class="notice">need <small class="badge">instance:reboot</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Instance reboot requested.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    success: true
                properties:
                  data:
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
      tags:
        - Instance
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
      -
        in: path
        name: instanceId
        description: 'The ID of the instance.'
        example: 01H9ZCNF46W6C1EM45T21B6M0I
        required: true
        schema:
          type: ulid
  '/zone/{zoneId}/instance/{instanceId}':
    delete:
      summary: 'Delete Instance'
      operationId: deleteInstance
      description: " <aside class=\"notice\">need <small class=\"badge\">instance:delete</small> ability for api token</aside>\n   Delete an instance. This operation is asynchronous; check the instance list for status updates."
      parameters: []
      responses:
        200:
          description: 'Instance delete requested.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    success: true
                properties:
                  data:
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
      tags:
        - Instance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the instance.'
                  example: my-instance
                  nullable: false
              required:
                - name
    get:
      summary: 'Show Instance'
      operationId: showInstance
      description: "  <aside class=\"notice\">need <small class=\"badge\">instance:show</small> ability for api token</aside>\n  Retrieve detailed information about a specific instance in a zone."
      parameters: []
      responses:
        200:
          description: 'Successful response'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: string
                    customer_id: 01hyddf0krmwvq50cd523zfcfp
                    name: test-from-cli-intractive
                    zone_id: 01hysrrs3xhhdaayy69ps6xxya
                    created: true
                    template_id: null
                    vm_image:
                      id: string
                      type: TEMPLATE
                      name: T-Mikrotik-714
                      is_available: true
                      display_text: T-Mikrotik-714
                      name_orginal: 'linux MikroTik 7.14  '
                      ready_to_use_app: false
                      ready_to_use_app_name: null
                      ready_to_use_app_version: null
                      os_type: linux
                      os_name: MikroTik
                      os_version: '7.14'
                      hardware_requirement:
                        cpunumber: 1
                        cpuspeed: 1000
                        memory: 1000
                        rootdisksize: 25
                      category: OPERATION_SYSTEMS
                    zone:
                      id: string
                      name: ALBORZ
                      location: Iran
                      is_public: true
                      is_featured: true
                      is_ready: true
                    service_offering:
                      id: string
                      name: n02-02-025-500-v3
                      has_image_requirement: null
                      is_available: true
                      is_public: true
                      suggested: false
                      category: NETWORK
                      hourly_price:
                        up: 2000
                        down: 2000
                      hourly_price_no_discount:
                        up: 2000
                        down: 2000
                      description: null
                      hardware:
                        cpu_core: 2
                        memory_mb: 2048
                        cpu_speed_MHz: 2300
                        root_disk_size_gB: 25
                        network_rate: 500
                        disk_iops: 2500
                    disk_offering_id: null
                    service_offering_id: string
                    status: UP
                    instance_status: UP
                    password: string
                    username: string
                    created_at: 1756628991
                    updated_at: 1756633818
                    metadata: []
                    kubernetes_cluster_id: null
                    data_volumes: []
                    snapshot:
                      -
                        id: string
                        name: on-snapshot
                        status: READY
                        created_at: 1756633839
                        current: false
                        parent_id: null
                      -
                        id: string
                        name: snap-shot
                        status: READY
                        created_at: 1756634140
                        current: false
                        parent_id: string
                      -
                        id: string
                        name: other-snapshot
                        status: READY
                        created_at: 1756636439
                        current: false
                        parent_id: string
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: string
                      customer_id:
                        type: string
                        example: 01hyddf0krmwvq50cd523zfcfp
                      name:
                        type: string
                        example: test-from-cli-intractive
                      zone_id:
                        type: string
                        example: 01hysrrs3xhhdaayy69ps6xxya
                      created:
                        type: boolean
                        example: true
                      template_id:
                        type: string
                        example: null
                      vm_image:
                        type: object
                        properties:
                          id:
                            type: string
                            example: string
                          type:
                            type: string
                            example: TEMPLATE
                          name:
                            type: string
                            example: T-Mikrotik-714
                          is_available:
                            type: boolean
                            example: true
                          display_text:
                            type: string
                            example: T-Mikrotik-714
                          name_orginal:
                            type: string
                            example: 'linux MikroTik 7.14  '
                          ready_to_use_app:
                            type: boolean
                            example: false
                          ready_to_use_app_name:
                            type: string
                            example: null
                          ready_to_use_app_version:
                            type: string
                            example: null
                          os_type:
                            type: string
                            example: linux
                          os_name:
                            type: string
                            example: MikroTik
                          os_version:
                            type: string
                            example: '7.14'
                          hardware_requirement:
                            type: object
                            properties:
                              cpunumber:
                                type: integer
                                example: 1
                              cpuspeed:
                                type: integer
                                example: 1000
                              memory:
                                type: integer
                                example: 1000
                              rootdisksize:
                                type: integer
                                example: 25
                          category:
                            type: string
                            example: OPERATION_SYSTEMS
                      zone:
                        type: object
                        properties:
                          id:
                            type: string
                            example: string
                          name:
                            type: string
                            example: ALBORZ
                          location:
                            type: string
                            example: Iran
                          is_public:
                            type: boolean
                            example: true
                          is_featured:
                            type: boolean
                            example: true
                          is_ready:
                            type: boolean
                            example: true
                      service_offering:
                        type: object
                        properties:
                          id:
                            type: string
                            example: string
                          name:
                            type: string
                            example: n02-02-025-500-v3
                          has_image_requirement:
                            type: string
                            example: null
                          is_available:
                            type: boolean
                            example: true
                          is_public:
                            type: boolean
                            example: true
                          suggested:
                            type: boolean
                            example: false
                          category:
                            type: string
                            example: NETWORK
                          hourly_price:
                            type: object
                            properties:
                              up:
                                type: integer
                                example: 2000
                              down:
                                type: integer
                                example: 2000
                          hourly_price_no_discount:
                            type: object
                            properties:
                              up:
                                type: integer
                                example: 2000
                              down:
                                type: integer
                                example: 2000
                          description:
                            type: string
                            example: null
                          hardware:
                            type: object
                            properties:
                              cpu_core:
                                type: integer
                                example: 2
                              memory_mb:
                                type: integer
                                example: 2048
                              cpu_speed_MHz:
                                type: integer
                                example: 2300
                              root_disk_size_gB:
                                type: integer
                                example: 25
                              network_rate:
                                type: integer
                                example: 500
                              disk_iops:
                                type: integer
                                example: 2500
                      disk_offering_id:
                        type: string
                        example: null
                      service_offering_id:
                        type: string
                        example: string
                      status:
                        type: string
                        example: UP
                      instance_status:
                        type: string
                        example: UP
                      password:
                        type: string
                        example: string
                      username:
                        type: string
                        example: string
                      created_at:
                        type: integer
                        example: 1756628991
                      updated_at:
                        type: integer
                        example: 1756633818
                      metadata:
                        type: array
                        example: []
                      kubernetes_cluster_id:
                        type: string
                        example: null
                      data_volumes:
                        type: array
                        example: []
                      snapshot:
                        type: array
                        example:
                          -
                            id: string
                            name: on-snapshot
                            status: READY
                            created_at: 1756633839
                            current: false
                            parent_id: null
                          -
                            id: string
                            name: snap-shot
                            status: READY
                            created_at: 1756634140
                            current: false
                            parent_id: string
                          -
                            id: string
                            name: other-snapshot
                            status: READY
                            created_at: 1756636439
                            current: false
                            parent_id: string
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              example: string
                            name:
                              type: string
                              example: on-snapshot
                            status:
                              type: string
                              example: READY
                            created_at:
                              type: integer
                              example: 1756633839
                            current:
                              type: boolean
                              example: false
                            parent_id:
                              type: string
                              example: null
      tags:
        - Instance
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
      -
        in: path
        name: instanceId
        description: 'The ID of the instance to delete.'
        example: 01H9ZCNF46W6C1EM45T21B6M0I
        required: true
        schema:
          type: ulid
  '/zone/{zoneId}/instance/{instanceId}/metrics':
    get:
      summary: 'Instance Metric'
      operationId: instanceMetric
      description: ' <aside class="notice">need <small class="badge">instance:metrics</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Instance metrics response'
          content:
            text/plain:
              schema:
                type: string
                example: "\n{\n  \"data\": [\n    {\n      \"column\": \"networkread\",\n      \"values\": [\n        { \"value\": 0.03, \"time\": \"T1\" },\n        { \"value\": 0.03, \"time\": \"T2\" },\n        { \"value\": 0.03, \"time\": \"T3\" },\n      ]\n    },\n    {\n      \"column\": \"networkwrite\",\n      \"values\": [\n        { \"value\": 0, \"time\": \"T1\" },\n        { \"value\": 0, \"time\": \"T2\" },\n        { \"value\": 0, \"time\": \"T3\" },\n\n      ]\n    }\n  ]\n}\n\n    "
      tags:
        - Instance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                metrics:
                  type: array
                  description: 'Array of metric keys to fetch. Allowed: memoryusedkbs, memorykbs, cpuused, diskiopstotal, diskkbsread, diskkbswrite, networkread, memoryintfreekbs.'
                  example:
                    - memoryusedkbs
                    - cpuused
                  items:
                    type: string
                time:
                  type: integer
                  description: 'Hour number for the metric query.'
                  example: 1
                  nullable: false
                aggregator:
                  type: string
                  description: 'Aggregation function. Allowed: last, mean, median, sum.'
                  example: mean
                  nullable: false
              required:
                - metrics
                - time
                - aggregator
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
      -
        in: path
        name: instanceId
        description: 'The ID of the instance.'
        example: 01H9ZCNF46W6C1EM45T21B6M0I
        required: true
        schema:
          type: ulid
  '/zone/{zoneId}/instance/{instanceId}/console':
    post:
      summary: 'Get Console URL'
      operationId: getConsoleURL
      description: ' <aside class="notice">need <small class="badge">instance:console</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Successful response'
          content:
            application/json:
              schema:
                type: object
                example:
                  url: consoleproxy
                properties:
                  url:
                    type: string
                    example: consoleproxy
      tags:
        - Instance
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
      -
        in: path
        name: instanceId
        description: 'The ID of the instance.'
        example: 01H9ZCNF46W6C1EM45T21B6M0I
        required: true
        schema:
          type: ulid
  '/zone/{zoneId}/instance/{instanceId}/snapshot':
    post:
      summary: 'Create Snapshot'
      operationId: createSnapshot
      description: "<aside class=\"notice\">need <small class=\"badge\">instance:snapshot:create</small> ability for api token</aside>\n<b>Note:</b> This function creates a snapshot for a specific instance.<br>\n<pre>{\n  \"data\": {\n      \"id\": \"string\",\n      \"name\": \"string\",\n      \"status\": \"string\",\n      \"created_at\": 1234567890\n  }\n}</pre>"
      parameters: []
      responses:
        201:
          description: 'Snapshot creation accepted.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 01H9ZCNF46W6C1EM45T21B6M0S
                    name: my-snapshot
                    status: CREATING
                    created_at: 1712345678
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 01H9ZCNF46W6C1EM45T21B6M0S
                      name:
                        type: string
                        example: my-snapshot
                      status:
                        type: string
                        example: CREATING
                      created_at:
                        type: integer
                        example: 1712345678
      tags:
        - Instance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the snapshot.'
                  example: my-snapshot
                  nullable: false
              required:
                - name
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
      -
        in: path
        name: instanceId
        description: 'The ID of the instance.'
        example: 01H9ZCNF46W6C1EM45T21B6M0I
        required: true
        schema:
          type: ulid
  '/zone/{zoneId}/instance/{instanceId}/snapshot/{snapshotId}/revert':
    post:
      summary: 'Revert Snapshot'
      operationId: revertSnapshot
      description: "<aside class=\"notice\">need <small class=\"badge\">instance:snapshot:revert</small> ability for api token</aside>\n<b>Note:</b> This function reverts an instance to a specific snapshot.<br>\n<pre>{\n  \"data\": {\n      \"success\": true\n  }\n}</pre>"
      parameters: []
      responses:
        200:
          description: 'Instance reverted to snapshot.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    success: true
                properties:
                  data:
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
      tags:
        - Instance
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
      -
        in: path
        name: instanceId
        description: 'The ID of the instance.'
        example: 01H9ZCNF46W6C1EM45T21B6M0I
        required: true
        schema:
          type: ulid
      -
        in: path
        name: snapshotId
        description: 'The ID of the snapshot.'
        example: 01H9ZCNF46W6C1EM45T21B6M0S
        required: true
        schema:
          type: ulid
  '/zone/{zoneId}/instance/{instanceId}/snapshot/{snapshotId}':
    delete:
      summary: 'Delete Snapshot'
      operationId: deleteSnapshot
      description: "<aside class=\"notice\">need <small class=\"badge\">instance:snapshot:delete</small> ability for api token</aside>\n<b>Note:</b> This function deletes a snapshot for a specific instance.<br>\n<pre>{\n  \"data\": {\n      \"success\": true\n  }\n}</pre>"
      parameters: []
      responses:
        200:
          description: 'Snapshot deleted.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    success: true
                properties:
                  data:
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
      tags:
        - Instance
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
      -
        in: path
        name: instanceId
        description: 'The ID of the instance.'
        example: 01H9ZCNF46W6C1EM45T21B6M0I
        required: true
        schema:
          type: ulid
      -
        in: path
        name: snapshotId
        description: 'The ID of the snapshot.'
        example: 01H9ZCNF46W6C1EM45T21B6M0S
        required: true
        schema:
          type: ulid
  '/zone/{zoneId}/instance/volumes/service-offering':
    get:
      summary: 'List Volume Service Offerings'
      operationId: listVolumeServiceOfferings
      description: " <aside class=\"notice\">need <small class=\"badge\">instance:volume:service-offering:list</small> ability for api token</aside>\n   List all volume service offerings available in the specified zone for the authenticated user."
      parameters: []
      responses:
        200:
          description: 'List of volume service offerings (anonymized).'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      size: '0'
                      price: '200'
                      name: CustomeDiskOfferingAlborz
                      description: CustomeDiskOfferingAlborz
                      is_public: true
                      is_featured: false
                properties:
                  data:
                    type: array
                    example:
                      -
                        size: '0'
                        price: '200'
                        name: CustomeDiskOfferingAlborz
                        description: CustomeDiskOfferingAlborz
                        is_public: true
                        is_featured: false
                    items:
                      type: object
                      properties:
                        size:
                          type: string
                          example: '0'
                        price:
                          type: string
                          example: '200'
                        name:
                          type: string
                          example: CustomeDiskOfferingAlborz
                        description:
                          type: string
                          example: CustomeDiskOfferingAlborz
                        is_public:
                          type: boolean
                          example: true
                        is_featured:
                          type: boolean
                          example: false
      tags:
        - Instance
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
  '/zone/{zoneId}/instance/volumes':
    get:
      summary: 'List Volumes'
      operationId: listVolumes
      description: ' <aside class="notice">need <small class="badge">instance:volume:list</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'List of volumes.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 01H9ZCNF46W6C1EM45T21B6M0V
                      name: volume-1
                      size: 50
                      status: available
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 01H9ZCNF46W6C1EM45T21B6M0V
                        name: volume-1
                        size: 50
                        status: available
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: 01H9ZCNF46W6C1EM45T21B6M0V
                        name:
                          type: string
                          example: volume-1
                        size:
                          type: integer
                          example: 50
                        status:
                          type: string
                          example: available
      tags:
        - Instance
    post:
      summary: 'Create Volume'
      operationId: createVolume
      description: " <aside class=\"notice\">need <small class=\"badge\">instance:volume:create</small> ability for api token</aside>\n   Create a new volume in the specified zone."
      parameters: []
      responses:
        200:
          description: 'Volume creation accepted.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 01H9ZCNF46W6C1EM45T21B6M0V
                    name: my-volume
                    size: 50
                    status: CREATING
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 01H9ZCNF46W6C1EM45T21B6M0V
                      name:
                        type: string
                        example: my-volume
                      size:
                        type: integer
                        example: 50
                      status:
                        type: string
                        example: CREATING
      tags:
        - Instance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                service_offering_id:
                  type: ulid
                  description: 'The ID of the service offering.'
                  example: 01H9ZCNF46W6C1EM45T21B6M0G
                  nullable: false
                size:
                  type: integer
                  description: 'The size of the volume in GB.'
                  example: 50
                  nullable: false
                name:
                  type: string
                  description: 'The name of the volume.'
                  example: my-volume
                  nullable: false
              required:
                - service_offering_id
                - size
                - name
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
  '/zone/{zoneId}/instance/volumes/{volumeId}':
    delete:
      summary: 'Delete Volume'
      operationId: deleteVolume
      description: ' <aside class="notice">need <small class="badge">instance:volume:delete</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Volume deleted.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    success: true
                properties:
                  data:
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
      tags:
        - Instance
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
      -
        in: path
        name: volumeId
        description: 'The ID of the volume.'
        example: 01H9ZCNF46W6C1EM45T21B6M0V
        required: true
        schema:
          type: ulid
  '/zone/{zoneId}/instance/volumes/{volumeId}/detach/{instanceId}':
    post:
      summary: 'Detach Volume'
      operationId: detachVolume
      description: " <aside class=\"notice\">need <small class=\"badge\">instance:volume:detach</small> ability for api token</aside>\n   Detach a volume from an instance."
      parameters: []
      responses:
        200:
          description: 'Volume detached.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    success: true
                properties:
                  data:
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
      tags:
        - Instance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                instance_id:
                  type: ulid
                  description: 'The ID of the instance to detach from.'
                  example: 01H9ZCNF46W6C1EM45T21B6M0I
                  nullable: false
              required:
                - instance_id
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
      -
        in: path
        name: volumeId
        description: 'The ID of the volume.'
        example: 01H9ZCNF46W6C1EM45T21B6M0V
        required: true
        schema:
          type: ulid
      -
        in: path
        name: instanceId
        description: ''
        example: 74NSQHzy4ajdpCMv9x08A9CqBg
        required: true
        schema:
          type: string
  '/zone/{zoneId}/instance/volumes/{volumeId}/attach/{instanceId}':
    post:
      summary: 'Attach Volume'
      operationId: attachVolume
      description: " <aside class=\"notice\">need <small class=\"badge\">instance:volume:attach</small> ability for api token</aside>\n   Attach a volume to an instance."
      parameters: []
      responses:
        200:
          description: 'Volume attached.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    success: true
                properties:
                  data:
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
      tags:
        - Instance
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
      -
        in: path
        name: volumeId
        description: 'The ID of the volume.'
        example: 01H9ZCNF46W6C1EM45T21B6M0V
        required: true
        schema:
          type: ulid
      -
        in: path
        name: instanceId
        description: 'The ID of the instance.'
        example: 01H9ZCNF46W6C1EM45T21B6M0I
        required: true
        schema:
          type: ulid
  '/zone/{zoneId}/network/l2':
    post:
      summary: 'Create L2 Network'
      operationId: createL2Network
      description: "  <aside class=\"notice\">Requires appropriate <small class=\"badge\">network:l2:create</small> ability for API token</aside>\n  <b>Note:</b> This function runs asynchronously in the background. The response will be:<br>\n  <pre>{\n    \"data\": {\n        \"success\": true\n    }\n  }</pre>\n  To check the status of the created network, use the <b>List Network</b> endpoint.\n  </p>"
      parameters: []
      responses:
        201:
          description: 'Accepted for async processing. Use List Network to check status.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    success: true
                properties:
                  data:
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
        422:
          description: 'Validation error - Network offering ID is required.'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The network offering id field is required.'
                  errors:
                    network_offering_id:
                      - 'The network offering id field is required.'
                properties:
                  message:
                    type: string
                    example: 'The network offering id field is required.'
                  errors:
                    type: object
                    properties:
                      network_offering_id:
                        type: array
                        example:
                          - 'The network offering id field is required.'
                        items:
                          type: string
      tags:
        - Network
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                network_offering_id:
                  type: ulid
                  description: 'The ID of the network offering.'
                  example: 01H9ZCNF46W6C1EM45T21B6M0G
                  nullable: false
                name:
                  type: string
                  description: 'The name of the network.'
                  example: my-l2-network
                  nullable: false
              required:
                - network_offering_id
                - name
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
  '/zone/{zoneId}/network/l3':
    post:
      summary: 'Create L3 Network'
      operationId: createL3Network
      description: "  <aside class=\"notice\">Requires appropriate <small class=\"badge\">network:l3:create</small> ability for API token</aside>\n  <p>Creates a new Layer 3 (L3) network in the specified zone. For <code>network_offering_id</code>, use the ID of a service offering with type <code>Isolated</code>.<br><br>\n  <b>Note:</b> This function runs asynchronously in the background. The response will be:<br>\n  <pre>{\n    \"data\": {\n        \"success\": true\n    }\n  }</pre>\n  To check the status of the created network, use the <b>List Networks</b> endpoint and review the <code>status</code> field.\n  </p>"
      parameters: []
      responses:
        200:
          description: 'Accepted for async processing. Use List Networks to check status.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    success: true
                properties:
                  data:
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
        422:
          description: 'Validation error - Gateway is required.'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The gateway field is required.'
                  errors:
                    gateway:
                      - 'The gateway field is required.'
                properties:
                  message:
                    type: string
                    example: 'The gateway field is required.'
                  errors:
                    type: object
                    properties:
                      gateway:
                        type: array
                        example:
                          - 'The gateway field is required.'
                        items:
                          type: string
      tags:
        - Network
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                network_offering_id:
                  type: ulid
                  description: 'The ID of the network offering.'
                  example: 01H9ZCNF46W6C1EM45T21B6M0G
                  nullable: false
                name:
                  type: string
                  description: 'The name of the network.'
                  example: my-l3-network
                  nullable: false
                gateway:
                  type: ipv4
                  description: 'The gateway IP address.'
                  example: 192.168.1.1
                  nullable: false
                netmask:
                  type: ipv4
                  description: 'The netmask for the network.'
                  example: 255.255.255.0
                  nullable: false
              required:
                - network_offering_id
                - name
                - gateway
                - netmask
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
  '/zone/{zoneId}/network':
    get:
      summary: 'List Networks'
      operationId: listNetworks
      description: "  <aside class=\"notice\">Requires appropriate <small class=\"badge\">network:list</small> ability for API token</aside>\n  <p>Retrieves a list of all networks in the specified zone for the authenticated customer.</p>"
      parameters: []
      responses:
        200:
          description: 'Successful response with network list.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: network_id_1
                      name: network-1
                      status: Implemented
                      ip_config: []
                      ip_config_v6: []
                      network_offering:
                        id: offering_id_1
                        name: Offering1
                        displayname: Offering1
                        displayname_fa: Offering1
                        hourly_started_price: 0
                        traffic_transfer_overprice: 0
                        traffic_transfer_plan: 1000
                        networkrate: 200
                        type: Shared
                        description: ''
                        internet_protocol: IPv4
                      instance_network: []
                    -
                      id: network_id_2
                      name: network-2
                      status: Implemented
                      ip_config:
                        gateway: 10.0.0.1
                        netmask: 255.255.255.0
                      ip_config_v6:
                        gateway_v6: null
                        netmask_v6: null
                        route_gateway_v6: null
                        route_subnet_v6: null
                      network_offering:
                        id: offering_id_2
                        name: Offering2
                        displayname: Offering2
                        displayname_fa: Offering2
                        hourly_started_price: 10
                        traffic_transfer_overprice: 1
                        traffic_transfer_plan: 1000
                        networkrate: 250
                        type: Isolated
                        description: Offering2
                        internet_protocol: IPv4
                      instance_network:
                        -
                          id: instance_network_id_1
                          ipaddress: 10.0.0.52
                          ipaddress_v6: null
                          macaddress: '02:01:04:5e:00:04'
                          is_default: true
                          created_at: '2025-06-29T09:00:00.000000Z'
                          secondary_ips: []
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: network_id_1
                        name: network-1
                        status: Implemented
                        ip_config: []
                        ip_config_v6: []
                        network_offering:
                          id: offering_id_1
                          name: Offering1
                          displayname: Offering1
                          displayname_fa: Offering1
                          hourly_started_price: 0
                          traffic_transfer_overprice: 0
                          traffic_transfer_plan: 1000
                          networkrate: 200
                          type: Shared
                          description: ''
                          internet_protocol: IPv4
                        instance_network: []
                      -
                        id: network_id_2
                        name: network-2
                        status: Implemented
                        ip_config:
                          gateway: 10.0.0.1
                          netmask: 255.255.255.0
                        ip_config_v6:
                          gateway_v6: null
                          netmask_v6: null
                          route_gateway_v6: null
                          route_subnet_v6: null
                        network_offering:
                          id: offering_id_2
                          name: Offering2
                          displayname: Offering2
                          displayname_fa: Offering2
                          hourly_started_price: 10
                          traffic_transfer_overprice: 1
                          traffic_transfer_plan: 1000
                          networkrate: 250
                          type: Isolated
                          description: Offering2
                          internet_protocol: IPv4
                        instance_network:
                          -
                            id: instance_network_id_1
                            ipaddress: 10.0.0.52
                            ipaddress_v6: null
                            macaddress: '02:01:04:5e:00:04'
                            is_default: true
                            created_at: '2025-06-29T09:00:00.000000Z'
                            secondary_ips: []
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: network_id_1
                        name:
                          type: string
                          example: network-1
                        status:
                          type: string
                          example: Implemented
                        ip_config:
                          type: array
                          example: []
                        ip_config_v6:
                          type: array
                          example: []
                        network_offering:
                          type: object
                          properties:
                            id:
                              type: string
                              example: offering_id_1
                            name:
                              type: string
                              example: Offering1
                            displayname:
                              type: string
                              example: Offering1
                            displayname_fa:
                              type: string
                              example: Offering1
                            hourly_started_price:
                              type: integer
                              example: 0
                            traffic_transfer_overprice:
                              type: integer
                              example: 0
                            traffic_transfer_plan:
                              type: integer
                              example: 1000
                            networkrate:
                              type: integer
                              example: 200
                            type:
                              type: string
                              example: Shared
                            description:
                              type: string
                              example: ''
                            internet_protocol:
                              type: string
                              example: IPv4
                        instance_network:
                          type: array
                          example: []
      tags:
        - Network
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
  '/zone/{zoneId}/network/{networkId}':
    get:
      summary: 'Show Network'
      operationId: showNetwork
      description: "  <aside class=\"notice\">Requires appropriate <small class=\"badge\">network:show</small> ability for API token</aside>\n  <p>Retrieves details of a specific network by its ID in the specified zone.</p>"
      parameters: []
      responses:
        200:
          description: 'Successful response with network details (anonymous data).'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: network_id_anon
                    name: network-anonymous
                    status: Allocated
                    ip_config:
                      gateway: 192.0.2.1
                      netmask: 255.255.255.0
                    ip_config_v6:
                      gateway_v6: null
                      netmask_v6: null
                      route_gateway_v6: null
                      route_subnet_v6: null
                    network_offering:
                      id: offering_id_anon
                      name: OfferingAnon
                      displayname: OfferingAnon
                      displayname_fa: OfferingAnon
                      hourly_started_price: 0
                      traffic_transfer_overprice: 0
                      traffic_transfer_plan: 1000
                      networkrate: 100
                      type: Isolated
                      description: 'Anonymous offering'
                      internet_protocol: IPv4
                    instance_network: []
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: network_id_anon
                      name:
                        type: string
                        example: network-anonymous
                      status:
                        type: string
                        example: Allocated
                      ip_config:
                        type: object
                        properties:
                          gateway:
                            type: string
                            example: 192.0.2.1
                          netmask:
                            type: string
                            example: 255.255.255.0
                      ip_config_v6:
                        type: object
                        properties:
                          gateway_v6:
                            type: string
                            example: null
                          netmask_v6:
                            type: string
                            example: null
                          route_gateway_v6:
                            type: string
                            example: null
                          route_subnet_v6:
                            type: string
                            example: null
                      network_offering:
                        type: object
                        properties:
                          id:
                            type: string
                            example: offering_id_anon
                          name:
                            type: string
                            example: OfferingAnon
                          displayname:
                            type: string
                            example: OfferingAnon
                          displayname_fa:
                            type: string
                            example: OfferingAnon
                          hourly_started_price:
                            type: integer
                            example: 0
                          traffic_transfer_overprice:
                            type: integer
                            example: 0
                          traffic_transfer_plan:
                            type: integer
                            example: 1000
                          networkrate:
                            type: integer
                            example: 100
                          type:
                            type: string
                            example: Isolated
                          description:
                            type: string
                            example: 'Anonymous offering'
                          internet_protocol:
                            type: string
                            example: IPv4
                      instance_network:
                        type: array
                        example: []
      tags:
        - Network
    delete:
      summary: 'Delete Network'
      operationId: deleteNetwork
      description: "  <aside class=\"notice\">Requires appropriate <small class=\"badge\">network:delete</small> ability for API token</aside>\n  <p>Deletes a specific network by its ID in the specified zone.</p>"
      parameters: []
      responses:
        200:
          description: 'Successful deletion.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    success: true
                properties:
                  data:
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
      tags:
        - Network
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
      -
        in: path
        name: networkId
        description: 'The ID of the network.'
        example: 01H9ZCNF46W6C1EM45T21B6M0G
        required: true
        schema:
          type: ulid
  '/zone/{zoneId}/network/{networkId}/instance/connect':
    post:
      summary: 'Connect Instance to a network'
      operationId: connectInstanceToANetwork
      description: "Requires appropriate <small class=\"badge\">network:instance:connect</small> ability for API token</aside>\n<b>Note:</b> This function runs asynchronously in the background. The response will be:<br>\n  <pre>{\n    \"data\": {\n        \"success\": true\n    }\n  }</pre>\n  </p>\n  "
      parameters: []
      responses:
        200:
          description: 'Instance Connected to Network.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    success: true
                properties:
                  data:
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
      tags:
        - Network
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                instance_id:
                  type: string
                  description: 'The unique identifier for the instance to connect.'
                  example: 01F8MECHZX3RZ8Y6B8Q5F1E3V7
                  nullable: false
              required:
                - instance_id
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: consequuntur
        required: true
        schema:
          type: ulid
      -
        in: path
        name: networkId
        description: 'The ID of the network.'
        example: numquam
        required: true
        schema:
          type: ulid
  '/zone/{zoneId}/network/{networkId}/instance/disconnect':
    post:
      summary: 'Disconnect Instance to a network'
      operationId: disconnectInstanceToANetwork
      description: "Requires appropriate <small class=\"badge\">network:instance:disconnect</small> ability for API token</aside>\n<b>Note:</b> This function runs asynchronously in the background. The response will be:<br>\n  <pre>{\n    \"data\": {\n        \"success\": true\n    }\n  }</pre>\n  </p>\n  "
      parameters: []
      responses:
        200:
          description: 'Instance disconnected to Network.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    success: true
                properties:
                  data:
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
      tags:
        - Network
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                instance_network_id:
                  type: string
                  description: 'The unique identifier for the instance<->network relation to disconnect.'
                  example: 01F8MECHZX3RZ8Y6B8Q5F1E3V7
                  nullable: false
                instance_id:
                  type: string
                  description: 'The unique identifier for the instance to disconnect.'
                  example: 01F8MECHZX3RZ8Y6B8Q5F1E3V8
                  nullable: false
              required:
                - instance_network_id
                - instance_id
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: eaque
        required: true
        schema:
          type: ulid
      -
        in: path
        name: networkId
        description: 'The ID of the network.'
        example: voluptates
        required: true
        schema:
          type: ulid
  '/zone/{zoneId}/network/{networkId}/instance':
    get:
      summary: 'connected instances of network'
      operationId: connectedInstancesOfNetwork
      description: "Requires appropriate <small class=\"badge\">network:instance:show</small> ability for API token</aside>\n  "
      parameters: []
      responses:
        200:
          description: 'List of connected instances to network.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: instance_network_id
                      instance_id: instance_id
                      instance_name: instance_name
                      ipaddress: ip_address_v4
                      ipaddress_v6: ip_address_v6
                      macaddress: mac_address
                      is_default: true
                      created_at: 1234567890
                      network:
                        id: network_id
                        name: network_name
                        ip_config: []
                        ip_config_v6: []
                      network_offering:
                        id: network_offering_id
                        name: network_offering_name
                        displayname: network_offering_displayname
                        displayname_fa: network_offering_displayname_fa
                        hourly_started_price: 0
                        traffic_price_per_gig: 0
                        traffic_transfer_free_gig: 1000
                        networkrate: 200
                        type: network_type
                        description: network_description
                        internet_protocol: internet_protocol
                      secondary_ips: []
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: instance_network_id
                        instance_id: instance_id
                        instance_name: instance_name
                        ipaddress: ip_address_v4
                        ipaddress_v6: ip_address_v6
                        macaddress: mac_address
                        is_default: true
                        created_at: 1234567890
                        network:
                          id: network_id
                          name: network_name
                          ip_config: []
                          ip_config_v6: []
                        network_offering:
                          id: network_offering_id
                          name: network_offering_name
                          displayname: network_offering_displayname
                          displayname_fa: network_offering_displayname_fa
                          hourly_started_price: 0
                          traffic_price_per_gig: 0
                          traffic_transfer_free_gig: 1000
                          networkrate: 200
                          type: network_type
                          description: network_description
                          internet_protocol: internet_protocol
                        secondary_ips: []
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: instance_network_id
                        instance_id:
                          type: string
                          example: instance_id
                        instance_name:
                          type: string
                          example: instance_name
                        ipaddress:
                          type: string
                          example: ip_address_v4
                        ipaddress_v6:
                          type: string
                          example: ip_address_v6
                        macaddress:
                          type: string
                          example: mac_address
                        is_default:
                          type: boolean
                          example: true
                        created_at:
                          type: integer
                          example: 1234567890
                        network:
                          type: object
                          properties:
                            id:
                              type: string
                              example: network_id
                            name:
                              type: string
                              example: network_name
                            ip_config:
                              type: array
                              example: []
                            ip_config_v6:
                              type: array
                              example: []
                        network_offering:
                          type: object
                          properties:
                            id:
                              type: string
                              example: network_offering_id
                            name:
                              type: string
                              example: network_offering_name
                            displayname:
                              type: string
                              example: network_offering_displayname
                            displayname_fa:
                              type: string
                              example: network_offering_displayname_fa
                            hourly_started_price:
                              type: integer
                              example: 0
                            traffic_price_per_gig:
                              type: integer
                              example: 0
                            traffic_transfer_free_gig:
                              type: integer
                              example: 1000
                            networkrate:
                              type: integer
                              example: 200
                            type:
                              type: string
                              example: network_type
                            description:
                              type: string
                              example: network_description
                            internet_protocol:
                              type: string
                              example: internet_protocol
                        secondary_ips:
                          type: array
                          example: []
      tags:
        - Network
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                instance_id:
                  type: string
                  description: 'The unique identifier for the instance to show.'
                  example: 01F8MECHZX3RZ8Y6B8Q5F1E3V7
                  nullable: false
              required:
                - instance_id
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: corporis
        required: true
        schema:
          type: ulid
      -
        in: path
        name: networkId
        description: 'The ID of the network.'
        example: qui
        required: true
        schema:
          type: ulid
  '/zone/{zoneId}/network/{networkId}/firewall/ipv4':
    get:
      summary: 'List IPv4 Firewall Rules'
      operationId: listIPv4FirewallRules
      description: "  <aside class=\"notice\">need <small class=\"badge\">network:firewall:ipv4:list</small> ability for api token</aside>\n  <p>Retrieves a list of all IPv4 firewall rules associated with a specific network.</p>\n  <ul>\n    <li><b>id</b>: Unique identifier for the firewall rule.</li>\n    <li><b>network_public_ip_id</b>: The public IP address associated with the rule (if any).</li>\n    <li><b>protocol</b>: Network protocol (e.g., TCP, UDP, ICMP).</li>\n    <li><b>traffic_type</b>: Direction of traffic (<code>Ingress</code> for incoming, <code>Egress</code> for outgoing).</li>\n    <li><b>ip_source</b>: Source IP or CIDR range.</li>\n    <li><b>ip_destination</b>: Destination IP or CIDR range.</li>\n    <li><b>port_start</b>: Starting port (for TCP/UDP protocols).</li>\n    <li><b>port_end</b>: Ending port (for TCP/UDP protocols).</li>\n    <li><b>icmp_code</b>: ICMP code (for ICMP protocol).</li>\n    <li><b>icmp_type</b>: ICMP type (for ICMP protocol).</li>\n    <li><b>status</b>: Current status of the rule (e.g., Active).</li>\n    <li><b>created_at</b>: Timestamp when the rule was created.</li>\n  </ul>"
      parameters: []
      responses:
        200:
          description: 'Successful response with a list of IPv4 firewall rules.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: firewall-rule-id
                      network_public_ip_id: ip-public-id
                      protocol: ICMP
                      traffic_type: Ingress
                      ip_source: 0.0.0.0/0
                      ip_destination: 192.168.61.58
                      port_start: null
                      port_end: null
                      icmp_code: null
                      icmp_type: null
                      status: Active
                      created_at: '2025-06-30T13:15:35.000000Z'
                    -
                      id: firewall-rule-id
                      network_public_ip_id: null
                      protocol: UDP
                      traffic_type: Egress
                      ip_source: 192.168.1.0/24
                      ip_destination: 0.0.0.0/0
                      port_start: '0'
                      port_end: '65535'
                      icmp_code: null
                      icmp_type: null
                      status: Active
                      created_at: '2025-06-30T13:15:29.000000Z'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: firewall-rule-id
                        network_public_ip_id: ip-public-id
                        protocol: ICMP
                        traffic_type: Ingress
                        ip_source: 0.0.0.0/0
                        ip_destination: 192.168.61.58
                        port_start: null
                        port_end: null
                        icmp_code: null
                        icmp_type: null
                        status: Active
                        created_at: '2025-06-30T13:15:35.000000Z'
                      -
                        id: firewall-rule-id
                        network_public_ip_id: null
                        protocol: UDP
                        traffic_type: Egress
                        ip_source: 192.168.1.0/24
                        ip_destination: 0.0.0.0/0
                        port_start: '0'
                        port_end: '65535'
                        icmp_code: null
                        icmp_type: null
                        status: Active
                        created_at: '2025-06-30T13:15:29.000000Z'
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: firewall-rule-id
                        network_public_ip_id:
                          type: string
                          example: ip-public-id
                        protocol:
                          type: string
                          example: ICMP
                        traffic_type:
                          type: string
                          example: Ingress
                        ip_source:
                          type: string
                          example: 0.0.0.0/0
                        ip_destination:
                          type: string
                          example: 192.168.61.58
                        port_start:
                          type: string
                          example: null
                        port_end:
                          type: string
                          example: null
                        icmp_code:
                          type: string
                          example: null
                        icmp_type:
                          type: string
                          example: null
                        status:
                          type: string
                          example: Active
                        created_at:
                          type: string
                          example: '2025-06-30T13:15:35.000000Z'
        422:
          description: 'Validation error - Network ID is required.'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The network id field is required.'
                  errors:
                    network_id:
                      - 'The network id field is required.'
                properties:
                  message:
                    type: string
                    example: 'The network id field is required.'
                  errors:
                    type: object
                    properties:
                      network_id:
                        type: array
                        example:
                          - 'The network id field is required.'
                        items:
                          type: string
      tags:
        - Network
    post:
      summary: 'Create IPv4 Firewall Rule'
      operationId: createIPv4FirewallRule
      description: " <aside class=\"notice\">need <small class=\"badge\">network:firewall:ipv4:create</small> ability for api token</aside>\n <p>Creates a new firewall rule for IPv4 traffic on a given network.</p>"
      parameters: []
      responses:
        200:
          description: 'Successful creation of a new firewall rule.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    success: true
                properties:
                  data:
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
        422:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Validation error - Missing network_id.'
                    type: object
                    example:
                      message: 'The network id field is required.'
                    properties:
                      message:
                        type: string
                        example: 'The network id field is required.'
                  -
                    description: 'Validation error - Missing traffic_type.'
                    type: object
                    example:
                      message: 'The traffic type field is required.'
                    properties:
                      message:
                        type: string
                        example: 'The traffic type field is required.'
                  -
                    description: 'Validation error - Missing protocol_type.'
                    type: object
                    example:
                      message: 'The protocol type field is required.'
                    properties:
                      message:
                        type: string
                        example: 'The protocol type field is required.'
                  -
                    description: 'Validation error - Invalid CIDR format for ip_source.'
                    type: object
                    example:
                      message: 'The ip source must be a valid CIDR address.'
                    properties:
                      message:
                        type: string
                        example: 'The ip source must be a valid CIDR address.'
      tags:
        - Network
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                traffic_type:
                  type: string
                  description: 'The direction of traffic for the firewall rule.'
                  example: Ingress
                  nullable: false
                  enum:
                    - Ingress
                    - Egress
                protocol_type:
                  type: string
                  description: 'The protocol for the firewall rule.'
                  example: TCP
                  nullable: false
                  enum:
                    - TCP
                    - UDP
                    - ICMP
                public_ip_id:
                  type: string
                  description: 'The unique identifier for the public IP address (optional). This field is required when <code>traffic_type</code> is <code>Ingress</code>.'
                  example: 01F8MECHZX3RZ8Y6B8Q5F1E3V8
                  nullable: false
                ip_source:
                  type: string
                  description: 'The source IP address (optional).'
                  example: 192.168.1.10
                  nullable: true
                ip_destination:
                  type: string
                  description: 'The destination IP address (optional).'
                  example: 10.0.0.5
                  nullable: true
                port_start:
                  type: integer
                  description: 'The starting port number (optional).'
                  example: 80
                  nullable: true
                port_end:
                  type: integer
                  description: 'The ending port number (optional).'
                  example: 81
                  nullable: true
                icmp_code:
                  type: integer
                  description: 'The ICMP code (optional, used for ICMP protocol). This field is required when <code>protocol_type</code> is <code>ICMP</code>.'
                  example: 0
                  nullable: false
                icmp_type:
                  type: integer
                  description: 'The ICMP type (optional, used for ICMP protocol). This field is required when <code>protocol_type</code> is <code>ICMP</code>.'
                  example: 8
                  nullable: false
              required:
                - traffic_type
                - protocol_type
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
      -
        in: path
        name: networkId
        description: 'The ID of the network to fetch rules for.'
        example: 01H9ZCNF46W6C1EM45T21B6M0G
        required: true
        schema:
          type: ulid
  '/zone/{zoneId}/network/{networkId}/firewall/ipv4/{ruleId}':
    delete:
      summary: 'Delete IPv4 Firewall Rule'
      operationId: deleteIPv4FirewallRule
      description: " <aside class=\"notice\">need <small class=\"badge\">network:firewall:ipv4:delete</small> ability for api token</aside>\n <p>Deletes a specific IPv4 firewall rule by its ID.</p>"
      parameters: []
      responses:
        200:
          description: 'Successful deletion.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    success: true
                properties:
                  data:
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
      tags:
        - Network
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
      -
        in: path
        name: networkId
        description: 'The ID of the network to fetch rules for.'
        example: 01H9ZCNF46W6C1EM45T21B6M0G
        required: true
        schema:
          type: ulid
      -
        in: path
        name: ruleId
        description: 'The ID of the firewall rule to delete.'
        example: 01H9ZCPF46W6C1EM45T21B6M0H
        required: true
        schema:
          type: ulid
  '/zone/{zoneId}/network/{networkId}/firewall/ipv6':
    get:
      summary: 'List IPv6 Firewall Rules'
      operationId: listIPv6FirewallRules
      description: "  <aside class=\"notice\">need <small class=\"badge\">network:firewall:ipv6:list</small> ability for api token</aside>\n  <p>Retrieves a list of all IPv6 firewall rules associated with a specific network.</p>\n  <ul>\n    <li><b>id</b>: Unique identifier for the firewall rule.</li>\n    <li><b>protocol</b>: Network protocol (e.g., TCP, UDP, ICMP).</li>\n    <li><b>traffic_type</b>: Direction of traffic (<code>Ingress</code> for incoming, <code>Egress</code> for outgoing).</li>\n    <li><b>ip_source</b>: Source IPv6 or CIDR range.</li>\n    <li><b>ip_destination</b>: Destination IPv6 or CIDR range.</li>\n    <li><b>port_start</b>: Starting port (for TCP/UDP protocols).</li>\n    <li><b>port_end</b>: Ending port (for TCP/UDP protocols).</li>\n    <li><b>icmp_code</b>: ICMP code (for ICMP protocol).</li>\n    <li><b>icmp_type</b>: ICMP type (for ICMP protocol).</li>\n    <li><b>status</b>: Current status of the rule (e.g., Active).</li>\n    <li><b>created_at</b>: Timestamp when the rule was created.</li>\n  </ul>"
      parameters: []
      responses:
        200:
          description: 'Successful response with a list of IPv6 firewall rules.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: firewall-rule-id-1
                      protocol: ICMP
                      traffic_type: Ingress
                      ip_source: '::/0'
                      ip_destination: '::/0'
                      port_start: null
                      port_end: null
                      icmp_code: null
                      icmp_type: null
                      status: Active
                      created_at: '2025-06-30T14:35:07.000000Z'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: firewall-rule-id-1
                        protocol: ICMP
                        traffic_type: Ingress
                        ip_source: '::/0'
                        ip_destination: '::/0'
                        port_start: null
                        port_end: null
                        icmp_code: null
                        icmp_type: null
                        status: Active
                        created_at: '2025-06-30T14:35:07.000000Z'
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: firewall-rule-id-1
                        protocol:
                          type: string
                          example: ICMP
                        traffic_type:
                          type: string
                          example: Ingress
                        ip_source:
                          type: string
                          example: '::/0'
                        ip_destination:
                          type: string
                          example: '::/0'
                        port_start:
                          type: string
                          example: null
                        port_end:
                          type: string
                          example: null
                        icmp_code:
                          type: string
                          example: null
                        icmp_type:
                          type: string
                          example: null
                        status:
                          type: string
                          example: Active
                        created_at:
                          type: string
                          example: '2025-06-30T14:35:07.000000Z'
        422:
          description: 'Validation error - Network ID is required.'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The network id field is required.'
                  errors:
                    network_id:
                      - 'The network id field is required.'
                properties:
                  message:
                    type: string
                    example: 'The network id field is required.'
                  errors:
                    type: object
                    properties:
                      network_id:
                        type: array
                        example:
                          - 'The network id field is required.'
                        items:
                          type: string
      tags:
        - Network
    post:
      summary: 'Create IPv6 Firewall Rule'
      operationId: createIPv6FirewallRule
      description: " <aside class=\"notice\">need <small class=\"badge\">network:firewall:ipv6:create</small> ability for api token</aside>\n <p>Creates a new firewall rule for IPv6 traffic on a given network.</p>"
      parameters: []
      responses:
        201:
          description: 'Successful creation of a new IPv6 firewall rule.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    success: true
                properties:
                  data:
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
      tags:
        - Network
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                traffic_type:
                  type: string
                  description: 'The direction of traffic for the firewall rule.'
                  example: Ingress
                  nullable: false
                  enum:
                    - Ingress
                    - Egress
                protocol_type:
                  type: string
                  description: 'The protocol for the firewall rule.'
                  example: TCP
                  nullable: false
                  enum:
                    - TCP
                    - UDP
                    - ICMP
                ip_source:
                  type: string
                  description: 'The source IPv6 address (optional).'
                  example: '2001:db8::1'
                  nullable: true
                ip_destination:
                  type: string
                  description: 'The destination IPv6 address (optional).'
                  example: '2001:db8::2'
                  nullable: true
                port_start:
                  type: string
                  description: 'The starting port number (optional).'
                  example: 80
                  nullable: true
                port_end:
                  type: string
                  description: 'The ending port number (optional).'
                  example: 81
                  nullable: true
                icmp_code:
                  type: string
                  description: 'The ICMP code (optional, used for ICMP protocol).'
                  example: 0
                  nullable: true
                icmp_type:
                  type: string
                  description: 'The ICMP type (optional, used for ICMP protocol).'
                  example: 128
                  nullable: true
              required:
                - traffic_type
                - protocol_type
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
      -
        in: path
        name: networkId
        description: 'The ID of the network to fetch rules for.'
        example: 01H9ZCNF46W6C1EM45T21B6M0G
        required: true
        schema:
          type: ulid
  '/zone/{zoneId}/network/{networkId}/firewall/ipv6/{ruleId}':
    delete:
      summary: 'Delete IPv6 Firewall Rule'
      operationId: deleteIPv6FirewallRule
      description: " <aside class=\"notice\">need <small class=\"badge\">network:firewall:ipv6:delete</small> ability for api token</aside>\n <p>Deletes a specific IPv6 firewall rule by its ID.</p>"
      parameters: []
      responses:
        200:
          description: 'Successful deletion.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    success: true
                properties:
                  data:
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
        422:
          description: 'Validation error - Rule ID is required.'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The id field is required.'
                properties:
                  message:
                    type: string
                    example: 'The id field is required.'
      tags:
        - Network
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
      -
        in: path
        name: networkId
        description: 'The ID of the network to fetch rules for.'
        example: 01H9ZCNF46W6C1EM45T21B6M0G
        required: true
        schema:
          type: ulid
      -
        in: path
        name: ruleId
        description: 'The ID of the firewall rule to delete.'
        example: 01H9ZCPF46W6C1EM45T21B6M0H
        required: true
        schema:
          type: ulid
  '/zone/{zoneId}/network/{networkId}/public-ip':
    get:
      summary: 'List Public IP Instances'
      operationId: listPublicIPInstances
      description: 'List all public IPs associated with a network in a zone.'
      parameters: []
      responses:
        200:
          description: 'Successful response.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 01JZYQKPXBKGC08BNV5Z23BRE2
                      network_id: 01H9ZCNF46W6C1EM45T21B6M0G
                      ipaddress: 192.168.1.71
                      is_sourcenat: true
                      created_at: 1752304311
                      staticnat_enable: false
                      staticnat: []
                    -
                      id: 01JZYQQA8V0EYT80J02N717NBW
                      network_id: 01H9ZCNF46W6C1EM45T21B6M0G
                      ipaddress: 192.168.1.60
                      is_sourcenat: false
                      created_at: 1752304429
                      staticnat_enable: false
                      staticnat: []
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 01JZYQKPXBKGC08BNV5Z23BRE2
                        network_id: 01H9ZCNF46W6C1EM45T21B6M0G
                        ipaddress: 192.168.1.71
                        is_sourcenat: true
                        created_at: 1752304311
                        staticnat_enable: false
                        staticnat: []
                      -
                        id: 01JZYQQA8V0EYT80J02N717NBW
                        network_id: 01H9ZCNF46W6C1EM45T21B6M0G
                        ipaddress: 192.168.1.60
                        is_sourcenat: false
                        created_at: 1752304429
                        staticnat_enable: false
                        staticnat: []
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: 01JZYQKPXBKGC08BNV5Z23BRE2
                        network_id:
                          type: string
                          example: 01H9ZCNF46W6C1EM45T21B6M0G
                        ipaddress:
                          type: string
                          example: 192.168.1.71
                        is_sourcenat:
                          type: boolean
                          example: true
                        created_at:
                          type: integer
                          example: 1752304311
                        staticnat_enable:
                          type: boolean
                          example: false
                        staticnat:
                          type: array
                          example: []
      tags:
        - Network
    post:
      summary: 'Associate Public IP'
      operationId: associatePublicIP
      description: "Associate a new public IP address to a network.\n    <b>Note:</b> This function runs asynchronously in the background. The response will be:<br>\n  <pre>{\n    \"data\": {\n        \"success\": true\n    }\n  }</pre>\n  To check the status of the created public ip, use the <b>List Public IPs</b> endpoint and review.\n  </p>"
      parameters: []
      responses:
        200:
          description: 'Successful association.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    success: true
                properties:
                  data:
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
      tags:
        - Network
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
      -
        in: path
        name: networkId
        description: 'The ID of the network.'
        example: 01H9ZCNF46W6C1EM45T21B6M0G
        required: true
        schema:
          type: ulid
  '/zone/{zoneId}/network/{networkId}/public-ip/{networkPublicIpId}':
    delete:
      summary: 'Disassociate Public IP'
      operationId: disassociatePublicIP
      description: "Disassociate a public IP address from a network.\n    <b>Note:</b> This function runs asynchronously in the background. The response will be:<br>\n  <pre>{\n    \"data\": {\n        \"success\": true\n    }\n  }</pre>\n  To check the status of the created public ip, use the <b>List Public IPs</b> endpoint and review.\n  </p>"
      parameters: []
      responses:
        200:
          description: 'Successful disassociation.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    success: true
                properties:
                  data:
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
      tags:
        - Network
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: mollitia
        required: true
        schema:
          type: ulid
      -
        in: path
        name: networkId
        description: 'The ID of the network.'
        example: commodi
        required: true
        schema:
          type: ulid
      -
        in: path
        name: networkPublicIpId
        description: 'The ID of the public IP.'
        example: qui
        required: true
        schema:
          type: ulid
  '/zone/{zoneId}/network/{networkId}/public-ip/{networkPublicIpId}/static-nat':
    post:
      summary: 'Enable Static NAT'
      operationId: enableStaticNAT
      description: "Enable static NAT for a public IP.\n    <b>Note:</b> This function runs asynchronously in the background. The response will be:<br>\n  <pre>{\n    \"data\": {\n        \"success\": true\n    }\n  }</pre>\n  To check the status of the created public ip, use the <b>List Public IPs</b> endpoint and review.\n  </p>\n  "
      parameters: []
      responses:
        200:
          description: 'Static NAT enabled.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    success: true
                properties:
                  data:
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
      tags:
        - Network
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                instance_id:
                  type: string
                  description: 'The instance CS ID.'
                  example: ipsam
                  nullable: false
              required:
                - instance_id
    delete:
      summary: 'Disable Static NAT'
      operationId: disableStaticNAT
      description: "Disable static NAT for a public IP.\n        <b>Note:</b> This function runs asynchronously in the background. The response will be:<br>\n  <pre>{\n    \"data\": {\n        \"success\": true\n    }\n  }</pre>\n  To check the status of the created public ip, use the <b>List Public IPs</b> endpoint and review.\n  </p>\n  "
      parameters: []
      responses:
        200:
          description: 'Static NAT disabled.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    success: true
                properties:
                  data:
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
      tags:
        - Network
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: eum
        required: true
        schema:
          type: ulid
      -
        in: path
        name: networkId
        description: 'The ID of the network.'
        example: veritatis
        required: true
        schema:
          type: ulid
      -
        in: path
        name: networkPublicIpId
        description: 'The ID of the public IP.'
        example: autem
        required: true
        schema:
          type: ulid
  '/zone/{zoneId}/network/{networkId}/port-forward/{networkPublicIpId}':
    get:
      summary: 'List Port Forward Rules'
      operationId: listPortForwardRules
      description: 'Get a list of port forward rules for a network.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 01jz0pkxe7phb41cchw1hpk6dt
                      instance_ipaddress: 192.168.1.103
                      network_public_ip:
                        id: 01jz0m8znysysxak6vhk8zfy9m
                        network_id: 01jz0m6cwk2m7jz67x5krjwgct
                        ipaddress: 193.246.200.17
                        is_sourcenat: true
                        created_at: '2025-06-30T14:36:21.000000Z'
                        staticnat: []
                      network:
                        id: 01jz0m6cwk2m7jz67x5krjwgct
                        name: test-for-firewall-ipv6
                        status: Implementing
                        ip_config:
                          gateway: 192.168.1.1
                          netmask: 255.255.255.0
                        ip_config_v6:
                          gateway_v6: '2a04:acc0:18:61d8::1'
                          netmask_v6: '2a04:acc0:18:61d8::/64'
                          route_gateway_v6: '2001:470:1f08:a27:1c00:fcff:fe00:75'
                          route_subnet_v6: '2a04:acc0:18:61d8::/64'
                        network_offering:
                          id: 01he2s0n9ywg5yepr7vezjqtkf
                          name: ipv6
                          displayname: 'روتر مجازی با آیپی ورژن ۶'
                          displayname_fa: ipv6
                          hourly_started_price: 10000
                          traffic_transfer_overprice: 1000
                          traffic_transfer_plan: 1
                          networkrate: 250
                          type: Isolated
                          description: ''
                          internet_protocol: DualStack
                      instance:
                        id: 01jz0m8z7ge1m0yqmnjyyvnpn4
                        instance_cs_id: b28049a1-5f13-4950-b6e5-c5c926e10cc9
                        ipaddress: 192.168.1.103
                        ipaddress_v6: '2a04:acc0:18:61d8:0:70ff:fe04:1'
                        macaddress: '02:00:70:04:00:01'
                        is_default: false
                        created_at: '2025-06-30T14:36:20.000000Z'
                        secondary_ips: []
                      protocol: TCP
                      port_start_public: 1
                      port_end_public: 2
                      port_start_private: 1
                      port_end_private: 2
                      status: Active
                      created_at: '2025-06-30T15:17:16.000000Z'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 01jz0pkxe7phb41cchw1hpk6dt
                        instance_ipaddress: 192.168.1.103
                        network_public_ip:
                          id: 01jz0m8znysysxak6vhk8zfy9m
                          network_id: 01jz0m6cwk2m7jz67x5krjwgct
                          ipaddress: 193.246.200.17
                          is_sourcenat: true
                          created_at: '2025-06-30T14:36:21.000000Z'
                          staticnat: []
                        network:
                          id: 01jz0m6cwk2m7jz67x5krjwgct
                          name: test-for-firewall-ipv6
                          status: Implementing
                          ip_config:
                            gateway: 192.168.1.1
                            netmask: 255.255.255.0
                          ip_config_v6:
                            gateway_v6: '2a04:acc0:18:61d8::1'
                            netmask_v6: '2a04:acc0:18:61d8::/64'
                            route_gateway_v6: '2001:470:1f08:a27:1c00:fcff:fe00:75'
                            route_subnet_v6: '2a04:acc0:18:61d8::/64'
                          network_offering:
                            id: 01he2s0n9ywg5yepr7vezjqtkf
                            name: ipv6
                            displayname: 'روتر مجازی با آیپی ورژن ۶'
                            displayname_fa: ipv6
                            hourly_started_price: 10000
                            traffic_transfer_overprice: 1000
                            traffic_transfer_plan: 1
                            networkrate: 250
                            type: Isolated
                            description: ''
                            internet_protocol: DualStack
                        instance:
                          id: 01jz0m8z7ge1m0yqmnjyyvnpn4
                          instance_cs_id: b28049a1-5f13-4950-b6e5-c5c926e10cc9
                          ipaddress: 192.168.1.103
                          ipaddress_v6: '2a04:acc0:18:61d8:0:70ff:fe04:1'
                          macaddress: '02:00:70:04:00:01'
                          is_default: false
                          created_at: '2025-06-30T14:36:20.000000Z'
                          secondary_ips: []
                        protocol: TCP
                        port_start_public: 1
                        port_end_public: 2
                        port_start_private: 1
                        port_end_private: 2
                        status: Active
                        created_at: '2025-06-30T15:17:16.000000Z'
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: 01jz0pkxe7phb41cchw1hpk6dt
                        instance_ipaddress:
                          type: string
                          example: 192.168.1.103
                        network_public_ip:
                          type: object
                          properties:
                            id:
                              type: string
                              example: 01jz0m8znysysxak6vhk8zfy9m
                            network_id:
                              type: string
                              example: 01jz0m6cwk2m7jz67x5krjwgct
                            ipaddress:
                              type: string
                              example: 193.246.200.17
                            is_sourcenat:
                              type: boolean
                              example: true
                            created_at:
                              type: string
                              example: '2025-06-30T14:36:21.000000Z'
                            staticnat:
                              type: array
                              example: []
                        network:
                          type: object
                          properties:
                            id:
                              type: string
                              example: 01jz0m6cwk2m7jz67x5krjwgct
                            name:
                              type: string
                              example: test-for-firewall-ipv6
                            status:
                              type: string
                              example: Implementing
                            ip_config:
                              type: object
                              properties:
                                gateway:
                                  type: string
                                  example: 192.168.1.1
                                netmask:
                                  type: string
                                  example: 255.255.255.0
                            ip_config_v6:
                              type: object
                              properties:
                                gateway_v6:
                                  type: string
                                  example: '2a04:acc0:18:61d8::1'
                                netmask_v6:
                                  type: string
                                  example: '2a04:acc0:18:61d8::/64'
                                route_gateway_v6:
                                  type: string
                                  example: '2001:470:1f08:a27:1c00:fcff:fe00:75'
                                route_subnet_v6:
                                  type: string
                                  example: '2a04:acc0:18:61d8::/64'
                            network_offering:
                              type: object
                              properties:
                                id:
                                  type: string
                                  example: 01he2s0n9ywg5yepr7vezjqtkf
                                name:
                                  type: string
                                  example: ipv6
                                displayname:
                                  type: string
                                  example: 'روتر مجازی با آیپی ورژن ۶'
                                displayname_fa:
                                  type: string
                                  example: ipv6
                                hourly_started_price:
                                  type: integer
                                  example: 10000
                                traffic_transfer_overprice:
                                  type: integer
                                  example: 1000
                                traffic_transfer_plan:
                                  type: integer
                                  example: 1
                                networkrate:
                                  type: integer
                                  example: 250
                                type:
                                  type: string
                                  example: Isolated
                                description:
                                  type: string
                                  example: ''
                                internet_protocol:
                                  type: string
                                  example: DualStack
                        instance:
                          type: object
                          properties:
                            id:
                              type: string
                              example: 01jz0m8z7ge1m0yqmnjyyvnpn4
                            instance_cs_id:
                              type: string
                              example: b28049a1-5f13-4950-b6e5-c5c926e10cc9
                            ipaddress:
                              type: string
                              example: 192.168.1.103
                            ipaddress_v6:
                              type: string
                              example: '2a04:acc0:18:61d8:0:70ff:fe04:1'
                            macaddress:
                              type: string
                              example: '02:00:70:04:00:01'
                            is_default:
                              type: boolean
                              example: false
                            created_at:
                              type: string
                              example: '2025-06-30T14:36:20.000000Z'
                            secondary_ips:
                              type: array
                              example: []
                        protocol:
                          type: string
                          example: TCP
                        port_start_public:
                          type: integer
                          example: 1
                        port_end_public:
                          type: integer
                          example: 2
                        port_start_private:
                          type: integer
                          example: 1
                        port_end_private:
                          type: integer
                          example: 2
                        status:
                          type: string
                          example: Active
                        created_at:
                          type: string
                          example: '2025-06-30T15:17:16.000000Z'
      tags:
        - Network
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                public_ip_id:
                  type: string
                  description: 'The public IP ULID to filter by (optional).'
                  example: mollitia
                  nullable: false
              required:
                - public_ip_id
    post:
      summary: 'Add Port Forward Rule'
      operationId: addPortForwardRule
      description: 'Add a new port forward rule to a network.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  data:
                    rule_id: 01HZYKJ8QK8ZJ6K8J6K8J6K8J6
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      rule_id:
                        type: string
                        example: 01HZYKJ8QK8ZJ6K8J6K8J6K8J6
      tags:
        - Network
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                network_id:
                  type: string
                  description: 'The unique identifier for the network.'
                  example: 01F8MECHZX3RZ8Y6B8Q5F1E3V7
                  nullable: false
                public_ip_id:
                  type: string
                  description: 'The unique identifier for the public IP address.'
                  example: 01F8MECHZX3RZ8Y6B8Q5F1E3V8
                  nullable: false
                protocol_type:
                  type: string
                  description: 'The protocol type (TCP or UDP).'
                  example: TCP
                  nullable: false
                instance_id:
                  type: string
                  description: 'The instance UUID.'
                  example: 01HZYKJ8QK8ZJ6K8J6K8J6K8J6
                  nullable: false
                port_start_public:
                  type: integer
                  description: 'The starting public port.'
                  example: 8080
                  nullable: false
                port_start_private:
                  type: integer
                  description: 'The starting private port.'
                  example: 80
                  nullable: false
                port_end_public:
                  type: integer
                  description: 'The ending public port (optional).'
                  example: 17
                  nullable: false
                port_end_private:
                  type: integer
                  description: 'The ending private port (optional).'
                  example: 8
                  nullable: false
                instance_network_secondary_ip_id:
                  type: string
                  description: 'The unique identifier for the secondary IP address (optional).'
                  example: 01F8MECHZX3RZ8Y6B8Q5F1E3V9
                  nullable: true
              required:
                - network_id
                - public_ip_id
                - protocol_type
                - instance_id
                - port_start_public
                - port_start_private
                - port_end_public
                - port_end_private
    parameters:
      -
        in: path
        name: zoneId
        description: 'The zone ULID.'
        example: 01HZYKJ8QK8ZJ6K8J6K8J6K8J6
        required: true
        schema:
          type: string
      -
        in: path
        name: networkId
        description: 'The network ULID.'
        example: 01HZYKJ8QK8ZJ6K8J6K8J6K8J6
        required: true
        schema:
          type: string
      -
        in: path
        name: networkPublicIpId
        description: 'The ID of the public IP.'
        example: 01HZYKJ8QK8ZJ6K8J6K8J6K8J6
        required: true
        schema:
          type: ulid
  '/zone/{zoneId}/network/{networkId}/port-forward/{networkPublicIpId}/{portforwardId}':
    delete:
      summary: 'Delete Port Forward Rule'
      operationId: deletePortForwardRule
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    success: true
                properties:
                  data:
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
      tags:
        - Network
    parameters:
      -
        in: path
        name: zoneId
        description: 'The zone ULID.'
        example: 01HZYKJ8QK8ZJ6K8J6K8J6K8J6
        required: true
        schema:
          type: string
      -
        in: path
        name: networkId
        description: 'The network ULID.'
        example: 01HZYKJ8QK8ZJ6K8J6K8J6K8J6
        required: true
        schema:
          type: string
      -
        in: path
        name: networkPublicIpId
        description: 'The ID of the public IP.'
        example: 01HZYKJ8QK8ZJ6K8J6K8J6K8J6
        required: true
        schema:
          type: ulid
      -
        in: path
        name: portforwardId
        description: 'The port forward rule ULID.'
        example: 01HZYKJ8QK8ZJ6K8J6K8J6K8J6
        required: true
        schema:
          type: string
  '/zone/{zoneId}/network/{networkId}/vpn':
    get:
      summary: 'VPN Detail'
      operationId: vPNDetail
      description: "  <aside class=\"notice\">need <small class=\"badge\">network:vpn:show</small> ability for api token</aside>\n   <p>By Default L2TP/IPsec VPN is disable for all networks. You can use the credentials to connect to the VPN server. The credentials include an IP address, username, password, and pre-shared key (PSK).<br></p>"
      parameters: []
      responses:
        200:
          description: 'VPN details retrieved successfully.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    ipaddress: 192.168.1.2
                    username: ''
                    password: ''
                    presharedkey: ''
                    status: Deactive
                properties:
                  data:
                    type: object
                    properties:
                      ipaddress:
                        type: string
                        example: 192.168.1.2
                      username:
                        type: string
                        example: ''
                      password:
                        type: string
                        example: ''
                      presharedkey:
                        type: string
                        example: ''
                      status:
                        type: string
                        example: Deactive
      tags:
        - Network
    put:
      summary: 'Update VPN Credentials'
      operationId: updateVPNCredentials
      description: "  <aside class=\"notice\">need <small class=\"badge\">network:vpn:update</small> ability for api token</aside>\n<b>Note:</b> This function runs asynchronously in the background. The response will be:<br>\n  <pre>{\n    \"data\": {\n        \"success\": true\n    }\n  }</pre>\n  To check the status of the new vpn credentials, use the <b>VPN Details</b> endpoint."
      parameters: []
      responses:
        200:
          description: 'VPN credentials updated successfully.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    success: true
                properties:
                  data:
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
      tags:
        - Network
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
      -
        in: path
        name: networkId
        description: 'The ID of the network.'
        example: 01H9ZCNF46W6C1EM45T21B6M0G
        required: true
        schema:
          type: ulid
  '/zone/{zoneId}/network/{networkId}/vpn/enable':
    post:
      summary: 'Enable VPN'
      operationId: enableVPN
      description: "  <aside class=\"notice\">need <small class=\"badge\">network:vpn:enable</small> ability for api token</aside>\n  <b>Note:</b> This function runs asynchronously in the background. The response will be:<br>\n  <pre>{\n    \"data\": {\n        \"success\": true\n    }\n  }</pre>\n  To check the status of the enabled vpn and its credentials, use the <b>VPN Details</b> endpoint.\n"
      parameters: []
      responses:
        200:
          description: 'VPN enabled successfully.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    success: true
                properties:
                  data:
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
      tags:
        - Network
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
      -
        in: path
        name: networkId
        description: 'The ID of the network.'
        example: 01H9ZCNF46W6C1EM45T21B6M0G
        required: true
        schema:
          type: ulid
  '/zone/{zoneId}/network/{networkId}/vpn/disable':
    post:
      summary: 'Disable VPN'
      operationId: disableVPN
      description: "  <aside class=\"notice\">need <small class=\"badge\">network:vpn:disable</small> ability for api token</aside>\n<b>Note:</b> This function runs asynchronously in the background. The response will be:<br>\n  <pre>{\n    \"data\": {\n        \"success\": true\n    }\n  }</pre>\n  To check the status of the disabled vpn, use the <b>VPN Details</b> endpoint."
      parameters: []
      responses:
        200:
          description: 'VPN disabled successfully.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    success: true
                properties:
                  data:
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
      tags:
        - Network
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
      -
        in: path
        name: networkId
        description: 'The ID of the network.'
        example: 01H9ZCNF46W6C1EM45T21B6M0G
        required: true
        schema:
          type: ulid
  '/zone/{zoneId}/network/{networkId}/load-balancer':
    get:
      summary: 'List Load Balancing Rules'
      operationId: listLoadBalancingRules
      description: 'Retrieves all load balancing rules for a network.'
      parameters: []
      responses:
        200:
          description: 'List of load balancing rules.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: rule_id
                      name: lb-rule
                      algorithm: roundrobin
                      public_port: 80
                      private_port: 8080
                      status: Active
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: rule_id
                        name: lb-rule
                        algorithm: roundrobin
                        public_port: 80
                        private_port: 8080
                        status: Active
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: rule_id
                        name:
                          type: string
                          example: lb-rule
                        algorithm:
                          type: string
                          example: roundrobin
                        public_port:
                          type: integer
                          example: 80
                        private_port:
                          type: integer
                          example: 8080
                        status:
                          type: string
                          example: Active
      tags:
        - Network
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
      -
        in: path
        name: networkId
        description: 'The ID of the network.'
        example: 01H9ZCNF46W6C1EM45T21B6M0G
        required: true
        schema:
          type: ulid
  '/zone/{zoneId}/network/{networkId}/load-balancer/rule':
    post:
      summary: 'Add Load Balancing Rule'
      operationId: addLoadBalancingRule
      description: 'Creates a new load balancing rule for a network.'
      parameters: []
      responses:
        200:
          description: 'Rule created successfully.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    success: true
                properties:
                  data:
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
      tags:
        - Network
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                public_ip_id:
                  type: ulid
                  description: 'The ID of the public IP.'
                  example: 01HZYKJ8QK8ZJ6K8J6K8J6K8J6
                  nullable: false
                name:
                  type: string
                  description: 'The name of the rule.'
                  example: web-lb
                  nullable: false
                algorithm:
                  type: string
                  description: 'Load balancing algorithm.'
                  example: roundrobin
                  nullable: false
                public_port:
                  type: integer
                  description: 'Public port.'
                  example: 80
                  nullable: false
                private_port:
                  type: integer
                  description: 'Private port.'
                  example: 8080
                  nullable: false
              required:
                - public_ip_id
                - name
                - algorithm
                - public_port
                - private_port
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
      -
        in: path
        name: networkId
        description: 'The ID of the network.'
        example: 01H9ZCNF46W6C1EM45T21B6M0G
        required: true
        schema:
          type: ulid
  '/zone/{zoneId}/network/{networkId}/load-balancer/rule/{loadBalanceRuleId}':
    delete:
      summary: 'Delete Load Balancing Rule'
      operationId: deleteLoadBalancingRule
      description: 'Deletes a load balancing rule by its ID.'
      parameters: []
      responses:
        200:
          description: 'Rule deleted successfully.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    success: true
                properties:
                  data:
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
      tags:
        - Network
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
      -
        in: path
        name: networkId
        description: 'The ID of the network.'
        example: 01H9ZCNF46W6C1EM45T21B6M0G
        required: true
        schema:
          type: ulid
      -
        in: path
        name: loadBalanceRuleId
        description: 'The ID of the load balancing rule.'
        example: 01HZYKJ8QK8ZJ6K8J6K8J6K8J6
        required: true
        schema:
          type: ulid
  '/zone/{zoneId}/network/{networkId}/load-balancer/rule/{loadBalanceRuleId}/assign':
    post:
      summary: 'Assign Load Balancing Rule'
      operationId: assignLoadBalancingRule
      description: 'Assigns instances to a load balancing rule.'
      parameters: []
      responses:
        200:
          description: 'Instances assigned successfully.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    success: true
                properties:
                  data:
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
      tags:
        - Network
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                instance_network_ids:
                  type: array
                  description: 'Array of instance network IDs.'
                  example: '["01HZYKJ8QK8ZJ6K8J6K8J6K8J6"]'
                  items:
                    type: string
              required:
                - instance_network_ids
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
      -
        in: path
        name: networkId
        description: 'The ID of the network.'
        example: 01H9ZCNF46W6C1EM45T21B6M0G
        required: true
        schema:
          type: ulid
      -
        in: path
        name: loadBalanceRuleId
        description: 'The ID of the load balancing rule.'
        example: 01HZYKJ8QK8ZJ6K8J6K8J6K8J6
        required: true
        schema:
          type: ulid
  '/zone/{zoneId}/network/{networkId}/load-balancer/rule/{loadBalanceRuleId}/de-assign':
    post:
      summary: 'De-Assign Load Balancing Rule'
      operationId: deAssignLoadBalancingRule
      description: 'Removes an instance from a load balancing rule.'
      parameters: []
      responses:
        200:
          description: 'Instance de-assigned successfully.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    success: true
                properties:
                  data:
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
      tags:
        - Network
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                instance_network_id:
                  type: ulid
                  description: 'The instance network ID to remove.'
                  example: 01HZYKJ8QK8ZJ6K8J6K8J6K8J6
                  nullable: false
              required:
                - instance_network_id
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
      -
        in: path
        name: networkId
        description: 'The ID of the network.'
        example: 01H9ZCNF46W6C1EM45T21B6M0G
        required: true
        schema:
          type: ulid
      -
        in: path
        name: loadBalanceRuleId
        description: 'The ID of the load balancing rule.'
        example: 01HZYKJ8QK8ZJ6K8J6K8J6K8J6
        required: true
        schema:
          type: ulid
  '/zone/{zoneId}/network/{networkId}/ha/live':
    get:
      summary: 'HAProxy Live Report'
      operationId: hAProxyLiveReport
      description: 'Retrieves live HAProxy statistics for the network.'
      parameters: []
      responses:
        200:
          description: 'Live HAProxy stats.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    updated_at: 1752566580
                    rules: []
                properties:
                  data:
                    type: object
                    properties:
                      updated_at:
                        type: integer
                        example: 1752566580
                      rules:
                        type: array
                        example: []
      tags:
        - Network
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
      -
        in: path
        name: networkId
        description: 'The ID of the network.'
        example: 01H9ZCNF46W6C1EM45T21B6M0G
        required: true
        schema:
          type: ulid
  '/zone/{zoneId}/network/{networkId}/ha/log':
    get:
      summary: 'HAProxy Log Report'
      operationId: hAProxyLogReport
      description: 'Retrieves HAProxy logs for the network.'
      parameters: []
      responses:
        200:
          description: 'HAProxy logs.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                properties:
                  data:
                    type: array
                    example: []
      tags:
        - Network
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
      -
        in: path
        name: networkId
        description: 'The ID of the network.'
        example: 01H9ZCNF46W6C1EM45T21B6M0G
        required: true
        schema:
          type: ulid
  '/zone/{zoneId}/network/service-offering':
    get:
      summary: 'List Network Offering'
      operationId: listNetworkOffering
      description: "  <aside class=\"notice\">need <small class=\"badge\">network:service-offering:list</small> ability for api token</aside>\n  <br>\n  <b>Response fields:</b>\n  <ul>\n    <li><b>id</b>: Unique identifier of the network offering.</li>\n    <li><b>name</b>: Internal name of the network offering.</li>\n    <li><b>displayname</b>: Display name (EN).</li>\n    <li><b>displayname_fa</b>: Display name (FA).</li>\n    <li><b>hourly_started_price</b>: Cost per hour in Toman.</li>\n    <li><b>traffic_transfer_overprice</b>: Price of each extra gigabyte of traffic (Toman).</li>\n    <li><b>traffic_transfer_free_gig</b>: Free network transfer in gigabytes.</li>\n    <li><b>networkrate</b>: Network bandwidth in megabits per second (Mbps).</li>\n    <li><b>type</b>: Network type. <b>Shared</b> (default network), <b>L2</b> (Layer 2 switch network), or <b>Isolated</b> (Layer 3 switch network).</li>\n    <li><b>description</b>: Description of the network offering.</li>\n    <li><b>internet_protocol</b>: Can be <b>DualStack</b> (IPv6 & IPv4) or <b>IPv4</b>.</li>\n  </ul>"
      parameters: []
      responses:
        200:
          description: 'Successful response with a list of network offerings.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: offering_id_1
                      name: OfferingL2
                      displayname: 'Offering L2'
                      displayname_fa: 'آفرینگ L2'
                      hourly_started_price: 5
                      traffic_transfer_overprice: 0
                      traffic_transfer_plan: 500
                      networkrate: 100
                      type: L2
                      description: 'L2 network offering'
                      internet_protocol: IPv4
                    -
                      id: offering_id_2
                      name: OfferingIsolated
                      displayname: 'Offering Isolated'
                      displayname_fa: 'آفرینگ ایزوله'
                      hourly_started_price: 8
                      traffic_transfer_overprice: 2
                      traffic_transfer_plan: 800
                      networkrate: 200
                      type: Isolated
                      description: 'Isolated network offering'
                      internet_protocol: DualStack
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: offering_id_1
                        name: OfferingL2
                        displayname: 'Offering L2'
                        displayname_fa: 'آفرینگ L2'
                        hourly_started_price: 5
                        traffic_transfer_overprice: 0
                        traffic_transfer_plan: 500
                        networkrate: 100
                        type: L2
                        description: 'L2 network offering'
                        internet_protocol: IPv4
                      -
                        id: offering_id_2
                        name: OfferingIsolated
                        displayname: 'Offering Isolated'
                        displayname_fa: 'آفرینگ ایزوله'
                        hourly_started_price: 8
                        traffic_transfer_overprice: 2
                        traffic_transfer_plan: 800
                        networkrate: 200
                        type: Isolated
                        description: 'Isolated network offering'
                        internet_protocol: DualStack
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: offering_id_1
                        name:
                          type: string
                          example: OfferingL2
                        displayname:
                          type: string
                          example: 'Offering L2'
                        displayname_fa:
                          type: string
                          example: 'آفرینگ L2'
                        hourly_started_price:
                          type: integer
                          example: 5
                        traffic_transfer_overprice:
                          type: integer
                          example: 0
                        traffic_transfer_plan:
                          type: integer
                          example: 500
                        networkrate:
                          type: integer
                          example: 100
                        type:
                          type: string
                          example: L2
                        description:
                          type: string
                          example: 'L2 network offering'
                        internet_protocol:
                          type: string
                          example: IPv4
      tags:
        - Network
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
  '/zone/{zoneId}/kubernetes':
    get:
      summary: Index
      operationId: index
      description: ' <aside class="notice">need <small class="badge">kubernetes:cluster:list</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Successful response with cluster list.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 01F8MECHZX3TBDSZ7XRADM79XE
                      name: example-cluster
                      description: 'This is a test cluster'
                      zone_id: zone-id
                      status: Running
                      kubernetes_version:
                        id: k8s-version-id
                        version: 1.26.14
                        enabled: true
                        min_cpu: 2
                        min_memory: 2048
                      service_offering:
                        id: service-offering-id
                        name: service-offering-name
                        hourly_price:
                          up: 100
                          down: 100
                        hardware:
                          cpu_core: 4
                          memory_mb: 4096
                          cpu_speed_MHz: 2300
                          root_disk_size_gB: 50
                          network_rate: 980
                          disk_iops: 2500
                      ssh_key: 'ssh-ed25519 ...'
                      ha_enabled: false
                      cluster_size: 1
                      created_at: 1737794395
                      updated_at: 1737794395
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 01F8MECHZX3TBDSZ7XRADM79XE
                        name: example-cluster
                        description: 'This is a test cluster'
                        zone_id: zone-id
                        status: Running
                        kubernetes_version:
                          id: k8s-version-id
                          version: 1.26.14
                          enabled: true
                          min_cpu: 2
                          min_memory: 2048
                        service_offering:
                          id: service-offering-id
                          name: service-offering-name
                          hourly_price:
                            up: 100
                            down: 100
                          hardware:
                            cpu_core: 4
                            memory_mb: 4096
                            cpu_speed_MHz: 2300
                            root_disk_size_gB: 50
                            network_rate: 980
                            disk_iops: 2500
                        ssh_key: 'ssh-ed25519 ...'
                        ha_enabled: false
                        cluster_size: 1
                        created_at: 1737794395
                        updated_at: 1737794395
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: 01F8MECHZX3TBDSZ7XRADM79XE
                        name:
                          type: string
                          example: example-cluster
                        description:
                          type: string
                          example: 'This is a test cluster'
                        zone_id:
                          type: string
                          example: zone-id
                        status:
                          type: string
                          example: Running
                        kubernetes_version:
                          type: object
                          properties:
                            id:
                              type: string
                              example: k8s-version-id
                            version:
                              type: string
                              example: 1.26.14
                            enabled:
                              type: boolean
                              example: true
                            min_cpu:
                              type: integer
                              example: 2
                            min_memory:
                              type: integer
                              example: 2048
                        service_offering:
                          type: object
                          properties:
                            id:
                              type: string
                              example: service-offering-id
                            name:
                              type: string
                              example: service-offering-name
                            hourly_price:
                              type: object
                              properties:
                                up:
                                  type: integer
                                  example: 100
                                down:
                                  type: integer
                                  example: 100
                            hardware:
                              type: object
                              properties:
                                cpu_core:
                                  type: integer
                                  example: 4
                                memory_mb:
                                  type: integer
                                  example: 4096
                                cpu_speed_MHz:
                                  type: integer
                                  example: 2300
                                root_disk_size_gB:
                                  type: integer
                                  example: 50
                                network_rate:
                                  type: integer
                                  example: 980
                                disk_iops:
                                  type: integer
                                  example: 2500
                        ssh_key:
                          type: string
                          example: 'ssh-ed25519 ...'
                        ha_enabled:
                          type: boolean
                          example: false
                        cluster_size:
                          type: integer
                          example: 1
                        created_at:
                          type: integer
                          example: 1737794395
                        updated_at:
                          type: integer
                          example: 1737794395
      tags:
        - Kubernetes
    post:
      summary: Create
      operationId: create
      description: " <aside class=\"notice\">need <small class=\"badge\">kubernetes:cluster:create</small> ability for api token</aside>\n\n <b>Note:</b> This function runs asynchronously in the background. The response will be:<br>\n <pre>{\n   \"data\": {\n       \"success\": true\n   }\n }</pre>\n To check the status of the created cluster, use the <b>List Cluster</b> endpoint and review the <code>status</code> field.\n </p>"
      parameters: []
      responses:
        200:
          description: 'Successful response'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    success: true
                properties:
                  data:
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
        422:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Validation error - Name is required.'
                    type: object
                    example:
                      message: 'The name field is required.'
                      errors:
                        name:
                          - 'The name field is required.'
                    properties:
                      message:
                        type: string
                        example: 'The name field is required.'
                      errors:
                        type: object
                        properties:
                          name:
                            type: array
                            example:
                              - 'The name field is required.'
                            items:
                              type: string
                  -
                    description: 'Validation error - Kubernetes Version ID is required.'
                    type: object
                    example:
                      message: 'The kubernetes version id field is required.'
                      errors:
                        kubernetes_version_id:
                          - 'The kubernetes version id field is required.'
                    properties:
                      message:
                        type: string
                        example: 'The kubernetes version id field is required.'
                      errors:
                        type: object
                        properties:
                          kubernetes_version_id:
                            type: array
                            example:
                              - 'The kubernetes version id field is required.'
                            items:
                              type: string
                  -
                    description: 'Validation error - Service Offering ID is required.'
                    type: object
                    example:
                      message: 'The service offering id field is required.'
                      errors:
                        service_offering_id:
                          - 'The service offering id field is required.'
                    properties:
                      message:
                        type: string
                        example: 'The service offering id field is required.'
                      errors:
                        type: object
                        properties:
                          service_offering_id:
                            type: array
                            example:
                              - 'The service offering id field is required.'
                            items:
                              type: string
                  -
                    description: 'Validation error - HA Enabled is required.'
                    type: object
                    example:
                      message: 'The ha enabled field is required.'
                      errors:
                        ha_enabled:
                          - 'The ha enabled field is required.'
                    properties:
                      message:
                        type: string
                        example: 'The ha enabled field is required.'
                      errors:
                        type: object
                        properties:
                          ha_enabled:
                            type: array
                            example:
                              - 'The ha enabled field is required.'
                            items:
                              type: string
                  -
                    description: 'Validation error - SSH Key is required.'
                    type: object
                    example:
                      message: 'The ssh key field is required.'
                      errors:
                        ssh_key:
                          - 'The ssh key field is required.'
                    properties:
                      message:
                        type: string
                        example: 'The ssh key field is required.'
                      errors:
                        type: object
                        properties:
                          ssh_key:
                            type: array
                            example:
                              - 'The ssh key field is required.'
                            items:
                              type: string
                  -
                    description: 'Validation error - Network ID is required.'
                    type: object
                    example:
                      message: 'The network id field is required.'
                      errors:
                        network_id:
                          - 'The network id field is required.'
                    properties:
                      message:
                        type: string
                        example: 'The network id field is required.'
                      errors:
                        type: object
                        properties:
                          network_id:
                            type: array
                            example:
                              - 'The network id field is required.'
                            items:
                              type: string
                  -
                    description: 'Validation error - Invalid Kubernetes Version ID.'
                    type: object
                    example:
                      message: 'The selected kubernetes version id is invalid.'
                      errors:
                        kubernetes_version_id:
                          - 'The selected kubernetes version id is invalid.'
                    properties:
                      message:
                        type: string
                        example: 'The selected kubernetes version id is invalid.'
                      errors:
                        type: object
                        properties:
                          kubernetes_version_id:
                            type: array
                            example:
                              - 'The selected kubernetes version id is invalid.'
                            items:
                              type: string
                  -
                    description: 'Validation error - Invalid Service Offering ID.'
                    type: object
                    example:
                      message: 'The selected service offering id is invalid.'
                      errors:
                        service_offering_id:
                          - 'The selected service offering id is invalid.'
                    properties:
                      message:
                        type: string
                        example: 'The selected service offering id is invalid.'
                      errors:
                        type: object
                        properties:
                          service_offering_id:
                            type: array
                            example:
                              - 'The selected service offering id is invalid.'
                            items:
                              type: string
                  -
                    description: 'Validation error - Invalid Network ID.'
                    type: object
                    example:
                      message: 'The selected network id is invalid.'
                      errors:
                        network_id:
                          - 'The selected network id is invalid.'
                    properties:
                      message:
                        type: string
                        example: 'The selected network id is invalid.'
                      errors:
                        type: object
                        properties:
                          network_id:
                            type: array
                            example:
                              - 'The selected network id is invalid.'
                            items:
                              type: string
                  -
                    description: "Validation error - Customer's CPU limit exceeds."
                    type: object
                    example:
                      message: 'The kubernetes version id field is required.'
                      errors:
                        kubernetes_version_id:
                          - "The required CPU (cpu core) exceeds the customer's limit (in core count)."
                    properties:
                      message:
                        type: string
                        example: 'The kubernetes version id field is required.'
                      errors:
                        type: object
                        properties:
                          kubernetes_version_id:
                            type: array
                            example:
                              - "The required CPU (cpu core) exceeds the customer's limit (in core count)."
                            items:
                              type: string
                  -
                    description: "Validation error - Customer's Memory (RAM) limit exceeds."
                    type: object
                    example:
                      message: 'The kubernetes version id field is required.'
                      errors:
                        kubernetes_version_id:
                          - "The required memory (memory MB) exceeds the customer's limit (in MB)."
                    properties:
                      message:
                        type: string
                        example: 'The kubernetes version id field is required.'
                      errors:
                        type: object
                        properties:
                          kubernetes_version_id:
                            type: array
                            example:
                              - "The required memory (memory MB) exceeds the customer's limit (in MB)."
                            items:
                              type: string
                  -
                    description: "Validation error - Customer's Disk limit exceeds."
                    type: object
                    example:
                      message: 'The kubernetes version id field is required.'
                      errors:
                        kubernetes_version_id:
                          - "The required primary storage (disk GB) exceeds the customer's limit (in GB)."
                    properties:
                      message:
                        type: string
                        example: 'The kubernetes version id field is required.'
                      errors:
                        type: object
                        properties:
                          kubernetes_version_id:
                            type: array
                            example:
                              - "The required primary storage (disk GB) exceeds the customer's limit (in GB)."
                            items:
                              type: string
      tags:
        - Kubernetes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the Kubernetes cluster. Must be between 3 and 255 characters.'
                  example: my-k8s-cluster
                  nullable: false
                kubernetes_version_id:
                  type: string
                  description: 'The unique identifier for the Kubernetes version to be used.'
                  example: 01F8MECHZX3RZ8Y6B8Q5F1E3V6
                  nullable: false
                service_offering_id:
                  type: string
                  description: 'The unique identifier for the service offering associated with the cluster.'
                  example: 01F8MECHZX3RZ8Y6B8Q5F1E3V7
                  nullable: false
                ha_enabled:
                  type: boolean
                  description: 'Indicates if high availability is enabled for the cluster.'
                  example: false
                  nullable: false
                sshkey_id:
                  type: string
                  description: 'A valid SSH public key identifier for accessing the cluster nodes.'
                  example: 01F8MECHZX3RZ8Y6B8Q5F1E3V7
                  nullable: false
                network_id:
                  type: string
                  description: 'The unique identifier for the network associated with the cluster.'
                  example: 01F8MECHZX3RZ8Y6B8Q5F1E3V5
                  nullable: false
                description:
                  type: string
                  description: 'A brief description of the Kubernetes cluster.'
                  example: 'This is a test Kubernetes cluster.'
                  nullable: true
                cluster_size:
                  type: integer
                  description: 'The size of the cluster. Must be a positive integer.'
                  example: 3
                  nullable: true
                private_registry:
                  type: object
                  description: 'Configuration for a private container registry.'
                  example:
                    username: my-username
                    password: my-password
                    url: 'https://my-private-registry.com'
                  nullable: true
                  properties: {  }
                ha_config:
                  type: object
                  description: 'Configuration for high availability settings, if enabled.'
                  example:
                    controller_nodes: 3
                    external_loadbalancer_ip: 192.0.2.1
                  nullable: true
                  properties: {  }
              required:
                - name
                - kubernetes_version_id
                - service_offering_id
                - ha_enabled
                - sshkey_id
                - network_id
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
  '/zone/{zoneId}/kubernetes/events':
    get:
      summary: 'Kubernetes Service Events'
      operationId: kubernetesServiceEvents
      description: ' <aside class="notice">need <small class="badge">kubernetes:events:list</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Success Response'
          content:
            text/plain:
              schema:
                type: string
                example: "{\n        \"data\": [\n            {\n                \"product_id\": \"01F8MECHZX3TBDSZ7XRADM79XE\",\n                \"type\": \"customer\",\n                \"content\": \"A kubernetes cluster event occurred.\",\n                \"created_at\": 1739256828\n            },\n        ],\n        \"meta\": {\n            \"current_page\": 1,\n            \"from\": 1,\n            \"last_page\": 10,\n            \"per_page\": 20,\n            \"to\": 20,\n            \"total\": 200\n        }\n}"
      tags:
        - Kubernetes
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: 'The type of events to filter'
                  example: system
                  nullable: false
                product_model:
                  type: string
                  description: 'Filter by product model. One of: network, kubernetes_cluster, bucket, instance_network_secondary_ips, instance, zone, network_public_ip, vpn_connection, instance_data_volumes, customer, network_nat.'
                  example: instance
                  nullable: false
                  enum:
                    - network
                    - kubernetes_cluster
                    - bucket
                    - instance_network_secondary_ips
                    - instance
                    - zone
                    - network_public_ip
                    - vpn_connection
                    - instance_data_volumes
                    - customer
                    - network_nat
                from:
                  type: integer
                  description: 'The timestamp to start filtering events from'
                  example: 1707653422
                  nullable: false
                to:
                  type: integer
                  description: 'The timestamp to end filtering events'
                  example: 1707653999
                  nullable: false
                page:
                  type: integer
                  description: 'Page number for pagination. Must be a positive integer between 1 and 10,000. Must be at least 1. Must not be greater than 10000.'
                  example: 1
                  nullable: false
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
  '/zone/{zoneId}/kubernetes/versions':
    get:
      summary: 'List Kubernetes Versions'
      operationId: listKubernetesVersions
      description: ' <aside class="notice">need <small class="badge">kubernetes:versions:list</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Successful response with available Kubernetes versions.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 01jetc3f8f218krnm9hwh46j8d
                      version: 1.30.3
                      enabled: true
                      min_cpu: 2
                      min_memory: 2048
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 01jetc3f8f218krnm9hwh46j8d
                        version: 1.30.3
                        enabled: true
                        min_cpu: 2
                        min_memory: 2048
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: 01jetc3f8f218krnm9hwh46j8d
                        version:
                          type: string
                          example: 1.30.3
                        enabled:
                          type: boolean
                          example: true
                        min_cpu:
                          type: integer
                          example: 2
                        min_memory:
                          type: integer
                          example: 2048
      tags:
        - Kubernetes
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
  '/zone/{zoneId}/kubernetes/{clusterId}':
    get:
      summary: Show
      operationId: show
      description: ' <aside class="notice">need <small class="badge">kubernetes:cluster:show</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Successful response with cluster details.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 01F8MECHZX3TBDSZ7XRADM79XE
                    name: example-cluster
                    description: 'This is a test cluster'
                    zone_id: 01F8MECHZX3TBDSZ7XRADM79XE
                    status: Running
                    kubernetes_version:
                      id: k8s-version-id
                      version: 1.26.14
                      enabled: true
                      min_cpu: 2
                      min_memory: 2048
                    service_offering:
                      id: service-offering-id
                      name: service-offering-name
                      is_public: true
                      is_available: true
                      hourly_price:
                        up: 100
                        down: 100
                      hardware:
                        cpu_core: 4
                        memory_mb: 4096
                        cpu_speed_MHz: 2300
                        root_disk_size_gB: 50
                        network_rate: 980
                        disk_iops: 2500
                    ssh_key: 'ssh-ed25519 ...'
                    ha_enabled: false
                    cluster_size: 1
                    created_at: 1737794395
                    updated_at: 1737794395
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 01F8MECHZX3TBDSZ7XRADM79XE
                      name:
                        type: string
                        example: example-cluster
                      description:
                        type: string
                        example: 'This is a test cluster'
                      zone_id:
                        type: string
                        example: 01F8MECHZX3TBDSZ7XRADM79XE
                      status:
                        type: string
                        example: Running
                      kubernetes_version:
                        type: object
                        properties:
                          id:
                            type: string
                            example: k8s-version-id
                          version:
                            type: string
                            example: 1.26.14
                          enabled:
                            type: boolean
                            example: true
                          min_cpu:
                            type: integer
                            example: 2
                          min_memory:
                            type: integer
                            example: 2048
                      service_offering:
                        type: object
                        properties:
                          id:
                            type: string
                            example: service-offering-id
                          name:
                            type: string
                            example: service-offering-name
                          is_public:
                            type: boolean
                            example: true
                          is_available:
                            type: boolean
                            example: true
                          hourly_price:
                            type: object
                            properties:
                              up:
                                type: integer
                                example: 100
                              down:
                                type: integer
                                example: 100
                          hardware:
                            type: object
                            properties:
                              cpu_core:
                                type: integer
                                example: 4
                              memory_mb:
                                type: integer
                                example: 4096
                              cpu_speed_MHz:
                                type: integer
                                example: 2300
                              root_disk_size_gB:
                                type: integer
                                example: 50
                              network_rate:
                                type: integer
                                example: 980
                              disk_iops:
                                type: integer
                                example: 2500
                      ssh_key:
                        type: string
                        example: 'ssh-ed25519 ...'
                      ha_enabled:
                        type: boolean
                        example: false
                      cluster_size:
                        type: integer
                        example: 1
                      created_at:
                        type: integer
                        example: 1737794395
                      updated_at:
                        type: integer
                        example: 1737794395
      tags:
        - Kubernetes
    put:
      summary: Update
      operationId: update
      description: ' <aside class="notice">need <small class="badge">kubernetes:cluster:update</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Successful response'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 01F8MECHZX3TBDSZ7XRADM79XE
                    name: example-cluster
                    description: 'This is a test cluster'
                    zone_id: zone-id
                    status: Running
                    kubernetes_version:
                      id: k8s-version-id
                      version: 1.26.14
                      enabled: true
                      min_cpu: 2
                      min_memory: 2048
                    service_offering:
                      id: service-offering-id
                      name: service-offering-name
                      is_public: true
                      is_available: true
                      hourly_price:
                        up: 100
                        down: 100
                      hardware:
                        cpu_core: 4
                        memory_mb: 4096
                        cpu_speed_MHz: 2300
                        root_disk_size_gB: 50
                        network_rate: 980
                        disk_iops: 2500
                    ssh_key: 'ssh-ed25519 ...'
                    ha_enabled: false
                    cluster_size: 1
                    created_at: 1737794395
                    updated_at: 1737794395
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 01F8MECHZX3TBDSZ7XRADM79XE
                      name:
                        type: string
                        example: example-cluster
                      description:
                        type: string
                        example: 'This is a test cluster'
                      zone_id:
                        type: string
                        example: zone-id
                      status:
                        type: string
                        example: Running
                      kubernetes_version:
                        type: object
                        properties:
                          id:
                            type: string
                            example: k8s-version-id
                          version:
                            type: string
                            example: 1.26.14
                          enabled:
                            type: boolean
                            example: true
                          min_cpu:
                            type: integer
                            example: 2
                          min_memory:
                            type: integer
                            example: 2048
                      service_offering:
                        type: object
                        properties:
                          id:
                            type: string
                            example: service-offering-id
                          name:
                            type: string
                            example: service-offering-name
                          is_public:
                            type: boolean
                            example: true
                          is_available:
                            type: boolean
                            example: true
                          hourly_price:
                            type: object
                            properties:
                              up:
                                type: integer
                                example: 100
                              down:
                                type: integer
                                example: 100
                          hardware:
                            type: object
                            properties:
                              cpu_core:
                                type: integer
                                example: 4
                              memory_mb:
                                type: integer
                                example: 4096
                              cpu_speed_MHz:
                                type: integer
                                example: 2300
                              root_disk_size_gB:
                                type: integer
                                example: 50
                              network_rate:
                                type: integer
                                example: 980
                              disk_iops:
                                type: integer
                                example: 2500
                      ssh_key:
                        type: string
                        example: 'ssh-ed25519 ...'
                      ha_enabled:
                        type: boolean
                        example: false
                      cluster_size:
                        type: integer
                        example: 1
                      created_at:
                        type: integer
                        example: 1737794395
                      updated_at:
                        type: integer
                        example: 1737794395
        422:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'Validation error - Invalid Name format.'
                    type: object
                    example:
                      message: 'The name field must be a string.'
                      errors:
                        name:
                          - 'The name field must be a string.'
                    properties:
                      message:
                        type: string
                        example: 'The name field must be a string.'
                      errors:
                        type: object
                        properties:
                          name:
                            type: array
                            example:
                              - 'The name field must be a string.'
                            items:
                              type: string
                  -
                    description: 'Validation error - Invalid Description format.'
                    type: object
                    example:
                      message: 'The description field must be a string.'
                      errors:
                        description:
                          - 'The description field must be a string.'
                    properties:
                      message:
                        type: string
                        example: 'The description field must be a string.'
                      errors:
                        type: object
                        properties:
                          description:
                            type: array
                            example:
                              - 'The description field must be a string.'
                            items:
                              type: string
      tags:
        - Kubernetes
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: fuga
                  nullable: true
                description:
                  type: string
                  description: ''
                  example: 'Maiores autem ut consequuntur.'
                  nullable: true
    delete:
      summary: Delete
      operationId: delete
      description: ' <aside class="notice">need <small class="badge">kubernetes:cluster:delete</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Successful deletion'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Kubernetes cluster deleted successfully'
                properties:
                  message:
                    type: string
                    example: 'Kubernetes cluster deleted successfully'
      tags:
        - Kubernetes
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
      -
        in: path
        name: clusterId
        description: 'The ID of the cluster.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
  '/zone/{zoneId}/kubernetes/{clusterId}/events':
    get:
      summary: Events
      operationId: events
      description: ' <aside class="notice">need <small class="badge">kubernetes:cluster:event:list</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Success Response'
          content:
            text/plain:
              schema:
                type: string
                example: "{\n        \"data\": [\n            {\n                \"product_id\": \"01F8MECHZX3TBDSZ7XRADM79XE\",\n                \"type\": \"customer\",\n                \"content\": \"A kubernetes cluster event occurred.\",\n                \"created_at\": 1739256828\n            },\n        ],\n        \"meta\": {\n            \"current_page\": 1,\n            \"from\": 1,\n            \"last_page\": 10,\n            \"per_page\": 20,\n            \"to\": 20,\n            \"total\": 200\n        }\n}"
      tags:
        - Kubernetes
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: 'The type of events to filter'
                  example: system
                  nullable: false
                product_model:
                  type: string
                  description: 'Filter by product model. One of: network, kubernetes_cluster, bucket, instance_network_secondary_ips, instance, zone, network_public_ip, vpn_connection, instance_data_volumes, customer, network_nat.'
                  example: instance
                  nullable: false
                  enum:
                    - network
                    - kubernetes_cluster
                    - bucket
                    - instance_network_secondary_ips
                    - instance
                    - zone
                    - network_public_ip
                    - vpn_connection
                    - instance_data_volumes
                    - customer
                    - network_nat
                from:
                  type: integer
                  description: 'The timestamp to start filtering events from'
                  example: 1707653422
                  nullable: false
                to:
                  type: integer
                  description: 'The timestamp to end filtering events'
                  example: 1707653999
                  nullable: false
                page:
                  type: integer
                  description: 'Page number for pagination. Must be a positive integer between 1 and 10,000. Must be at least 1. Must not be greater than 10000.'
                  example: 1
                  nullable: false
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
      -
        in: path
        name: clusterId
        description: 'The ID of the cluster.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
  '/zone/{zoneId}/kubernetes/{clusterId}/start':
    post:
      summary: Start
      operationId: start
      description: ' <aside class="notice">need <small class="badge">kubernetes:cluster:start</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Successful start'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 01F8MECHZX3TBDSZ7XRADM79XE
                    name: example-cluster
                    description: 'This is a test cluster'
                    zone_id: zone-id
                    status: Starting
                    kubernetes_version:
                      id: k8s-version-id
                      version: 1.26.14
                      enabled: true
                      min_cpu: 2
                      min_memory: 2048
                    service_offering:
                      id: service-offering-id
                      name: service-offering-name
                      is_public: true
                      is_available: true
                      hourly_price:
                        up: 100
                        down: 100
                      hardware:
                        cpu_core: 4
                        memory_mb: 4096
                        cpu_speed_MHz: 2300
                        root_disk_size_gB: 50
                        network_rate: 980
                        disk_iops: 2500
                    ssh_key: 'ssh-ed25519 ...'
                    ha_enabled: false
                    cluster_size: 1
                    created_at: 1737794395
                    updated_at: 1737794395
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 01F8MECHZX3TBDSZ7XRADM79XE
                      name:
                        type: string
                        example: example-cluster
                      description:
                        type: string
                        example: 'This is a test cluster'
                      zone_id:
                        type: string
                        example: zone-id
                      status:
                        type: string
                        example: Starting
                      kubernetes_version:
                        type: object
                        properties:
                          id:
                            type: string
                            example: k8s-version-id
                          version:
                            type: string
                            example: 1.26.14
                          enabled:
                            type: boolean
                            example: true
                          min_cpu:
                            type: integer
                            example: 2
                          min_memory:
                            type: integer
                            example: 2048
                      service_offering:
                        type: object
                        properties:
                          id:
                            type: string
                            example: service-offering-id
                          name:
                            type: string
                            example: service-offering-name
                          is_public:
                            type: boolean
                            example: true
                          is_available:
                            type: boolean
                            example: true
                          hourly_price:
                            type: object
                            properties:
                              up:
                                type: integer
                                example: 100
                              down:
                                type: integer
                                example: 100
                          hardware:
                            type: object
                            properties:
                              cpu_core:
                                type: integer
                                example: 4
                              memory_mb:
                                type: integer
                                example: 4096
                              cpu_speed_MHz:
                                type: integer
                                example: 2300
                              root_disk_size_gB:
                                type: integer
                                example: 50
                              network_rate:
                                type: integer
                                example: 980
                              disk_iops:
                                type: integer
                                example: 2500
                      ssh_key:
                        type: string
                        example: 'ssh-ed25519 ...'
                      ha_enabled:
                        type: boolean
                        example: false
                      cluster_size:
                        type: integer
                        example: 1
                      created_at:
                        type: integer
                        example: 1737794395
                      updated_at:
                        type: integer
                        example: 1737794395
      tags:
        - Kubernetes
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
      -
        in: path
        name: clusterId
        description: 'The ID of the cluster.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
  '/zone/{zoneId}/kubernetes/{clusterId}/stop':
    post:
      summary: Stop
      operationId: stop
      description: ' <aside class="notice">need <small class="badge">kubernetes:cluster:stop</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Successful stop'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 01F8MECHZX3TBDSZ7XRADM79XE
                    name: example-cluster
                    description: 'This is a test cluster'
                    zone_id: zone-id
                    status: Running
                    kubernetes_version:
                      id: k8s-version-id
                      version: 1.26.14
                      enabled: true
                      min_cpu: 2
                      min_memory: 2048
                    service_offering:
                      id: service-offering-id
                      name: service-offering-name
                      is_public: true
                      is_available: true
                      hourly_price:
                        up: 100
                        down: 100
                      hardware:
                        cpu_core: 4
                        memory_mb: 4096
                        cpu_speed_MHz: 2300
                        root_disk_size_gB: 50
                        network_rate: 980
                        disk_iops: 2500
                    ssh_key: 'ssh-ed25519 ...'
                    ha_enabled: false
                    cluster_size: 1
                    created_at: 1737794395
                    updated_at: 1737794395
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 01F8MECHZX3TBDSZ7XRADM79XE
                      name:
                        type: string
                        example: example-cluster
                      description:
                        type: string
                        example: 'This is a test cluster'
                      zone_id:
                        type: string
                        example: zone-id
                      status:
                        type: string
                        example: Running
                      kubernetes_version:
                        type: object
                        properties:
                          id:
                            type: string
                            example: k8s-version-id
                          version:
                            type: string
                            example: 1.26.14
                          enabled:
                            type: boolean
                            example: true
                          min_cpu:
                            type: integer
                            example: 2
                          min_memory:
                            type: integer
                            example: 2048
                      service_offering:
                        type: object
                        properties:
                          id:
                            type: string
                            example: service-offering-id
                          name:
                            type: string
                            example: service-offering-name
                          is_public:
                            type: boolean
                            example: true
                          is_available:
                            type: boolean
                            example: true
                          hourly_price:
                            type: object
                            properties:
                              up:
                                type: integer
                                example: 100
                              down:
                                type: integer
                                example: 100
                          hardware:
                            type: object
                            properties:
                              cpu_core:
                                type: integer
                                example: 4
                              memory_mb:
                                type: integer
                                example: 4096
                              cpu_speed_MHz:
                                type: integer
                                example: 2300
                              root_disk_size_gB:
                                type: integer
                                example: 50
                              network_rate:
                                type: integer
                                example: 980
                              disk_iops:
                                type: integer
                                example: 2500
                      ssh_key:
                        type: string
                        example: 'ssh-ed25519 ...'
                      ha_enabled:
                        type: boolean
                        example: false
                      cluster_size:
                        type: integer
                        example: 1
                      created_at:
                        type: integer
                        example: 1737794395
                      updated_at:
                        type: integer
                        example: 1737794395
      tags:
        - Kubernetes
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
      -
        in: path
        name: clusterId
        description: 'The ID of the cluster.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
  '/zone/{zoneId}/kubernetes/{clusterId}/scale':
    post:
      summary: Scale
      operationId: scale
      description: ' <aside class="notice">need <small class="badge">kubernetes:cluster:scale</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Successful scaling'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 01F8MECHZX3TBDSZ7XRADM79XE
                    name: example-cluster
                    description: 'This is a test cluster'
                    zone_id: zone-id
                    status: Scaling
                    kubernetes_version:
                      id: k8s-version-id
                      version: 1.26.14
                      enabled: true
                      min_cpu: 2
                      min_memory: 2048
                    service_offering:
                      id: service-offering-id
                      name: service-offering-name
                      is_public: true
                      is_available: true
                      hourly_price:
                        up: 100
                        down: 100
                      hardware:
                        cpu_core: 4
                        memory_mb: 4096
                        cpu_speed_MHz: 2300
                        root_disk_size_gB: 50
                        network_rate: 980
                        disk_iops: 2500
                    ssh_key: 'ssh-ed25519 ...'
                    ha_enabled: false
                    cluster_size: 1
                    created_at: 1737794395
                    updated_at: 1737794395
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 01F8MECHZX3TBDSZ7XRADM79XE
                      name:
                        type: string
                        example: example-cluster
                      description:
                        type: string
                        example: 'This is a test cluster'
                      zone_id:
                        type: string
                        example: zone-id
                      status:
                        type: string
                        example: Scaling
                      kubernetes_version:
                        type: object
                        properties:
                          id:
                            type: string
                            example: k8s-version-id
                          version:
                            type: string
                            example: 1.26.14
                          enabled:
                            type: boolean
                            example: true
                          min_cpu:
                            type: integer
                            example: 2
                          min_memory:
                            type: integer
                            example: 2048
                      service_offering:
                        type: object
                        properties:
                          id:
                            type: string
                            example: service-offering-id
                          name:
                            type: string
                            example: service-offering-name
                          is_public:
                            type: boolean
                            example: true
                          is_available:
                            type: boolean
                            example: true
                          hourly_price:
                            type: object
                            properties:
                              up:
                                type: integer
                                example: 100
                              down:
                                type: integer
                                example: 100
                          hardware:
                            type: object
                            properties:
                              cpu_core:
                                type: integer
                                example: 4
                              memory_mb:
                                type: integer
                                example: 4096
                              cpu_speed_MHz:
                                type: integer
                                example: 2300
                              root_disk_size_gB:
                                type: integer
                                example: 50
                              network_rate:
                                type: integer
                                example: 980
                              disk_iops:
                                type: integer
                                example: 2500
                      ssh_key:
                        type: string
                        example: 'ssh-ed25519 ...'
                      ha_enabled:
                        type: boolean
                        example: false
                      cluster_size:
                        type: integer
                        example: 1
                      created_at:
                        type: integer
                        example: 1737794395
                      updated_at:
                        type: integer
                        example: 1737794395
        422:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'The auto scaling field is required.'
                    type: object
                    example:
                      message: 'The auto scaling field is required.'
                      errors:
                        auto_scaling:
                          - 'The auto scaling field is required.'
                    properties:
                      message:
                        type: string
                        example: 'The auto scaling field is required.'
                      errors:
                        type: object
                        properties:
                          auto_scaling:
                            type: array
                            example:
                              - 'The auto scaling field is required.'
                            items:
                              type: string
                  -
                    description: 'Invalid auto scaling format.'
                    type: object
                    example:
                      message: 'The auto scaling field must be true or false.'
                      errors:
                        auto_scaling:
                          - 'The auto scaling field must be true or false.'
                    properties:
                      message:
                        type: string
                        example: 'The auto scaling field must be true or false.'
                      errors:
                        type: object
                        properties:
                          auto_scaling:
                            type: array
                            example:
                              - 'The auto scaling field must be true or false.'
                            items:
                              type: string
                  -
                    description: 'The cluster size field is required when auto scaling is false.'
                    type: object
                    example:
                      message: 'The cluster size field is required when auto scaling is false.'
                      errors:
                        cluster_size:
                          - 'The cluster size field is required when auto scaling is false.'
                    properties:
                      message:
                        type: string
                        example: 'The cluster size field is required when auto scaling is false.'
                      errors:
                        type: object
                        properties:
                          cluster_size:
                            type: array
                            example:
                              - 'The cluster size field is required when auto scaling is false.'
                            items:
                              type: string
                  -
                    description: 'Invalid cluster size format.'
                    type: object
                    example:
                      message: 'The cluster size must be an integer.'
                      errors:
                        cluster_size:
                          - 'The cluster size must be an integer.'
                    properties:
                      message:
                        type: string
                        example: 'The cluster size must be an integer.'
                      errors:
                        type: object
                        properties:
                          cluster_size:
                            type: array
                            example:
                              - 'The cluster size must be an integer.'
                            items:
                              type: string
                  -
                    description: 'The min cluster size field is required when auto scaling is true.'
                    type: object
                    example:
                      message: 'The min cluster size field is required when auto scaling is true.'
                      errors:
                        min_cluster_size:
                          - 'The min cluster size field is required when auto scaling is true.'
                    properties:
                      message:
                        type: string
                        example: 'The min cluster size field is required when auto scaling is true.'
                      errors:
                        type: object
                        properties:
                          min_cluster_size:
                            type: array
                            example:
                              - 'The min cluster size field is required when auto scaling is true.'
                            items:
                              type: string
                  -
                    description: 'Invalid min cluster size format.'
                    type: object
                    example:
                      message: 'The min cluster size must be an integer.'
                      errors:
                        min_cluster_size:
                          - 'The min cluster size must be an integer.'
                    properties:
                      message:
                        type: string
                        example: 'The min cluster size must be an integer.'
                      errors:
                        type: object
                        properties:
                          min_cluster_size:
                            type: array
                            example:
                              - 'The min cluster size must be an integer.'
                            items:
                              type: string
                  -
                    description: 'The max cluster size field is required when auto scaling is true.'
                    type: object
                    example:
                      message: 'The max cluster size field is required when auto scaling is true.'
                      errors:
                        max_cluster_size:
                          - 'The max cluster size field is required when auto scaling is true.'
                    properties:
                      message:
                        type: string
                        example: 'The max cluster size field is required when auto scaling is true.'
                      errors:
                        type: object
                        properties:
                          max_cluster_size:
                            type: array
                            example:
                              - 'The max cluster size field is required when auto scaling is true.'
                            items:
                              type: string
                  -
                    description: 'Invalid max cluster size format.'
                    type: object
                    example:
                      message: 'The max cluster size must be an integer.'
                      errors:
                        max_cluster_size:
                          - 'The max cluster size must be an integer.'
                    properties:
                      message:
                        type: string
                        example: 'The max cluster size must be an integer.'
                      errors:
                        type: object
                        properties:
                          max_cluster_size:
                            type: array
                            example:
                              - 'The max cluster size must be an integer.'
                            items:
                              type: string
      tags:
        - Kubernetes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                auto_scaling:
                  type: boolean
                  description: 'Indicates whether auto-scaling is enabled.'
                  example: false
                  nullable: false
                cluster_size:
                  type: integer
                  description: 'The desired size of the cluster. Must be at least 1.'
                  example: 3
                  nullable: true
                min_cluster_size:
                  type: integer
                  description: 'The minimum size of the cluster when auto-scaling is enabled. Must be at least 1.'
                  example: 1
                  nullable: true
                max_cluster_size:
                  type: integer
                  description: 'The maximum size of the cluster when auto-scaling is enabled. Must be at least 1.'
                  example: 5
                  nullable: true
              required:
                - auto_scaling
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
      -
        in: path
        name: clusterId
        description: 'The ID of the cluster.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
  '/zone/{zoneId}/kubernetes/{clusterId}/service-offering':
    post:
      summary: 'Update Service Offering'
      operationId: updateServiceOffering
      description: ' <aside class="notice">need <small class="badge">kubernetes:cluster:update-service-offering</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Successful service offering update'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 01F8MECHZX3TBDSZ7XRADM79XE
                    name: example-cluster
                    description: 'This is a test cluster'
                    zone_id: zone-id
                    status: Running
                    kubernetes_version:
                      id: k8s-version-id
                      version: 1.26.14
                      enabled: true
                      min_cpu: 2
                      min_memory: 2048
                    service_offering:
                      id: service-offering-id
                      name: service-offering-name
                      is_public: true
                      is_available: true
                      hourly_price:
                        up: 100
                        down: 100
                      hardware:
                        cpu_core: 4
                        memory_mb: 4096
                        cpu_speed_MHz: 2300
                        root_disk_size_gB: 50
                        network_rate: 980
                        disk_iops: 2500
                    ssh_key: 'ssh-ed25519 ...'
                    ha_enabled: false
                    cluster_size: 1
                    created_at: 1737794395
                    updated_at: 1737794395
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 01F8MECHZX3TBDSZ7XRADM79XE
                      name:
                        type: string
                        example: example-cluster
                      description:
                        type: string
                        example: 'This is a test cluster'
                      zone_id:
                        type: string
                        example: zone-id
                      status:
                        type: string
                        example: Running
                      kubernetes_version:
                        type: object
                        properties:
                          id:
                            type: string
                            example: k8s-version-id
                          version:
                            type: string
                            example: 1.26.14
                          enabled:
                            type: boolean
                            example: true
                          min_cpu:
                            type: integer
                            example: 2
                          min_memory:
                            type: integer
                            example: 2048
                      service_offering:
                        type: object
                        properties:
                          id:
                            type: string
                            example: service-offering-id
                          name:
                            type: string
                            example: service-offering-name
                          is_public:
                            type: boolean
                            example: true
                          is_available:
                            type: boolean
                            example: true
                          hourly_price:
                            type: object
                            properties:
                              up:
                                type: integer
                                example: 100
                              down:
                                type: integer
                                example: 100
                          hardware:
                            type: object
                            properties:
                              cpu_core:
                                type: integer
                                example: 4
                              memory_mb:
                                type: integer
                                example: 4096
                              cpu_speed_MHz:
                                type: integer
                                example: 2300
                              root_disk_size_gB:
                                type: integer
                                example: 50
                              network_rate:
                                type: integer
                                example: 980
                              disk_iops:
                                type: integer
                                example: 2500
                      ssh_key:
                        type: string
                        example: 'ssh-ed25519 ...'
                      ha_enabled:
                        type: boolean
                        example: false
                      cluster_size:
                        type: integer
                        example: 1
                      created_at:
                        type: integer
                        example: 1737794395
                      updated_at:
                        type: integer
                        example: 1737794395
      tags:
        - Kubernetes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                service_offering_id:
                  type: string
                  description: 'The ID of the new service offering to be applied to the cluster.'
                  example: 01F8MECHZX3TBDSZ7XRADM79XE
                  nullable: false
              required:
                - service_offering_id
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
      -
        in: path
        name: clusterId
        description: 'The ID of the cluster.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
  '/zone/{zoneId}/kubernetes/service-offerings':
    get:
      summary: 'List Service Offerings'
      operationId: listServiceOfferings
      description: ' <aside class="notice">need <small class="badge">kubernetes:service-offerings:list</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Successful response with available service offerings.'
          content:
            text/plain:
              schema:
                type: string
                example: "{\n        \"data\": [\n            {\n                \"id\": \"01hytvspdx8rzae97ba2qc8fvs\",\n                \"name\": \"n04-04-050-980-v3\",\n                \"is_public\": true,\n                \"is_available\": true,\n                \"hourly_price\": {\n                    \"up\": 100,\n                    \"down\": 100\n                },\n                \"hourly_price_no_discount\": {\n                    \"up\": 100,\n                    \"down\": 100\n                },\n                \"description\": null,\n                \"hardware\": {\n                    \"cpu_core\": 4,\n                    \"memory_mb\": 4096,\n                    \"cpu_speed_MHz\": 2300,\n                    \"root_disk_size_gB\": 50,\n                    \"network_rate\": 980,\n                    \"disk_iops\": 2500\n                }\n            },\n            // Additional service offerings...\n        ]\n    }"
      tags:
        - Kubernetes
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
  '/zone/{zoneId}/object-storage/events':
    get:
      summary: 'Object Storage Events'
      operationId: objectStorageEvents
      description: ' <aside class="notice">need <small class="badge">object_storage:event:list</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Success Response'
          content:
            text/plain:
              schema:
                type: string
                example: "{\n        \"data\": [\n            {\n                \"product_id\": \"01F8MECHZX3TBDSZ7XRADM79XE\",\n                \"type\": \"customer\",\n                \"content\": \"A bucket cluster event occurred.\",\n                \"created_at\": 1739256828\n            },\n        ],\n        \"meta\": {\n            \"current_page\": 1,\n            \"from\": 1,\n            \"last_page\": 10,\n            \"per_page\": 20,\n            \"to\": 20,\n            \"total\": 200\n        }\n}"
      tags:
        - 'Object Storage'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: 'The type of events to filter'
                  example: system
                  nullable: false
                from:
                  type: integer
                  description: 'The timestamp to start filtering events from'
                  example: 1707653422
                  nullable: false
                to:
                  type: integer
                  description: 'The timestamp to end filtering events'
                  example: 1707653999
                  nullable: false
                page:
                  type: integer
                  description: 'Page number for pagination. Must be between 1 and 10,000 if provided.'
                  example: 1
                  nullable: false
    parameters:
      -
        in: path
        name: zoneId
        description: ''
        example: rerum
        required: true
        schema:
          type: string
  '/zone/{zoneId}/object-storage/buckets':
    get:
      summary: Index
      operationId: index
      description: ' <aside class="notice">need <small class="badge">object_storage:bucket:list</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Successful response'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: string
                      name: string
                      url: string
                      access_key: string|null
                      secret_key: string|null
                      status: string
                      policy: string
                      size: integer
                      created_at: integer
                      updated_at: integer
                      tier: string|null
                      is_failed: boolean
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: string
                        name: string
                        url: string
                        access_key: string|null
                        secret_key: string|null
                        status: string
                        policy: string
                        size: integer
                        created_at: integer
                        updated_at: integer
                        tier: string|null
                        is_failed: boolean
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: string
                        name:
                          type: string
                          example: string
                        url:
                          type: string
                          example: string
                        access_key:
                          type: string
                          example: string|null
                        secret_key:
                          type: string
                          example: string|null
                        status:
                          type: string
                          example: string
                        policy:
                          type: string
                          example: string
                        size:
                          type: string
                          example: integer
                        created_at:
                          type: string
                          example: integer
                        updated_at:
                          type: string
                          example: integer
                        tier:
                          type: string
                          example: string|null
                        is_failed:
                          type: string
                          example: boolean
      tags:
        - 'Object Storage'
    post:
      summary: 'Create (Async)'
      operationId: createAsync
      description: "  <aside class=\"notice\">need <small class=\"badge\">object_storage:bucket:create</small> ability for api token</aside>\n  <br><b>Note:</b> This endpoint works asynchronously. To check the result, use the bucket list endpoint to see the status of your bucket."
      parameters: []
      responses:
        201:
          description: 'Bucket creation request accepted. Operation is asynchronous; check the bucket list for status.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    success: true
                properties:
                  data:
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
        422:
          description: 'The name field is required.'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The name field is required.'
                  errors:
                    name:
                      - 'The name field is required.'
                properties:
                  message:
                    type: string
                    example: 'The name field is required.'
                  errors:
                    type: object
                    properties:
                      name:
                        type: array
                        example:
                          - 'The name field is required.'
                        items:
                          type: string
      tags:
        - 'Object Storage'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the bucket to be created. Must not be greater than 255 characters.'
                  example: my-new-bucket
                  nullable: false
                policy:
                  type: string
                  description: 'The access policy for the bucket (Private or Public).'
                  example: Private
                  nullable: false
                  enum:
                    - Private
                    - Public
              required:
                - name
                - policy
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: string
  '/zone/{zoneId}/object-storage/buckets/{bucketId}':
    get:
      summary: Show
      operationId: show
      description: ' <aside class="notice">need <small class="badge">object_storage:bucket:show</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Successful response'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: string
                    name: string
                    url: string
                    access_key: string|null
                    secret_key: string|null
                    status: string
                    policy: string
                    size: integer
                    created_at: integer
                    updated_at: integer
                    tier: string|null
                    is_failed: boolean
                    message: string|null
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: string
                      name:
                        type: string
                        example: string
                      url:
                        type: string
                        example: string
                      access_key:
                        type: string
                        example: string|null
                      secret_key:
                        type: string
                        example: string|null
                      status:
                        type: string
                        example: string
                      policy:
                        type: string
                        example: string
                      size:
                        type: string
                        example: integer
                      created_at:
                        type: string
                        example: integer
                      updated_at:
                        type: string
                        example: integer
                      tier:
                        type: string
                        example: string|null
                      is_failed:
                        type: string
                        example: boolean
                      message:
                        type: string
                        example: string|null
      tags:
        - 'Object Storage'
    put:
      summary: 'Update (Async)'
      operationId: updateAsync
      description: "  <aside class=\"notice\">need <small class=\"badge\">object_storage:bucket:update</small> ability for api token</aside>\n  <br><b>Note:</b> This endpoint works asynchronously. After calling this endpoint, the bucket will be in the <code>Updating</code> status. Shortly after, the status will change to <code>Active</code> once the update is complete. Use the bucket list or show endpoint to check the current status."
      parameters: []
      responses:
        200:
          description: 'Bucket update request accepted. Operation is asynchronous; check the bucket list or show endpoint for status.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: string
                    name: string
                    url: string
                    access_key: string|null
                    secret_key: string|null
                    status: string
                    policy: string
                    size: integer
                    created_at: integer
                    updated_at: integer
                    tier: string|null
                    is_failed: boolean
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: string
                      name:
                        type: string
                        example: string
                      url:
                        type: string
                        example: string
                      access_key:
                        type: string
                        example: string|null
                      secret_key:
                        type: string
                        example: string|null
                      status:
                        type: string
                        example: string
                      policy:
                        type: string
                        example: string
                      size:
                        type: string
                        example: integer
                      created_at:
                        type: string
                        example: integer
                      updated_at:
                        type: string
                        example: integer
                      tier:
                        type: string
                        example: string|null
                      is_failed:
                        type: string
                        example: boolean
        422:
          description: 'The policy field is required.'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The policy field is required.'
                  errors:
                    policy:
                      - 'The policy field is required.'
                properties:
                  message:
                    type: string
                    example: 'The policy field is required.'
                  errors:
                    type: object
                    properties:
                      policy:
                        type: array
                        example:
                          - 'The policy field is required.'
                        items:
                          type: string
      tags:
        - 'Object Storage'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                policy:
                  type: string
                  description: 'The new access policy for the bucket (Private or Public).'
                  example: Public
                  nullable: false
                  enum:
                    - Private
                    - Public
              required:
                - policy
    delete:
      summary: Delete
      operationId: delete
      description: ' <aside class="notice">need <small class="badge">object_storage:bucket:delete</small> ability for api token</aside>'
      parameters: []
      responses:
        204:
          description: 'Successful response'
      tags:
        - 'Object Storage'
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
      -
        in: path
        name: bucketId
        description: 'The ID of the bucket.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
  '/zone/{zoneId}/object-storage/buckets/{bucketId}/events':
    get:
      summary: 'Bucket Events'
      operationId: bucketEvents
      description: ' <aside class="notice">need <small class="badge">object_storage:event:list</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Success Response'
          content:
            text/plain:
              schema:
                type: string
                example: "{\n        \"data\": [\n            {\n                \"product_id\": \"01F8MECHZX3TBDSZ7XRADM79XE\",\n                \"type\": \"customer\",\n                \"content\": \"A bucket cluster event occurred.\",\n                \"created_at\": 1739256828\n            },\n        ],\n        \"meta\": {\n            \"current_page\": 1,\n            \"from\": 1,\n            \"last_page\": 10,\n            \"per_page\": 20,\n            \"to\": 20,\n            \"total\": 200\n        }\n}"
      tags:
        - 'Object Storage'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: 'The type of events to filter'
                  example: system
                  nullable: false
                from:
                  type: integer
                  description: 'The timestamp to start filtering events from'
                  example: 1707653422
                  nullable: false
                to:
                  type: integer
                  description: 'The timestamp to end filtering events'
                  example: 1707653999
                  nullable: false
                page:
                  type: integer
                  description: 'Page number for pagination. Must be between 1 and 10,000 if provided.'
                  example: 1
                  nullable: false
    parameters:
      -
        in: path
        name: zoneId
        description: 'The ID of the zone.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
      -
        in: path
        name: bucketId
        description: 'The ID of the bucket.'
        example: 01F8MECHZX3TBDSZ7XRADM79XE
        required: true
        schema:
          type: ulid
  /dns/domains:
    get:
      summary: Index
      operationId: index
      description: ' <aside class="notice">need <small class="badge">dns:domain:list</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Successful response'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      domain: string
                      status: string
                      dns_info:
                        virak_dns:
                          - string|null
                        domain_dns:
                          - string
                    -
                      domain: string
                      status: string
                      dns_info:
                        virak_dns:
                          - string|null
                        domain_dns:
                          - string
                properties:
                  data:
                    type: array
                    example:
                      -
                        domain: string
                        status: string
                        dns_info:
                          virak_dns:
                            - string|null
                          domain_dns:
                            - string
                      -
                        domain: string
                        status: string
                        dns_info:
                          virak_dns:
                            - string|null
                          domain_dns:
                            - string
                    items:
                      type: object
                      properties:
                        domain:
                          type: string
                          example: string
                        status:
                          type: string
                          example: string
                        dns_info:
                          type: object
                          properties:
                            virak_dns:
                              type: array
                              example:
                                - string|null
                              items:
                                type: string
                            domain_dns:
                              type: array
                              example:
                                - string
                              items:
                                type: string
      tags:
        - DNS
    post:
      summary: Create
      operationId: create
      description: ' <aside class="notice">need <small class="badge">dns:domain:create</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Successful response'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: success
                properties:
                  message:
                    type: string
                    example: success
        422:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'The domain field is required.'
                    type: object
                    example:
                      message: 'The domain field is required.'
                      errors:
                        domain:
                          - 'The domain field is required.'
                    properties:
                      message:
                        type: string
                        example: 'The domain field is required.'
                      errors:
                        type: object
                        properties:
                          domain:
                            type: array
                            example:
                              - 'The domain field is required.'
                            items:
                              type: string
                  -
                    description: 'Invalid domain name'
                    type: object
                    example:
                      message: 'The domain must be valid TLD.'
                      errors:
                        domain:
                          - 'The domain must be valid TLD.'
                    properties:
                      message:
                        type: string
                        example: 'The domain must be valid TLD.'
                      errors:
                        type: object
                        properties:
                          domain:
                            type: array
                            example:
                              - 'The domain must be valid TLD.'
                            items:
                              type: string
                  -
                    description: 'Invalid domain name (invalid TLD), check https://publicsuffix.org/list/public_suffix_list.dat for more information.'
                    type: object
                    example:
                      message: 'The domain must be valid domain.'
                      errors:
                        domain:
                          - 'The domain must be valid domain.'
                    properties:
                      message:
                        type: string
                        example: 'The domain must be valid domain.'
                      errors:
                        type: object
                        properties:
                          domain:
                            type: array
                            example:
                              - 'The domain must be valid domain.'
                            items:
                              type: string
                  -
                    description: 'Reached maximum limit of pending domains'
                    type: object
                    example:
                      message: 'The domain field is invalid.'
                      errors:
                        domain:
                          - 'The customer has reached the maximum limit of pending domains.'
                    properties:
                      message:
                        type: string
                        example: 'The domain field is invalid.'
                      errors:
                        type: object
                        properties:
                          domain:
                            type: array
                            example:
                              - 'The customer has reached the maximum limit of pending domains.'
                            items:
                              type: string
                  -
                    description: 'Not Allowed Domain'
                    type: object
                    example:
                      message: 'Not Allowed Domain'
                      errors:
                        domain:
                          - 'The zone is not allowed.'
                    properties:
                      message:
                        type: string
                        example: 'Not Allowed Domain'
                      errors:
                        type: object
                        properties:
                          domain:
                            type: array
                            example:
                              - 'The zone is not allowed.'
                            items:
                              type: string
                  -
                    description: 'Not Allowed TLD'
                    type: object
                    example:
                      message: 'Not Allowed Domain (TLD)'
                      errors:
                        domain:
                          - 'The TLD of the zone is not allowed.'
                    properties:
                      message:
                        type: string
                        example: 'Not Allowed Domain (TLD)'
                      errors:
                        type: object
                        properties:
                          domain:
                            type: array
                            example:
                              - 'The TLD of the zone is not allowed.'
                            items:
                              type: string
      tags:
        - DNS
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                domain:
                  type: string
                  description: 'Domain name with valid TLD, cannot be a subdomain for creating DNS domain in Virak Cloud.'
                  example: domain.com
                  nullable: false
              required:
                - domain
  '/dns/domains/{domain}':
    get:
      summary: Show
      operationId: show
      description: ' <aside class="notice">need <small class="badge">dns:domain:show</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Successful response'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    domain: string
                    status: string
                    dns_info:
                      virak_dns:
                        - string|null
                      domain_dns:
                        - string
                properties:
                  data:
                    type: object
                    properties:
                      domain:
                        type: string
                        example: string
                      status:
                        type: string
                        example: string
                      dns_info:
                        type: object
                        properties:
                          virak_dns:
                            type: array
                            example:
                              - string|null
                            items:
                              type: string
                          domain_dns:
                            type: array
                            example:
                              - string
                            items:
                              type: string
        422:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'The domain field is required.'
                    type: object
                    example:
                      message: 'The domain field is required.'
                      errors:
                        domain:
                          - 'The domain field is required.'
                    properties:
                      message:
                        type: string
                        example: 'The domain field is required.'
                      errors:
                        type: object
                        properties:
                          domain:
                            type: array
                            example:
                              - 'The domain field is required.'
                            items:
                              type: string
                  -
                    description: 'The domain field is invalid.'
                    type: object
                    example:
                      message: 'The domain field is invalid.'
                      errors:
                        domain:
                          - 'The domain field is invalid.'
                    properties:
                      message:
                        type: string
                        example: 'The domain field is invalid.'
                      errors:
                        type: object
                        properties:
                          domain:
                            type: array
                            example:
                              - 'The domain field is invalid.'
                            items:
                              type: string
      tags:
        - DNS
    delete:
      summary: Delete
      operationId: delete
      description: ' <aside class="notice">need <small class="badge">dns:domain:delete</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Successful response'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: success
                properties:
                  message:
                    type: string
                    example: success
        422:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'The domain field is required.'
                    type: object
                    example:
                      message: 'The domain field is required.'
                      errors:
                        domain:
                          - 'The domain field is required.'
                    properties:
                      message:
                        type: string
                        example: 'The domain field is required.'
                      errors:
                        type: object
                        properties:
                          domain:
                            type: array
                            example:
                              - 'The domain field is required.'
                            items:
                              type: string
                  -
                    description: 'The domain field is invalid.'
                    type: object
                    example:
                      message: 'The domain field is invalid.'
                      errors:
                        domain:
                          - 'The domain field is invalid.'
                    properties:
                      message:
                        type: string
                        example: 'The domain field is invalid.'
                      errors:
                        type: object
                        properties:
                          domain:
                            type: array
                            example:
                              - 'The domain field is invalid.'
                            items:
                              type: string
      tags:
        - DNS
    parameters:
      -
        in: path
        name: domain
        description: "Customer's Domain."
        example: domain.com
        required: true
        schema:
          type: string
  '/dns/domains/{domain}/records':
    get:
      summary: Show
      operationId: show
      description: ' <aside class="notice">need <small class="badge">dns:domain:show</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Successful response'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    domain: string
                    status: string
                    dns_info:
                      virak_dns:
                        - string|null
                      domain_dns:
                        - string
                properties:
                  data:
                    type: object
                    properties:
                      domain:
                        type: string
                        example: string
                      status:
                        type: string
                        example: string
                      dns_info:
                        type: object
                        properties:
                          virak_dns:
                            type: array
                            example:
                              - string|null
                            items:
                              type: string
                          domain_dns:
                            type: array
                            example:
                              - string
                            items:
                              type: string
        422:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'The domain field is required.'
                    type: object
                    example:
                      message: 'The domain field is required.'
                      errors:
                        domain:
                          - 'The domain field is required.'
                    properties:
                      message:
                        type: string
                        example: 'The domain field is required.'
                      errors:
                        type: object
                        properties:
                          domain:
                            type: array
                            example:
                              - 'The domain field is required.'
                            items:
                              type: string
                  -
                    description: 'The domain field is invalid.'
                    type: object
                    example:
                      message: 'The domain field is invalid.'
                      errors:
                        domain:
                          - 'The domain field is invalid.'
                    properties:
                      message:
                        type: string
                        example: 'The domain field is invalid.'
                      errors:
                        type: object
                        properties:
                          domain:
                            type: array
                            example:
                              - 'The domain field is invalid.'
                            items:
                              type: string
      tags:
        - DNS
    post:
      summary: Create
      operationId: create
      description: ' <aside class="notice">need <small class="badge">dns:domain:record:create</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Successful response'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: success
                properties:
                  message:
                    type: string
                    example: success
        422:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'The domain field is required.'
                    type: object
                    example:
                      message: 'The domain field is required.'
                      errors:
                        zone:
                          - 'The domain field is required.'
                    properties:
                      message:
                        type: string
                        example: 'The domain field is required.'
                      errors:
                        type: object
                        properties:
                          zone:
                            type: array
                            example:
                              - 'The domain field is required.'
                            items:
                              type: string
                  -
                    description: 'Invalid domain format.'
                    type: object
                    example:
                      message: 'The domain must be a string.'
                      errors:
                        zone:
                          - 'The domain must be a string.'
                    properties:
                      message:
                        type: string
                        example: 'The domain must be a string.'
                      errors:
                        type: object
                        properties:
                          zone:
                            type: array
                            example:
                              - 'The domain must be a string.'
                            items:
                              type: string
                  -
                    description: 'Invalid domain selection.'
                    type: object
                    example:
                      message: 'The selected domain is invalid.'
                      errors:
                        zone:
                          - 'The selected domain is invalid.'
                    properties:
                      message:
                        type: string
                        example: 'The selected domain is invalid.'
                      errors:
                        type: object
                        properties:
                          zone:
                            type: array
                            example:
                              - 'The selected domain is invalid.'
                            items:
                              type: string
                  -
                    description: 'The type field is required.'
                    type: object
                    example:
                      message: 'The type field is required.'
                      errors:
                        type:
                          - 'The type field is required.'
                    properties:
                      message:
                        type: string
                        example: 'The type field is required.'
                      errors:
                        type: object
                        properties:
                          type:
                            type: array
                            example:
                              - 'The type field is required.'
                            items:
                              type: string
                  -
                    description: 'Invalid DNS record type.'
                    type: object
                    example:
                      message: 'The selected type is invalid.'
                      errors:
                        type:
                          - 'The selected type is invalid.'
                    properties:
                      message:
                        type: string
                        example: 'The selected type is invalid.'
                      errors:
                        type: object
                        properties:
                          type:
                            type: array
                            example:
                              - 'The selected type is invalid.'
                            items:
                              type: string
                  -
                    description: 'The record field is required.'
                    type: object
                    example:
                      message: 'The record field is required.'
                      errors:
                        record:
                          - 'The record field is required.'
                    properties:
                      message:
                        type: string
                        example: 'The record field is required.'
                      errors:
                        type: object
                        properties:
                          record:
                            type: array
                            example:
                              - 'The record field is required.'
                            items:
                              type: string
                  -
                    description: 'Invalid record format.'
                    type: object
                    example:
                      message: 'The record must be a string.'
                      errors:
                        record:
                          - 'The record must be a string.'
                    properties:
                      message:
                        type: string
                        example: 'The record must be a string.'
                      errors:
                        type: object
                        properties:
                          record:
                            type: array
                            example:
                              - 'The record must be a string.'
                            items:
                              type: string
                  -
                    description: 'The ttl field is required.'
                    type: object
                    example:
                      message: 'The ttl field is required.'
                      errors:
                        ttl:
                          - 'The ttl field is required.'
                    properties:
                      message:
                        type: string
                        example: 'The ttl field is required.'
                      errors:
                        type: object
                        properties:
                          ttl:
                            type: array
                            example:
                              - 'The ttl field is required.'
                            items:
                              type: string
                  -
                    description: 'Invalid ttl format.'
                    type: object
                    example:
                      message: 'The ttl must be an integer.'
                      errors:
                        ttl:
                          - 'The ttl must be an integer.'
                    properties:
                      message:
                        type: string
                        example: 'The ttl must be an integer.'
                      errors:
                        type: object
                        properties:
                          ttl:
                            type: array
                            example:
                              - 'The ttl must be an integer.'
                            items:
                              type: string
      tags:
        - DNS
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                record:
                  type: string
                  description: 'The name of the DNS record.'
                  example: www.domain.com
                  nullable: false
                type:
                  type: string
                  description: 'The type of the DNS record (e.g., A, AAAA, CNAME, NS, MX, TXT, SRV, PTR, CAA, TLSA).'
                  example: A
                  nullable: false
                ttl:
                  type: integer
                  description: 'The time-to-live for the DNS record in seconds. Must be at least 60.'
                  example: 3600
                  nullable: false
                content:
                  type: string
                  description: 'The Record Content.'
                  example: 8.8.8.8
                  nullable: false
                priority:
                  type: integer
                  description: 'Priority for MX and SRV records. Required if type is MX or SRV. This field is required when <code>type</code> is <code>MX</code> or <code>SRV</code>.'
                  example: 10
                  nullable: false
                weight:
                  type: integer
                  description: 'Weight for SRV records. Required if type is SRV. This field is required when <code>type</code> is <code>SRV</code>.'
                  example: 5
                  nullable: false
                port:
                  type: integer
                  description: 'Port for SRV records. Required if type is SRV. This field is required when <code>type</code> is <code>SRV</code>.'
                  example: 80
                  nullable: false
                flags:
                  type: integer
                  description: 'Flags for CAA records. Required if type is CAA. This field is required when <code>type</code> is <code>CAA</code>.'
                  example: 0
                  nullable: false
                tag:
                  type: string
                  description: 'Tag for CAA records. Required if type is CAA. This field is required when <code>type</code> is <code>CAA</code>.'
                  example: issue
                  nullable: false
                license:
                  type: integer
                  description: 'License for TLSA records. Required if type is TLSA. This field is required when <code>type</code> is <code>TLSA</code>.'
                  example: 3
                  nullable: false
                choicer:
                  type: integer
                  description: 'Choicer for TLSA records. Required if type is TLSA. This field is required when <code>type</code> is <code>TLSA</code>.'
                  example: 1
                  nullable: false
                match:
                  type: integer
                  description: 'Match for TLSA records. Required if type is TLSA. This field is required when <code>type</code> is <code>TLSA</code>.'
                  example: 2
                  nullable: false
              required:
                - record
                - type
                - ttl
                - content
    parameters:
      -
        in: path
        name: domain
        description: "Customer's Domain."
        example: domain.com
        required: true
        schema:
          type: string
  '/dns/domains/{domain}/records/{record}/{type}/{contentId}':
    put:
      summary: Update
      operationId: update
      description: ' <aside class="notice">need <small class="badge">dns:domain:record:update</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Successful response'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: success
                properties:
                  message:
                    type: string
                    example: success
        422:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'The domain field is required.'
                    type: object
                    example:
                      message: 'The domain field is required.'
                      errors:
                        domain:
                          - 'The domain field is required.'
                    properties:
                      message:
                        type: string
                        example: 'The domain field is required.'
                      errors:
                        type: object
                        properties:
                          domain:
                            type: array
                            example:
                              - 'The domain field is required.'
                            items:
                              type: string
                  -
                    description: 'Invalid domain format.'
                    type: object
                    example:
                      message: 'The domain must be a string.'
                      errors:
                        domain:
                          - 'The domain must be a string.'
                    properties:
                      message:
                        type: string
                        example: 'The domain must be a string.'
                      errors:
                        type: object
                        properties:
                          domain:
                            type: array
                            example:
                              - 'The domain must be a string.'
                            items:
                              type: string
                  -
                    description: 'Invalid domain selection.'
                    type: object
                    example:
                      message: 'The selected domain is invalid.'
                      errors:
                        domain:
                          - 'The selected domain is invalid.'
                    properties:
                      message:
                        type: string
                        example: 'The selected domain is invalid.'
                      errors:
                        type: object
                        properties:
                          domain:
                            type: array
                            example:
                              - 'The selected domain is invalid.'
                            items:
                              type: string
                  -
                    description: 'The type field is required.'
                    type: object
                    example:
                      message: 'The type field is required.'
                      errors:
                        type:
                          - 'The type field is required.'
                    properties:
                      message:
                        type: string
                        example: 'The type field is required.'
                      errors:
                        type: object
                        properties:
                          type:
                            type: array
                            example:
                              - 'The type field is required.'
                            items:
                              type: string
                  -
                    description: 'Invalid DNS record type.'
                    type: object
                    example:
                      message: 'The selected type is invalid.'
                      errors:
                        type:
                          - 'The selected type is invalid.'
                    properties:
                      message:
                        type: string
                        example: 'The selected type is invalid.'
                      errors:
                        type: object
                        properties:
                          type:
                            type: array
                            example:
                              - 'The selected type is invalid.'
                            items:
                              type: string
                  -
                    description: 'The record field is required.'
                    type: object
                    example:
                      message: 'The record field is required.'
                      errors:
                        record:
                          - 'The record field is required.'
                    properties:
                      message:
                        type: string
                        example: 'The record field is required.'
                      errors:
                        type: object
                        properties:
                          record:
                            type: array
                            example:
                              - 'The record field is required.'
                            items:
                              type: string
                  -
                    description: 'Invalid record format.'
                    type: object
                    example:
                      message: 'The record must be a string.'
                      errors:
                        record:
                          - 'The record must be a string.'
                    properties:
                      message:
                        type: string
                        example: 'The record must be a string.'
                      errors:
                        type: object
                        properties:
                          record:
                            type: array
                            example:
                              - 'The record must be a string.'
                            items:
                              type: string
                  -
                    description: 'The selected record does not exist.'
                    type: object
                    example:
                      message: 'The selected record is invalid.'
                      errors:
                        record:
                          - 'The selected record is invalid.'
                    properties:
                      message:
                        type: string
                        example: 'The selected record is invalid.'
                      errors:
                        type: object
                        properties:
                          record:
                            type: array
                            example:
                              - 'The selected record is invalid.'
                            items:
                              type: string
                  -
                    description: 'The ttl field is required.'
                    type: object
                    example:
                      message: 'The ttl field is required.'
                      errors:
                        ttl:
                          - 'The ttl field is required.'
                    properties:
                      message:
                        type: string
                        example: 'The ttl field is required.'
                      errors:
                        type: object
                        properties:
                          ttl:
                            type: array
                            example:
                              - 'The ttl field is required.'
                            items:
                              type: string
                  -
                    description: 'Invalid ttl format.'
                    type: object
                    example:
                      message: 'The ttl must be an integer.'
                      errors:
                        ttl:
                          - 'The ttl must be an integer.'
                    properties:
                      message:
                        type: string
                        example: 'The ttl must be an integer.'
                      errors:
                        type: object
                        properties:
                          ttl:
                            type: array
                            example:
                              - 'The ttl must be an integer.'
                            items:
                              type: string
                  -
                    description: 'The contentId field is required.'
                    type: object
                    example:
                      message: 'The contentId field is required.'
                      errors:
                        contentId:
                          - 'The contentId field is required.'
                    properties:
                      message:
                        type: string
                        example: 'The contentId field is required.'
                      errors:
                        type: object
                        properties:
                          contentId:
                            type: array
                            example:
                              - 'The contentId field is required.'
                            items:
                              type: string
                  -
                    description: 'Invalid contentId format.'
                    type: object
                    example:
                      message: 'The contentId must be a valid ULID.'
                      errors:
                        contentId:
                          - 'The contentId must be a valid ULID.'
                    properties:
                      message:
                        type: string
                        example: 'The contentId must be a valid ULID.'
                      errors:
                        type: object
                        properties:
                          contentId:
                            type: array
                            example:
                              - 'The contentId must be a valid ULID.'
                            items:
                              type: string
                  -
                    description: 'The selected contentId does not exist.'
                    type: object
                    example:
                      message: 'The selected contentId is invalid.'
                      errors:
                        contentId:
                          - 'The selected contentId is invalid.'
                    properties:
                      message:
                        type: string
                        example: 'The selected contentId is invalid.'
                      errors:
                        type: object
                        properties:
                          contentId:
                            type: array
                            example:
                              - 'The selected contentId is invalid.'
                            items:
                              type: string
      tags:
        - DNS
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ttl:
                  type: integer
                  description: 'The time-to-live for the DNS record in seconds. Must be at least 60.'
                  example: 3600
                  nullable: false
                content:
                  type: string
                  description: 'The Record Content.'
                  example: 8.8.8.8.8
                  nullable: false
                priority:
                  type: integer
                  description: 'Priority for MX and SRV records. Required if type is MX or SRV. This field is required when <code>type</code> is <code>MX</code> or <code>SRV</code>.'
                  example: 10
                  nullable: false
                weight:
                  type: integer
                  description: 'Weight for SRV records. Required if type is SRV. This field is required when <code>type</code> is <code>SRV</code>.'
                  example: 5
                  nullable: false
                port:
                  type: integer
                  description: 'Port for SRV records. Required if type is SRV. This field is required when <code>type</code> is <code>SRV</code>.'
                  example: 80
                  nullable: false
                flags:
                  type: integer
                  description: 'Flags for CAA records. Required if type is CAA. This field is required when <code>type</code> is <code>CAA</code>.'
                  example: 0
                  nullable: false
                tag:
                  type: string
                  description: 'Tag for CAA records. Required if type is CAA. This field is required when <code>type</code> is <code>CAA</code>.'
                  example: issue
                  nullable: false
                license:
                  type: integer
                  description: 'License for TLSA records. Required if type is TLSA. This field is required when <code>type</code> is <code>TLSA</code>.'
                  example: 3
                  nullable: false
                choicer:
                  type: integer
                  description: 'Choicer for TLSA records. Required if type is TLSA. This field is required when <code>type</code> is <code>TLSA</code>.'
                  example: 1
                  nullable: false
                match:
                  type: integer
                  description: 'Match for TLSA records. Required if type is TLSA. This field is required when <code>type</code> is <code>TLSA</code>.'
                  example: 2
                  nullable: false
              required:
                - ttl
                - content
    delete:
      summary: Delete
      operationId: delete
      description: ' <aside class="notice">need <small class="badge">dns:domain:record:delete</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Successful response'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: success
                properties:
                  message:
                    type: string
                    example: success
        422:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'The domain field is required.'
                    type: object
                    example:
                      message: 'The domain field is required.'
                      errors:
                        domain:
                          - 'The domain field is required.'
                    properties:
                      message:
                        type: string
                        example: 'The domain field is required.'
                      errors:
                        type: object
                        properties:
                          domain:
                            type: array
                            example:
                              - 'The domain field is required.'
                            items:
                              type: string
                  -
                    description: 'Invalid domain format.'
                    type: object
                    example:
                      message: 'The domain must be a string.'
                      errors:
                        domain:
                          - 'The domain must be a string.'
                    properties:
                      message:
                        type: string
                        example: 'The domain must be a string.'
                      errors:
                        type: object
                        properties:
                          domain:
                            type: array
                            example:
                              - 'The domain must be a string.'
                            items:
                              type: string
                  -
                    description: 'Invalid domain selection.'
                    type: object
                    example:
                      message: 'The selected domain is invalid.'
                      errors:
                        domain:
                          - 'The selected domain is invalid.'
                    properties:
                      message:
                        type: string
                        example: 'The selected domain is invalid.'
                      errors:
                        type: object
                        properties:
                          domain:
                            type: array
                            example:
                              - 'The selected domain is invalid.'
                            items:
                              type: string
                  -
                    description: 'The type field is required.'
                    type: object
                    example:
                      message: 'The type field is required.'
                      errors:
                        type:
                          - 'The type field is required.'
                    properties:
                      message:
                        type: string
                        example: 'The type field is required.'
                      errors:
                        type: object
                        properties:
                          type:
                            type: array
                            example:
                              - 'The type field is required.'
                            items:
                              type: string
                  -
                    description: 'Invalid DNS record type.'
                    type: object
                    example:
                      message: 'The selected type is invalid.'
                      errors:
                        type:
                          - 'The selected type is invalid.'
                    properties:
                      message:
                        type: string
                        example: 'The selected type is invalid.'
                      errors:
                        type: object
                        properties:
                          type:
                            type: array
                            example:
                              - 'The selected type is invalid.'
                            items:
                              type: string
                  -
                    description: 'The record field is required.'
                    type: object
                    example:
                      message: 'The record field is required.'
                      errors:
                        record:
                          - 'The record field is required.'
                    properties:
                      message:
                        type: string
                        example: 'The record field is required.'
                      errors:
                        type: object
                        properties:
                          record:
                            type: array
                            example:
                              - 'The record field is required.'
                            items:
                              type: string
                  -
                    description: 'Invalid record format.'
                    type: object
                    example:
                      message: 'The record must be a string.'
                      errors:
                        record:
                          - 'The record must be a string.'
                    properties:
                      message:
                        type: string
                        example: 'The record must be a string.'
                      errors:
                        type: object
                        properties:
                          record:
                            type: array
                            example:
                              - 'The record must be a string.'
                            items:
                              type: string
                  -
                    description: 'The selected record does not exist.'
                    type: object
                    example:
                      message: 'The selected record is invalid.'
                      errors:
                        record:
                          - 'The selected record is invalid.'
                    properties:
                      message:
                        type: string
                        example: 'The selected record is invalid.'
                      errors:
                        type: object
                        properties:
                          record:
                            type: array
                            example:
                              - 'The selected record is invalid.'
                            items:
                              type: string
                  -
                    description: 'The contentId field is required.'
                    type: object
                    example:
                      message: 'The contentId field is required.'
                      errors:
                        contentId:
                          - 'The contentId field is required.'
                    properties:
                      message:
                        type: string
                        example: 'The contentId field is required.'
                      errors:
                        type: object
                        properties:
                          contentId:
                            type: array
                            example:
                              - 'The contentId field is required.'
                            items:
                              type: string
                  -
                    description: 'Invalid contentId format.'
                    type: object
                    example:
                      message: 'The contentId must be a valid ULID.'
                      errors:
                        contentId:
                          - 'The contentId must be a valid ULID.'
                    properties:
                      message:
                        type: string
                        example: 'The contentId must be a valid ULID.'
                      errors:
                        type: object
                        properties:
                          contentId:
                            type: array
                            example:
                              - 'The contentId must be a valid ULID.'
                            items:
                              type: string
                  -
                    description: 'The selected contentId does not exist.'
                    type: object
                    example:
                      message: 'The selected contentId is invalid.'
                      errors:
                        contentId:
                          - 'The selected contentId is invalid.'
                    properties:
                      message:
                        type: string
                        example: 'The selected contentId is invalid.'
                      errors:
                        type: object
                        properties:
                          contentId:
                            type: array
                            example:
                              - 'The selected contentId is invalid.'
                            items:
                              type: string
      tags:
        - DNS
    parameters:
      -
        in: path
        name: domain
        description: "Customer's Domain."
        example: domain.com
        required: true
        schema:
          type: string
      -
        in: path
        name: record
        description: Record.
        example: blog.domain.com
        required: true
        schema:
          type: string
      -
        in: path
        name: type
        description: 'DNS record type'
        example: A
        required: true
        schema:
          type: string
      -
        in: path
        name: contentId
        description: 'Record Content Id'
        example: 01JJ1W1R241GRQYQ28703F8DSH
        required: true
        schema:
          type: ulid
  /dns/events:
    get:
      summary: 'DNS Events'
      operationId: dNSEvents
      description: ' <aside class="notice">need <small class="badge">dns:event:list</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Success Response'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      product_id: 01jz2ty8m3vd3m5g3n3r1dhfy2
                      type: system
                      content: 'دامنه domain.ir غیر فعال شد.'
                      created_at: 1752006606
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 1
                    per_page: 20
                    to: 1
                    total: 1
                properties:
                  data:
                    type: array
                    example:
                      -
                        product_id: 01jz2ty8m3vd3m5g3n3r1dhfy2
                        type: system
                        content: 'دامنه domain.ir غیر فعال شد.'
                        created_at: 1752006606
                    items:
                      type: object
                      properties:
                        product_id:
                          type: string
                          example: 01jz2ty8m3vd3m5g3n3r1dhfy2
                        type:
                          type: string
                          example: system
                        content:
                          type: string
                          example: 'دامنه domain.ir غیر فعال شد.'
                        created_at:
                          type: integer
                          example: 1752006606
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 1
                      per_page:
                        type: integer
                        example: 20
                      to:
                        type: integer
                        example: 1
                      total:
                        type: integer
                        example: 1
      tags:
        - DNS
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: 'The type of events to filter'
                  example: system
                  nullable: false
                from:
                  type: integer
                  description: 'The timestamp to start filtering events from'
                  example: 1707653422
                  nullable: false
                to:
                  type: integer
                  description: 'The timestamp to end filtering events'
                  example: 1707653999
                  nullable: false
                page:
                  type: integer
                  description: 'Page number for pagination. Must be between 1 and 10,000 if provided.'
                  example: 1
                  nullable: false
  /events:
    get:
      summary: 'List Customer Events'
      operationId: listCustomerEvents
      description: ' <aside class="notice">need <small class="badge">event:list</small> ability for api token</aside>'
      parameters: []
      responses:
        200:
          description: 'Success Response'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      product_id: 01F8MECHZX3TBDSZ7XRADM79XE
                      type: customer
                      content: 'A network event occurred.'
                      created_at: 1739256828
                    -
                      product_id: 01F8MECHZX3TBDSZ7XRADM79XE
                      type: system
                      content: 'A system event occurred.'
                      created_at: 1739256683
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 10
                    per_page: 20
                    to: 20
                    total: 200
                properties:
                  data:
                    type: array
                    example:
                      -
                        product_id: 01F8MECHZX3TBDSZ7XRADM79XE
                        type: customer
                        content: 'A network event occurred.'
                        created_at: 1739256828
                      -
                        product_id: 01F8MECHZX3TBDSZ7XRADM79XE
                        type: system
                        content: 'A system event occurred.'
                        created_at: 1739256683
                    items:
                      type: object
                      properties:
                        product_id:
                          type: string
                          example: 01F8MECHZX3TBDSZ7XRADM79XE
                        type:
                          type: string
                          example: customer
                        content:
                          type: string
                          example: 'A network event occurred.'
                        created_at:
                          type: integer
                          example: 1739256828
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 10
                      per_page:
                        type: integer
                        example: 20
                      to:
                        type: integer
                        example: 20
                      total:
                        type: integer
                        example: 200
      tags:
        - 'Event Management'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: 'The type of events to filter'
                  example: system
                  nullable: false
                product_model:
                  type: string
                  description: 'Filter by product model. One of: network, kubernetes_cluster, bucket, instance_network_secondary_ips, instance, zone, network_public_ip, vpn_connection, instance_data_volumes, customer, network_nat.'
                  example: instance
                  nullable: false
                  enum:
                    - network
                    - kubernetes_cluster
                    - bucket
                    - instance_network_secondary_ips
                    - instance
                    - zone
                    - network_public_ip
                    - vpn_connection
                    - instance_data_volumes
                    - customer
                    - network_nat
                from:
                  type: integer
                  description: 'The timestamp to start filtering events from'
                  example: 1707653422
                  nullable: false
                to:
                  type: integer
                  description: 'The timestamp to end filtering events'
                  example: 1707653999
                  nullable: false
                page:
                  type: integer
                  description: 'Page number for pagination. Must be a positive integer between 1 and 10,000.'
                  example: 1
                  nullable: false
tags:
  -
    name: Datacenter
    description: ''
  -
    name: User
    description: ''
  -
    name: Instance
    description: "\n<div class='sl-prose'>\n<p>An <b>Instance</b> represents a virtual machine (VM) or compute resource provisioned in a specific zone. Instances are the core compute units in the cloud platform, allowing users to run applications, host services, and manage workloads. Each instance is created from a template or image, has its own resources (CPU, memory, disk), and can be managed through various lifecycle operations.</p>\n\n<p><b>Key Concepts:</b></p>\n<ul>\n   <li><b>Instance:</b> A virtual machine or compute resource, including its configuration, status, and metadata.</li>\n   <li><b>Zone:</b> A physical or logical location where instances are provisioned. Each instance belongs to a zone.</li>\n   <li><b>VM Image:</b> The template or image used to create the instance, defining its operating system and base software.</li>\n   <li><b>Service Offering:</b> Defines the hardware resources (CPU, memory, disk, network) allocated to the instance.</li>\n   <li><b>Volume:</b> Persistent storage that can be attached to or detached from an instance.</li>\n   <li><b>Snapshot:</b> A point-in-time backup of an instance's volume, which can be created, deleted, or reverted.</li>\n   <li><b>Status:</b> The current state of the instance (e.g., 'Running', 'Stopped', 'Starting', 'Stopping', 'Error').</li>\n   <li><b>Metadata:</b> Custom key-value data associated with the instance.</li>\n</ul>\n\n<p><b>Instance Functionalities:</b></p>\n<ul>\n   <li>List all instances in a zone for the authenticated user.</li>\n   <li>Create, delete, and manage snapshots for instances.</li>\n   <li>Attach, detach, create, and delete volumes for instances.</li>\n   <li>Retrieve detailed information about each instance, including configuration, status, and related resources.</li>\n</ul>\n\n<p><b>Instance Statuses:</b></p>\n<ul>\n   <li><b>Running:</b> Instance is active and operational.</li>\n   <li><b>Stopped:</b> Instance is powered off.</li>\n   <li><b>Starting:</b> Instance is in the process of starting up.</li>\n   <li><b>Stopping:</b> Instance is in the process of shutting down.</li>\n   <li><b>Error:</b> Instance encountered an error during an operation.</li>\n</ul>\n</div>"
  -
    name: Network
    description: "\n<div class=\"sl-prose\">\n<p>The Firewall API provides a way to manage and enforce network security rules for your infrastructure. It allows you to control the flow of incoming (ingress) and outgoing (egress) traffic based on IP addresses, protocols, and ports.</p>\n\n<p><b>Key Concepts:</b></p>\n<ul>\n<li><b>Firewall Rule:</b> A specific directive that allows or denies traffic. Each rule targets a specific protocol and can define source/destination IPs and port ranges.</li>\n<li><b>Traffic Type:</b>\n<ul>\n<li><b>Ingress:</b> Traffic coming into your network.</li>\n<li><b>Egress:</b> Traffic going out from your network.</li>\n</ul>\n</li>\n<li><b>Protocol:</b> The network protocol the rule applies to. Common protocols include:\n<ul>\n<li><b>TCP (Transmission Control Protocol):</b> Used for reliable, ordered, and error-checked delivery of a stream of octets (e.g., web browsing, email).</li>\n<li><b>UDP (User Datagram Protocol):</b> A simpler, connectionless protocol used when speed is prioritized over reliability (e.g., video streaming, DNS).</li>\n<li><b>ICMP (Internet Control Message Protocol):</b> Used by network devices to send error messages and operational information (e.g., ping).</li>\n</ul>\n</li>\n<li><b>CIDR (Classless Inter-Domain Routing):</b> A method for allocating IP addresses and for IP routing. It's used to specify a range of IP addresses (e.g., <code>192.168.1.0/24</code>). Use <code>0.0.0.0/0</code> for all IPv4 addresses.</li>\n</ul>\n</div>"
  -
    name: Kubernetes
    description: "\n<div class=\"sl-prose\">\n<p>Kubernetes is an open-source platform designed for managing containerized workloads and services.  It provides a powerful and flexible way to deploy, scale, and manage applications across a cluster of machines. Think of it as an operating system for your cloud-native applications.</p>\n\n<p><b>Key Concepts:</b></p>\n<ul>\n   <li><b>Containers:</b>  Applications are packaged into containers, which are lightweight, standalone, and executable packages that include everything needed to run a piece of software (code, runtime, system tools, libraries, settings).</li>\n   <li><b>Nodes:</b>  A Kubernetes cluster consists of a set of worker machines, called nodes, that run containerized applications.  Every cluster has at least one worker node.</li>\n   <li><b>Control Plane:</b> The control plane manages the worker nodes and the Pods in the cluster. In production environments, the control plane usually runs across multiple computers and a cluster usually runs multiple nodes, providing fault-tolerance and high availability.</li>\n   <li><b>Pods:</b>  Pods are the smallest deployable units of computing that you can create and manage in Kubernetes. A Pod (as in a pod of whales or pea pod) is a group of one or more containers, with shared storage/network resources, and a specification for how to run the containers.</li>\n</ul>\n\n<p><b>Cluster Statuses:</b></p>\n<p>Each cluster can be in one of the following statuses, indicating its current operational state:</p>\n<ul>\n   <li><b>Pending:</b> The cluster is being created and is not yet ready for use.</li>\n   <li><b>Deleting:</b> The cluster is in the process of being deleted.</li>\n   <li><b>Deleted:</b> The cluster has been successfully deleted.</li>\n   <li><b>Started:</b> The cluster is running and ready to accept workloads.</li>\n   <li><b>Stopped:</b> The cluster has been stopped and is not currently running.</li>\n   <li><b>Failed:</b> An error occurred in the cluster, and it is not operational.</li>\n   <li><b>Alert:</b>  An issue has been detected with the cluster that requires attention.</li>\n   <li><b>Stopping:</b> The cluster is in the process of being stopped.</li>\n   <li><b>Starting:</b> The cluster is in the process of starting up.</li>\n   <li><b>Running:</b>  The cluster is operational and running normally.</li>\n   <li><b>Upgrading:</b> The cluster's Kubernetes version is being upgraded.</li>\n   <li><b>Scaling:</b> The number of nodes in the cluster is being adjusted.</li>\n   <li><b>UpdateServiceOffering:</b> The service offering (e.g., hardware configuration) of the cluster is being changed.</li>\n    <li><b>Suspend:</b> The cluster is in suspend state.</li>\n    <li><b>Suspending:</b> The cluster is in suspending process.</li>\n    <li><b>UnSuspending:</b> The cluster is in UnSuspending process.</li>\n</ul>\n</div>"
  -
    name: 'Object Storage'
    description: "\n<div class='sl-prose'>\n<p>Object storage is a data storage architecture that manages data as objects, as opposed to other storage architectures like file systems which manage data as a file hierarchy, and block storage which manages data as blocks within sectors and tracks.  Each object typically includes the data itself, a variable amount of metadata, and a globally unique identifier.</p>\n\n<p><b>Key Concepts:</b></p>\n<ul>\n   <li><b>Buckets:</b>  Buckets are containers for storing objects.  A bucket is similar to a folder in a file system, except that buckets cannot be nested.</li>\n   <li><b>Objects:</b> Objects are the fundamental entities stored in object storage.  An object consists of data (any sequence of bytes) and metadata (information about the object, such as its name, size, and content type).</li>\n   <li><b>Access Keys & Secret Keys:</b>  Object storage is typically accessed using an access key and a secret key, which are similar to a username and password. These keys are used to authenticate requests to the object storage service.</li>\n   <li><b>Policies:</b> Bucket policies define who has access to a bucket and what actions they can perform. Common policies include \"Private\" (only the owner has access) and \"Public Read\" (anyone can read the objects in the bucket).</li>\n   <li><b>URL:</b> Each bucket has url.</li>\n   <li><b>Status:</b> The current status of the bucket (e.g., 'Active', 'Creating', 'Deleting', 'Failed').</li>\n   <li><b>Tier:</b> storage tier (e.g., 'Standard', 'Infrequent Access', 'Archive').</li>\n</ul>\n<p><b>Bucket Statuses:</b></p>\n<ul>\n   <li><b>Active:</b> Bucket is ready.</li>\n   <li><b>Creating:</b> Bucket is creating.</li>\n   <li><b>Deleting:</b> Bucket is deleting.</li>\n   <li><b>Failed:</b> Bucket creation failed.</li>\n</ul>\n</div>"
  -
    name: DNS
    description: "\n<div class='sl-prose'>\n<p>A DNS Domain (or DNS Zone) is a distinct part of the domain namespace for which administrative responsibility has been delegated. Think of it as a container for DNS records for a specific domain and its subdomains (if any). Managing a DNS Domain involves creating, updating, and deleting DNS records within that domain.</p>\n\n<p><b>Key Concepts:</b></p>\n<ul>\n   <li><b>Domain:</b> A portion of the DNS namespace (e.g., example.com) that is managed as a single unit. A domain contains all the DNS records for that domain name and potentially its subdomains. This is also commonly referred to as a \"zone\".</li>\n   <li><b>Domain Name:</b> The domain name associated with the DNS Domain (e.g., example.com).</li>\n   <li><b>Status:</b> The current status of the DNS Domain (e.g., 'Active', 'Pending', 'Error').</li>\n   <li><b>DNS Info:</b> Information about the DNS servers responsible for the domain. This often includes:\n      <ul>\n         <li><b>virak_dns:</b> The nameservers provided by the service (e.g., ns1.virak.cloud, ns2.virak.cloud). These are the nameservers you should point your domain to at your registrar.</li>\n<li><b>domain_dns:</b> The current nameservers configured for the domain (as detected by the system). This might be different from `virak_dns` if the domain hasn't been pointed to our nameservers yet, or if the change hasn't fully propagated.</li>\n      </ul>\n   </li>\n   <li><b>TLD (Top-Level Domain):</b> The last part of a domain name (e.g., .com, .org, .net). Valid TLDs are required when creating a DNS Domain.</li>\n</ul>\n\n\n<p><b>Domain Management</b></p>\n<p>This API allows you to manage DNS Domains. You can create, list, retrieve details about, and delete domains. When you create a domain, you'll receive the `virak_dns` nameservers. You'll need to update your domain's nameserver settings at your domain registrar to point to these nameservers. This delegates authority for your domain's DNS to our service.</p>\n</div>"
  -
    name: 'Event Management'
    description: "\nAPIs for managing customer events"
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: 'You can retrieve your token by visiting your dashboard and clicking <b>Generate API token</b>.'
security:
  -
    default: []
